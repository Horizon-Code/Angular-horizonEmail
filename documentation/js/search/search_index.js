var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.331,1,0.905]],["body/components/AppComponent.html",[0,0.445,1,1.342,2,1.224,3,0.163,4,0.142,5,0.88,6,0.88,7,0.88,8,0.88,9,0.142,10,2.247,11,0.88,12,2.236,13,2.104,14,1.224,15,1.301,16,4.647,17,1.301,18,3.907,19,0.277,20,0.848,21,2.448,22,0.848,23,5.133,24,5.133,25,1.609,26,5.477,27,0.903,28,1.634,29,1.909,30,3.666,31,1.168,32,3.907,33,0.734,34,0.024,35,0.947,36,0.525,37,0.734,38,2.644,39,1.115,40,1.471,41,2.644,42,2.644,43,0.828,44,2.644,45,2.448,46,0.358,47,0.163,48,1.06,49,0.936,50,2.644,51,0.163,52,0.184,53,2.058,54,2.644,55,2.644,56,2.644,57,1.187,58,2.644,59,1.224,60,2.644,61,2.644,62,2.644,63,2.644,64,4.305,65,2.644,66,2.644,67,2.644,68,2.644,69,2.644,70,2.644,71,3.32,72,2.644,73,2.644,74,2.247,75,2.644,76,2.644,77,2.644,78,1.985,79,1.393,80,2.644,81,3.32,82,2.644,83,1.131,84,2.644,85,2.644,86,2.644,87,1.393,88,3.32,89,1.133,90,4.872,91,2.058,92,3.32,93,0.88,94,1.224,95,1.301,96,0.88,97,1.709,98,0.88,99,0.88,100,0.691,101,0.88,102,0.691,103,0.88,104,0.691,105,0.88,106,0.691,107,0.88,108,0.65,109,0.88,110,0.65,111,0.88,112,0.691,113,0.88,114,0.691,115,0.88,116,0.65,117,0.88,118,0.65,119,0.88,120,0.65,121,0.88,122,0.65,123,0.88,124,0.65,125,0.828,126,0.88,127,0.88,128,0.013,129,0.013]],["title/modules/AppModule.html",[130,1.824,131,2.344]],["body/modules/AppModule.html",[1,1.799,3,0.225,4,0.196,9,0.196,13,1.145,34,0.024,46,0.461,47,0.225,51,0.225,52,0.255,59,1.145,91,1.925,128,0.016,129,0.016,131,4.735,132,1.564,133,2.587,134,3.106,135,3.106,136,3.106,137,3.106,138,3.106,139,3.937,140,3.937,141,3.624,142,3.937,143,3.035,144,2.259,145,3.655,146,3.325,147,4.911,148,2.587,149,4.911,150,2.587,151,4.911,152,3.106,153,2.744,154,4.911,155,4.911,156,1.466,157,3.655,158,3.687,159,4.911,160,3.655,161,1.925,162,2.744,163,3.655,164,3.655,165,3.655]],["title/modules/AppRoutingModule.html",[130,1.824,139,2.14]],["body/modules/AppRoutingModule.html",[3,0.291,4,0.253,9,0.253,34,0.024,46,0.437,47,0.291,48,1.894,51,0.291,52,0.329,64,3.545,83,2.02,128,0.019,129,0.019,132,2.02,139,3.578,148,2.487,150,3.05,166,4.722,167,3.545,168,3.562,169,4.347,170,3.92,171,4.722,172,3.545,173,4.013,174,4.722,175,4.722,176,4.013,177,3.197]],["title/guards/AuthGuard.html",[170,2.344,178,2.6]],["body/guards/AuthGuard.html",[3,0.205,4,0.179,9,0.179,14,1.044,19,0.349,22,1.001,27,1.066,28,2.059,29,2.063,30,3.926,31,1.077,33,1.468,34,0.024,35,1.077,36,0.71,37,1.468,39,1.001,40,2.149,46,0.398,47,0.205,48,1.337,49,1.179,51,0.205,52,0.232,53,2.429,57,1.066,59,1.044,128,0.015,129,0.015,170,3.121,173,5.091,179,2.502,180,2.831,181,5.99,182,3.332,183,3.332,184,4.849,185,5.287,186,5.706,187,3.332,188,4.383,189,4.055,190,4.849,191,5.99,192,3.332,193,5.287,194,5.706,195,3.332,196,1.134,197,3.332,198,2.831,199,1.633,200,2.059,201,1.255,202,0.819,203,3.332,204,3.332,205,0.983,206,2.502,207,3.332,208,3.332,209,3.332,210,3.332,211,3.332,212,3.332,213,2.831]],["title/interceptors/AuthHttpInterceptor.html",[142,2.14,162,2.6]],["body/interceptors/AuthHttpInterceptor.html",[3,0.238,4,0.207,9,0.207,14,1.211,19,0.405,22,1.107,27,1.319,31,1.039,33,1.073,34,0.024,35,0.788,36,0.519,37,1.073,39,0.84,46,0.398,47,0.238,49,1.368,51,0.238,52,0.27,57,0.894,59,1.211,83,1.654,128,0.017,129,0.017,142,3.15,156,1.551,161,3.005,189,3.861,196,0.95,199,1.894,202,0.95,214,3.866,215,4.283,216,3.285,217,5.098,218,3.866,219,5.098,220,5.704,221,4.283,222,5.704,223,3.866,224,3.866,225,3.866,226,3.866,227,3.285,228,3.866,229,3.866,230,3.866,231,3.866,232,2.037,233,3.866,234,3.866,235,1.894,236,3.866,237,3.866,238,3.866,239,5.098,240,4.332,241,5.098,242,3.866,243,3.866,244,3.866,245,3.866]],["title/modules/AuthModule.html",[130,1.824,140,2.14]],["body/modules/AuthModule.html",[3,0.24,4,0.209,9,0.209,34,0.024,46,0.468,47,0.24,51,0.24,52,0.272,91,2.058,120,1.596,122,1.596,124,1.596,128,0.017,129,0.017,132,1.672,133,2.704,140,4.34,141,3.693,143,3.172,144,2.414,146,3.475,148,2.704,150,2.704,158,2.934,246,3.32,247,3.32,248,3.32,249,3.693,250,3.907,251,3.855,252,2.645,253,3.907,254,3.32,255,3.32,256,3.855,257,1.672,258,3.32,259,3.32]],["title/modules/AuthRoutingModule.html",[130,1.824,141,1.97]],["body/modules/AuthRoutingModule.html",[0,0.595,3,0.286,4,0.249,9,0.249,34,0.024,46,0.465,47,0.286,48,1.864,51,0.286,52,0.324,83,1.988,120,1.41,122,1.41,124,1.41,128,0.019,129,0.019,132,1.988,141,3.262,148,2.448,150,3.02,167,3.489,168,3.537,169,4.305,172,3.489,176,3.949,177,3.146,215,3.489,254,3.949,255,3.949,259,3.949,260,4.647,261,4.647]],["title/injectables/AuthService.html",[29,1.153,196,0.851]],["body/injectables/AuthService.html",[3,0.179,4,0.156,9,0.156,14,0.914,19,0.306,20,0.911,21,2.59,22,0.911,27,0.674,29,1.397,31,1.275,33,1.493,34,0.024,35,1.096,36,0.765,37,1.493,39,1.237,40,1.58,45,1.536,46,0.343,47,0.179,49,1.032,51,0.179,52,0.203,57,1.317,59,0.914,79,2.211,87,1.536,125,1.315,128,0.014,129,0.014,156,1.17,161,1.536,196,1.032,199,1.429,201,1.098,205,1.45,232,1.536,235,2.635,262,1.802,263,1.536,264,2.248,265,3.059,266,3.151,267,2.833,268,4.197,269,2.478,270,2.248,271,4.197,272,2.916,273,2.387,274,2.635,275,2.916,276,2.797,277,2.916,278,2.387,279,2.635,280,2.916,281,2.916,282,2.436,283,2.916,284,2.714,285,1.683,286,1.919,287,1.796,288,2.916,289,1.486,290,2.387,291,1.401,292,1.429,293,1.536,294,2.056,295,1.429,296,1.429,297,1.429,298,1.659,299,0.971,300,1.659,301,1.659,302,2.387,303,1.659,304,1.659,305,1.659,306,1.659,307,1.659,308,1.659,309,1.659,310,2.797,311,2.056,312,1.659,313,1.659,314,1.659,315,1.659,316,1.659,317,1.659,318,1.659,319,1.659,320,1.659]],["title/interfaces/Email.html",[89,0.661,291,0.851]],["body/interfaces/Email.html",[3,0.282,4,0.245,9,0.245,19,0.48,20,1.233,34,0.023,36,0.909,51,0.282,89,1.085,94,2.023,128,0.019,129,0.019,282,2.722,291,1.125,321,2.092,322,3.888,323,3.401,324,3.673,325,3.673]],["title/components/EmailCreateComponent.html",[0,0.331,100,0.905]],["body/components/EmailCreateComponent.html",[0,0.443,1,0.687,2,1.219,3,0.162,4,0.141,5,0.876,6,0.876,7,0.876,8,0.876,9,0.141,11,0.876,12,2.234,13,2.102,15,1.296,17,1.296,19,0.276,20,0.845,22,0.845,25,1.604,27,0.9,31,1.166,33,1.286,34,0.024,35,1.114,36,0.688,37,1.286,39,1.006,43,1.604,46,0.357,47,0.162,51,0.162,52,0.183,53,1.385,60,2.635,89,1.314,93,0.876,94,1.452,95,1.296,96,0.876,97,1.705,98,0.876,99,0.876,100,1.338,101,0.876,102,0.687,103,0.876,104,0.687,105,0.876,106,0.687,107,0.876,108,0.646,109,0.876,110,0.646,111,0.876,112,0.687,113,0.876,114,0.687,115,0.876,116,0.646,117,0.876,118,0.646,119,0.876,120,0.646,121,0.876,122,0.646,123,0.876,124,0.646,125,0.824,126,0.876,127,0.876,128,0.013,129,0.013,202,0.957,205,0.776,221,1.974,240,2.234,285,1.055,287,1.125,289,0.931,311,1.288,323,1.385,324,1.496,325,1.496,326,3.119,327,4.446,328,2.234,329,1.64,330,3.307,331,4.632,332,3.891,333,3.937,334,3.891,335,2.634,336,1.78,337,2.448,338,3.891,339,2.629,340,2.44,341,2.629,342,1.78,343,2.629,344,2.629,345,2.629,346,2.629,347,2.629,348,2.405,349,1.78,350,2.629,351,2.629,352,2.629,353,1.974,354,2.629,355,2.234,356,2.629,357,2.629,358,1.974,359,2.234,360,2.629,361,2.629,362,2.234,363,5.12,364,2.629,365,1.625,366,1.974,367,2.629]],["title/components/EmailFormComponent.html",[0,0.331,102,0.905]],["body/components/EmailFormComponent.html",[0,0.445,1,0.691,2,1.224,3,0.163,4,0.142,5,0.88,6,0.88,7,0.88,8,0.88,9,0.142,11,0.88,12,2.236,13,2.104,15,1.301,17,1.301,19,0.277,20,0.848,22,0.848,25,1.609,27,1.074,31,1.209,33,0.734,34,0.023,35,0.947,36,0.689,37,0.734,39,1.009,43,1.224,46,0.324,47,0.163,51,0.163,52,0.184,57,1.074,83,1.131,89,1.304,93,0.88,94,1.224,95,1.301,96,0.88,97,1.709,98,0.88,99,0.88,100,0.691,101,0.88,102,1.342,103,0.88,104,0.691,105,0.88,106,0.691,107,0.88,108,0.65,109,0.88,110,0.65,111,0.88,112,0.691,113,0.88,114,0.691,115,0.88,116,0.65,117,0.88,118,0.65,119,0.88,120,0.65,121,0.88,122,0.65,123,0.88,124,0.65,125,0.828,126,0.88,127,0.88,128,0.013,129,0.013,202,0.961,257,1.131,282,1.471,289,2.03,324,2.223,325,2.223,326,3.208,329,1.645,335,3.475,349,1.79,359,3.32,368,4.572,369,2.247,370,5.133,371,4.647,372,3.907,373,4.647,374,3.907,375,2.934,376,3.32,377,4.647,378,3.907,379,2.644,380,4.362,381,2.644,382,2.644,383,2.644,384,3.146,385,2.644,386,2.644,387,3.475,388,2.644,389,2.414,390,3.32,391,1.985,392,1.985,393,2.644,394,2.644,395,2.644,396,2.644,397,2.644,398,2.934,399,2.644,400,2.644,401,2.644,402,2.644,403,2.644,404,2.644,405,2.644,406,3.907]],["title/components/EmailIndexComponent.html",[0,0.331,104,0.905]],["body/components/EmailIndexComponent.html",[0,0.457,1,0.725,2,1.268,3,0.171,4,0.149,5,0.923,6,0.923,7,0.923,8,0.923,9,0.149,11,0.923,12,2.252,13,2.12,15,1.347,17,1.347,19,0.501,20,0.879,22,0.879,25,1.646,27,0.641,31,0.974,33,0.77,34,0.024,35,0.974,36,0.543,37,0.77,39,0.602,43,1.268,46,0.366,47,0.171,48,1.112,51,0.171,52,0.193,71,2.357,89,1.252,93,0.923,94,1.268,95,1.347,96,0.923,97,1.749,98,0.923,99,0.923,100,0.725,101,0.923,102,0.725,103,0.923,104,1.373,105,0.923,106,0.725,107,0.923,108,0.682,109,0.923,110,0.682,111,0.923,112,0.725,113,0.923,114,0.725,115,0.923,116,0.682,117,0.923,118,0.682,119,0.923,120,0.682,121,0.923,122,0.682,123,0.923,124,0.682,125,0.869,126,0.923,127,0.923,128,0.013,129,0.013,188,3.235,202,0.995,205,0.818,285,1.112,299,0.923,325,1.578,326,2.767,329,1.691,336,1.877,337,2.247,342,1.877,348,2.501,365,1.714,407,3.944,408,2.357,409,4.778,410,4.047,411,4.047,412,4.464,413,4.047,414,2.773,415,2.302,416,2.773,417,2.773,418,2.773,419,2.773,420,2.773,421,2.773,422,3.439,423,3.439,424,2.773,425,2.773,426,2.773,427,2.773,428,2.773,429,4.06,430,2.357,431,2.773,432,2.357,433,2.773,434,2.357,435,2.773,436,2.773,437,2.773,438,2.773,439,2.773,440,2.357,441,3.439,442,2.773,443,2.773,444,4.047,445,2.773,446,2.773,447,2.773,448,2.773,449,2.773,450,2.773]],["title/components/EmailReplyComponent.html",[0,0.331,106,0.905]],["body/components/EmailReplyComponent.html",[0,0.46,1,0.732,2,1.277,3,0.172,4,0.15,5,0.932,6,0.932,7,0.932,8,0.932,9,0.15,11,0.932,12,2.256,13,2.123,15,1.357,17,1.357,19,0.294,20,0.885,22,0.885,25,1.653,27,0.942,31,1.143,33,1.131,34,0.023,35,1.075,36,0.709,37,1.131,39,0.885,40,1.535,43,1.505,46,0.335,47,0.172,51,0.172,52,0.195,53,1.475,60,2.733,89,1.332,93,0.932,94,1.277,95,1.357,96,0.932,97,1.757,98,0.932,99,0.932,100,0.732,101,0.932,102,0.732,103,0.932,104,0.732,105,0.932,106,1.379,107,0.932,108,0.688,109,0.932,110,0.688,111,0.932,112,0.732,113,0.932,114,0.732,115,0.932,116,0.688,117,0.932,118,0.688,119,0.932,120,0.688,121,0.932,122,0.688,123,0.932,124,0.688,125,0.877,126,0.932,127,0.932,128,0.013,129,0.013,202,1.002,205,0.826,285,1.123,325,1.593,326,3.082,329,1.7,333,4.082,335,2.758,336,1.895,337,2.504,340,1.475,348,1.73,349,2.758,362,2.379,375,3.059,389,2.518,451,4.394,452,2.379,453,5.851,454,4.804,455,4.075,456,4.075,457,2.799,458,4.075,459,2.799,460,2.799,461,2.799,462,4.075,463,2.799,464,2.799,465,2.799,466,2.799,467,2.799,468,2.799]],["title/guards/EmailResolverService.html",[178,2.6,469,2.344]],["body/guards/EmailResolverService.html",[3,0.245,4,0.213,9,0.213,14,1.247,19,0.417,22,1.129,27,1.201,30,4.108,31,1.059,33,1.443,34,0.024,35,1.059,36,0.698,37,1.443,39,0.864,46,0.444,47,0.245,48,1.597,49,1.409,51,0.245,52,0.278,53,2.738,57,1.201,83,1.703,89,0.993,128,0.017,129,0.017,179,2.989,184,5.213,188,2.695,196,1.278,201,1.499,202,0.979,323,2.097,326,3.048,336,2.695,337,2.792,348,2.46,469,3.518,470,3.383,471,5.213,472,3.981,473,5.197,474,3.981,475,4.416,476,5.197,477,3.981,478,3.981,479,3.981,480,2.695]],["title/injectables/EmailService.html",[196,0.851,337,1.482]],["body/injectables/EmailService.html",[3,0.229,4,0.199,9,0.199,14,1.165,19,0.39,20,1.079,22,1.079,27,0.86,31,1.268,33,1.554,34,0.024,35,1.14,36,0.802,37,1.554,39,1.215,46,0.39,47,0.229,51,0.344,52,0.259,57,1.293,89,1.223,128,0.016,129,0.016,156,1.492,161,2.618,196,1.222,201,1.401,205,1.097,262,2.298,264,2.559,269,3.161,270,2.731,282,2.502,285,1.492,286,2.272,287,2.126,291,1.222,299,1.238,323,2.618,324,2.116,337,2.126,340,1.959,415,2.116,481,2.518,482,4.969,483,4.484,484,4.969,485,4.969,486,3.731,487,3.719,488,3.719,489,3.731,490,3.719,491,2.793,492,2.793,493,2.793,494,2.793]],["title/components/EmailShowComponent.html",[0,0.331,108,0.851]],["body/components/EmailShowComponent.html",[0,0.466,1,0.749,2,1.298,3,0.176,4,0.154,5,0.954,6,0.954,7,0.954,8,0.954,9,0.154,11,0.954,12,2.264,13,2.13,15,1.38,17,1.38,19,0.3,20,0.9,22,0.9,25,1.671,27,0.958,31,0.992,33,0.796,34,0.024,35,0.992,36,0.556,37,0.796,39,0.622,43,1.298,46,0.395,47,0.176,48,1.149,49,1.014,51,0.176,52,0.2,53,2.183,57,0.662,89,1.323,93,0.954,94,1.298,95,1.38,96,0.954,97,1.776,98,0.954,99,0.954,100,0.749,101,0.954,102,0.749,103,0.954,104,0.749,105,0.954,106,0.749,107,0.954,108,1.311,109,0.954,110,0.704,111,0.954,112,0.749,113,0.954,114,0.749,115,0.954,116,0.704,117,0.954,118,0.704,119,0.954,120,0.704,121,0.954,122,0.704,123,0.954,124,0.704,125,0.898,126,0.954,127,0.954,128,0.014,129,0.014,188,2.805,189,1.939,202,1.019,326,2.81,329,1.723,337,2.602,342,1.939,348,1.77,349,2.805,412,4.532,422,3.521,423,3.521,495,3.611,496,2.435,497,4.143,498,4.867,499,4.143,500,2.865,501,4.143,502,2.865,503,2.865,504,2.865,505,2.865,506,2.865,507,2.865,508,2.865,509,2.865,510,2.865,511,2.865,512,2.865,513,2.865,514,4.143]],["title/components/HomeComponent.html",[0,0.331,110,0.851]],["body/components/HomeComponent.html",[0,0.518,1,0.912,2,1.492,3,0.215,4,0.187,5,1.162,6,1.162,7,1.162,8,1.162,9,0.187,11,1.162,12,2.325,13,2.188,15,1.585,17,1.585,19,0.366,22,1.034,25,1.823,27,1.252,31,0.97,34,0.024,35,0.97,39,0.758,43,1.492,46,0.243,47,0.215,51,0.215,52,0.243,89,1.163,93,1.162,94,1.492,95,1.585,96,1.162,97,1.937,98,1.162,99,1.162,100,0.912,101,1.162,102,0.912,103,1.162,104,0.912,105,1.162,106,0.912,107,1.162,108,0.858,109,1.162,110,1.431,111,1.162,112,0.912,113,1.162,114,0.912,115,1.162,116,0.858,117,1.162,118,0.858,119,1.162,120,0.858,121,1.162,122,0.858,123,1.162,124,0.858,125,1.094,126,1.162,127,1.162,128,0.016,129,0.016,202,1.17,329,1.917,515,2.966,516,4.76,517,5.417,518,4.76,519,3.49,520,3.49,521,3.49,522,3.49,523,2.966]],["title/modules/InboxModule.html",[130,1.824,524,2.344]],["body/modules/InboxModule.html",[3,0.196,4,0.171,9,0.171,22,0.692,25,1.618,31,0.65,34,0.024,39,0.692,43,0.999,46,0.473,47,0.196,51,0.196,52,0.222,64,2.393,89,1.126,91,1.679,100,1.597,102,1.597,104,1.597,106,1.597,108,1.502,110,1.502,116,1.502,118,1.502,128,0.015,129,0.015,132,1.364,133,2.355,143,2.763,144,1.97,146,3.027,148,2.355,150,2.355,158,2.393,249,3.476,251,3.357,252,2.158,256,3.357,257,1.364,258,2.709,327,2.393,368,2.393,407,2.393,451,2.393,495,2.158,524,4.796,525,2.709,526,2.709,527,2.709,528,3.776,529,3.188,530,3.188,531,2.709,532,3.188,533,2.709,534,3.188,535,3.188,536,2.709,537,2.158,538,2.709,539,3.188]],["title/modules/InboxRoutingModule.html",[130,1.824,528,2.14]],["body/modules/InboxRoutingModule.html",[0,0.594,3,0.253,4,0.22,9,0.22,34,0.024,46,0.467,47,0.253,48,1.646,51,0.253,52,0.286,83,1.756,89,1.121,108,1.303,110,1.303,116,1.303,118,1.303,128,0.017,129,0.017,132,1.756,148,2.161,150,2.792,167,3.081,168,3.34,169,3.98,172,4.659,177,2.778,323,2.161,469,3.588,471,3.487,480,2.778,495,2.778,528,3.275,531,3.487,533,3.487,536,3.487,537,2.778,538,3.487,540,4.103,541,4.103,542,4.103,543,4.103]],["title/components/InputComponent.html",[0,0.331,112,0.905]],["body/components/InputComponent.html",[0,0.477,1,0.652,2,1.173,3,0.154,4,0.134,5,0.831,6,0.831,7,0.831,8,0.831,9,0.134,11,0.831,12,2.215,13,2.084,15,1.246,17,1.246,19,0.262,22,0.813,25,1.564,27,1.038,31,1.186,34,0.024,35,0.763,36,0.67,39,0.813,43,1.173,46,0.313,47,0.154,51,0.154,52,0.174,57,0.577,74,2.121,83,1.068,89,1.112,93,0.831,94,1.173,95,1.246,96,0.831,97,1.661,98,0.831,99,0.831,100,0.652,101,0.831,102,0.652,103,0.831,104,0.652,105,0.831,106,0.652,107,0.831,108,0.614,109,0.831,110,0.614,111,0.831,112,1.304,113,0.831,114,0.652,115,0.831,116,0.614,117,0.831,118,0.614,119,0.831,120,0.614,121,0.831,122,0.614,123,0.831,124,0.614,125,0.782,126,0.831,127,0.831,128,0.012,129,0.012,202,0.92,205,1.717,257,1.068,282,2.013,284,2.282,285,1.001,329,1.59,365,1.542,366,1.874,375,2.81,384,3.04,389,3.784,544,2.121,545,4.491,546,3.743,547,4.99,548,4.491,549,4.491,550,4.491,551,5.346,552,3.743,553,2.496,554,2.496,555,2.496,556,2.496,557,2.496,558,2.496,559,2.121,560,2.496,561,3.743,562,3.743,563,3.743,564,2.496,565,2.81,566,3.743,567,3.743,568,4.99,569,2.496,570,4.496,571,4.99,572,3.743,573,2.496,574,2.496,575,3.743,576,2.496,577,3.743,578,3.743,579,4.24,580,2.496,581,3.743,582,3.181,583,2.121,584,2.496,585,2.496,586,2.496,587,2.496,588,2.496,589,2.496,590,2.496,591,2.496]],["title/injectables/MatchPassword.html",[196,0.851,592,2.344]],["body/injectables/MatchPassword.html",[3,0.278,4,0.242,9,0.242,14,1.416,19,0.474,22,1.224,31,0.921,33,1.255,34,0.024,35,0.921,36,0.607,37,1.255,39,0.981,40,1.702,46,0.393,47,0.278,51,0.278,52,0.315,57,1.303,59,1.416,83,1.933,128,0.019,129,0.019,196,1.111,202,1.111,206,3.393,227,3.84,257,1.933,262,2.793,295,2.214,387,3.059,391,4.827,592,3.815,593,4.788,594,3.84,595,4.788,596,5.635,597,4.519,598,5.635,599,5.635,600,4.519,601,4.519]],["title/components/ModalComponent.html",[0,0.331,114,0.905]],["body/components/ModalComponent.html",[0,0.484,1,0.802,2,1.364,3,0.189,4,0.164,5,1.022,6,1.022,7,1.022,8,1.022,9,0.164,11,1.022,12,2.286,13,2.151,15,1.449,17,1.449,19,0.322,22,0.945,25,1.724,27,0.709,31,1.184,33,0.852,34,0.023,35,1.031,36,0.584,37,0.852,39,1.098,43,1.724,46,0.214,47,0.189,51,0.189,52,0.214,89,1.11,93,1.022,94,1.364,95,1.449,96,1.022,97,1.832,98,1.022,99,1.022,100,0.802,101,1.022,102,0.802,103,1.022,104,0.802,105,1.022,106,0.802,107,1.022,108,0.754,109,1.022,110,0.754,111,1.022,112,0.802,113,1.022,114,1.438,115,1.022,116,0.754,117,1.022,118,0.754,119,1.022,120,0.754,121,1.022,122,0.754,123,1.022,124,0.754,125,0.961,126,1.022,127,1.022,128,0.014,129,0.014,202,1.07,285,1.746,289,1.086,299,1.022,329,1.79,376,3.698,380,4.297,390,3.698,583,2.607,602,2.607,603,4.352,604,5.057,605,4.352,606,5.057,607,5.503,608,5.057,609,3.068,610,4.676,611,4.352,612,4.352,613,3.068,614,3.068,615,3.068,616,3.068,617,3.068,618,3.068,619,3.068,620,4.352,621,4.352,622,2.304,623,3.068,624,4.352,625,3.068]],["title/components/NotFoundComponent.html",[0,0.331,116,0.851]],["body/components/NotFoundComponent.html",[0,0.518,1,0.91,2,1.489,3,0.214,4,0.187,5,1.159,6,1.159,7,1.159,8,1.159,9,0.187,11,1.159,12,2.325,13,2.188,15,1.582,17,1.582,19,0.365,22,1.032,25,1.822,27,1.251,31,0.968,34,0.023,35,0.968,39,0.756,43,1.489,46,0.243,47,0.214,51,0.214,52,0.243,89,1.228,93,1.159,94,1.489,95,1.582,96,1.159,97,1.935,98,1.159,99,1.159,100,0.91,101,1.159,102,0.91,103,1.159,104,0.91,105,1.159,106,0.91,107,1.159,108,0.856,109,1.159,110,0.856,111,1.159,112,0.91,113,1.159,114,0.91,115,1.159,116,1.429,117,1.159,118,0.856,119,1.159,120,0.856,121,1.159,122,0.856,123,1.159,124,0.856,125,1.091,126,1.159,127,1.159,128,0.016,129,0.016,202,1.168,329,1.915,480,3.935,537,3.663,626,4.598,627,2.959,628,5.41,629,4.752,630,3.482,631,3.482]],["title/components/PlaceholderComponent.html",[0,0.331,118,0.851]],["body/components/PlaceholderComponent.html",[0,0.519,1,0.914,2,1.494,3,0.215,4,0.188,5,1.165,6,1.165,7,1.165,8,1.165,9,0.188,11,1.165,12,2.326,13,2.189,15,1.587,17,1.587,19,0.367,22,1.035,25,1.825,27,1.254,31,0.972,34,0.023,35,0.972,39,0.76,43,1.494,46,0.244,47,0.215,51,0.215,52,0.244,89,1.229,93,1.165,94,1.494,95,1.587,96,1.165,97,1.939,98,1.165,99,1.165,100,0.914,101,1.165,102,0.914,103,1.165,104,0.914,105,1.165,106,0.914,107,1.165,108,0.86,109,1.165,110,0.86,111,1.165,112,0.914,113,1.165,114,0.914,115,1.165,116,0.86,117,1.165,118,1.432,119,1.165,120,0.86,121,1.165,122,0.86,123,1.165,124,0.86,125,1.096,126,1.165,127,1.165,128,0.016,129,0.016,202,1.172,329,1.92,632,2.973,633,4.768,634,5.424,635,4.768,636,3.498,637,3.498,638,4.768,639,4.768,640,4.768]],["title/interfaces/ResponseGetEmails.html",[291,0.851,415,1.97]],["body/interfaces/ResponseGetEmails.html",[3,0.258,4,0.225,9,0.225,14,1.315,19,0.44,20,1.168,34,0.024,36,0.797,46,0.414,47,0.258,51,0.365,52,0.293,57,1.372,89,1.133,128,0.018,129,0.018,156,1.683,161,2.211,196,1.322,201,1.58,264,1.919,270,2.459,282,2.631,286,1.919,287,1.796,291,1.322,299,1.397,321,1.919,323,3.297,324,3.56,337,1.796,340,2.211,415,3.059,481,2.841,483,3.151,486,3.151,489,3.151,491,3.151,492,3.151,493,3.151,494,3.151]],["title/modules/SharedModule.html",[130,1.824,249,1.97]],["body/modules/SharedModule.html",[3,0.255,4,0.222,9,0.222,34,0.024,46,0.449,47,0.255,51,0.255,52,0.288,91,2.18,112,1.832,114,1.832,128,0.018,129,0.018,132,1.77,133,2.807,143,3.293,144,2.557,146,3.607,148,2.18,150,2.807,177,3.607,249,3.938,251,4.001,252,2.801,256,4.001,257,1.77,641,3.516,642,3.516,643,3.516,644,4.138,645,4.138,646,4.138]],["title/components/SigninComponent.html",[0,0.331,120,0.851]],["body/components/SigninComponent.html",[0,0.366,1,0.505,2,0.962,3,0.119,4,0.104,5,0.643,6,0.643,7,0.643,8,0.643,9,0.104,11,0.643,12,2.112,13,1.988,15,1.023,17,1.023,19,0.203,20,0.667,22,0.667,25,1.365,27,0.447,28,1.194,29,1.582,30,3.402,31,1.185,33,0.537,34,0.024,35,0.779,36,0.259,37,0.537,39,1.196,40,1.906,43,1.198,46,0.331,47,0.119,48,1.232,51,0.119,52,0.135,57,1.492,59,1.586,60,3.434,89,0.908,93,0.643,94,0.962,95,1.023,96,0.643,97,1.45,98,0.643,99,0.643,100,0.505,101,0.643,102,0.505,103,0.643,104,0.505,105,0.643,106,0.505,107,0.643,108,0.475,109,0.643,110,0.475,111,0.643,112,0.505,113,0.643,114,0.505,115,0.643,116,0.475,117,0.643,118,0.475,119,0.643,120,1.071,121,0.643,122,0.475,123,0.643,124,0.475,125,0.605,126,0.643,127,0.643,128,0.01,129,0.01,200,1.194,202,0.755,205,1.128,221,1.451,257,0.827,266,2.306,284,2.173,285,0.775,289,1.791,294,2.134,299,0.643,325,1.099,329,1.353,342,2.079,353,1.451,355,2.61,358,1.451,365,1.898,384,3.217,387,2.588,389,1.194,392,1.451,398,3.27,429,1.642,432,2.61,434,2.61,440,1.642,441,1.642,480,2.079,565,3.27,570,4.533,622,1.451,647,1.642,648,3.822,649,3.071,650,3.248,651,3.701,652,3.701,653,3.701,654,3.701,655,3.701,656,3.701,657,4.355,658,1.932,659,1.932,660,1.932,661,1.932,662,1.932,663,1.932,664,1.932,665,1.932,666,1.932,667,2.61,668,3.701,669,2.61,670,2.61,671,2.61,672,2.61,673,1.932,674,1.642,675,1.642,676,1.932,677,1.932,678,1.932,679,1.932,680,1.932,681,1.932,682,1.932,683,1.932,684,1.642,685,1.932,686,4.3,687,3.248,688,1.642,689,1.932,690,3.701,691,1.642,692,1.642,693,1.642,694,3.248,695,1.642,696,1.642,697,1.932,698,3.071,699,1.642,700,2.61,701,2.61,702,1.642,703,2.61,704,1.932,705,1.932,706,2.61,707,1.932,708,3.071,709,1.932,710,1.932,711,1.932,712,1.932,713,1.642,714,1.932,715,3.071,716,1.932,717,1.932,718,1.642,719,1.642,720,1.932,721,1.932]],["title/interfaces/SigninCredentials.html",[274,1.697,291,0.851]],["body/interfaces/SigninCredentials.html",[3,0.213,4,0.186,9,0.186,14,1.086,19,0.363,20,1.029,21,1.826,29,1.154,34,0.024,36,0.636,40,1.784,45,1.826,46,0.376,47,0.213,49,1.227,51,0.213,52,0.242,57,1.404,59,1.086,79,2.495,87,1.826,128,0.016,129,0.016,156,1.39,196,1.165,199,1.698,201,1.305,205,1.022,232,1.826,235,2.843,263,1.826,264,1.585,265,1.971,267,1.826,270,1.585,273,1.971,274,2.645,276,1.971,278,1.971,279,2.321,282,2.549,284,2.989,286,1.585,287,1.483,289,1.227,290,1.971,291,1.493,292,1.698,293,1.826,294,2.976,295,1.698,296,1.698,297,1.698,298,1.971,299,1.154,300,1.971,301,1.971,302,2.695,303,1.971,304,1.971,305,1.971,306,1.971,307,1.971,308,1.971,309,1.971,310,3.07,311,2.321,312,1.971,313,1.971,314,1.971,315,1.971,316,1.971,317,1.971,318,1.971,319,1.971,320,1.971,321,1.585]],["title/interfaces/SigninResponse.html",[291,0.851,297,1.697]],["body/interfaces/SigninResponse.html",[3,0.213,4,0.186,9,0.186,14,1.086,19,0.363,20,1.029,21,1.826,29,1.154,34,0.024,36,0.636,40,2.185,45,1.826,46,0.376,47,0.213,49,1.227,51,0.213,52,0.242,57,1.404,59,1.086,79,2.495,87,1.826,128,0.016,129,0.016,156,1.39,196,1.165,199,1.698,201,1.305,205,1.022,232,1.826,235,2.843,263,1.826,264,1.585,265,1.971,267,1.826,270,1.585,273,1.971,274,2.321,276,1.971,278,1.971,279,2.321,282,2.496,284,2.989,286,1.585,287,1.483,289,1.227,290,1.971,291,1.493,292,1.698,293,1.826,294,2.321,295,1.698,296,1.698,297,2.321,298,3.3,299,1.154,300,1.971,301,1.971,302,2.695,303,1.971,304,1.971,305,1.971,306,1.971,307,1.971,308,1.971,309,1.971,310,3.07,311,2.321,312,1.971,313,1.971,314,1.971,315,1.971,316,1.971,317,1.971,318,1.971,319,1.971,320,1.971,321,1.585]],["title/components/SignoutComponent.html",[0,0.331,122,0.851]],["body/components/SignoutComponent.html",[0,0.502,1,0.859,2,1.431,3,0.202,4,0.176,5,1.095,6,1.095,7,1.095,8,1.095,9,0.176,11,1.095,12,2.307,13,2.172,15,1.521,17,1.521,19,0.345,22,0.992,25,1.778,27,0.76,28,2.031,29,1.985,30,3.684,31,0.931,33,0.913,34,0.023,35,1.07,36,0.441,37,0.913,39,0.714,43,1.431,46,0.366,47,0.202,48,1.319,51,0.202,52,0.229,81,2.794,89,1.139,93,1.095,94,1.431,95,1.521,96,1.095,97,1.889,98,1.095,99,1.095,100,0.859,101,1.095,102,0.859,103,1.095,104,0.859,105,1.095,106,0.859,107,1.095,108,0.808,109,1.095,110,0.808,111,1.095,112,0.859,113,1.095,114,0.859,115,1.095,116,0.808,117,1.095,118,0.808,119,1.095,120,0.808,121,1.095,122,1.395,123,1.095,124,0.808,125,1.03,126,1.095,127,1.095,128,0.015,129,0.015,198,2.794,200,2.031,202,1.123,213,2.794,266,2.468,267,2.988,299,1.095,329,1.858,674,2.794,722,2.794,723,5.249,724,4.568,725,3.287,726,3.287,727,3.287,728,3.287,729,3.287,730,2.794,731,4.568]],["title/components/SignupComponent.html",[0,0.331,124,0.851]],["body/components/SignupComponent.html",[0,0.303,1,0.384,2,0.77,3,0.091,4,0.079,5,0.49,6,0.49,7,0.49,8,0.49,9,0.079,11,0.49,12,1.984,13,1.868,15,0.818,17,0.818,19,0.154,20,0.534,22,0.534,25,1.16,27,0.568,29,1.573,31,1.215,33,0.408,34,0.024,35,0.645,36,0.33,37,0.408,39,1.236,40,2.055,43,0.992,46,0.287,47,0.091,51,0.091,52,0.103,53,1.668,57,1.509,59,1.709,60,3.614,78,1.104,89,0.786,90,2.089,92,2.089,93,0.49,94,0.77,95,0.818,96,0.49,97,1.232,98,0.49,99,0.49,100,0.384,101,0.49,102,0.384,103,0.49,104,0.384,105,0.49,106,0.384,107,0.49,108,0.362,109,0.49,110,0.362,111,0.49,112,0.384,113,0.49,114,0.384,115,0.49,116,0.362,117,0.49,118,0.362,119,0.49,120,0.362,121,0.49,122,0.362,123,0.49,124,0.91,125,0.992,126,0.49,127,0.49,128,0.008,129,0.008,200,0.909,202,0.604,205,1.092,257,0.629,284,2.265,285,0.986,289,1.88,294,2.735,295,1.204,311,0.721,329,1.121,330,2.089,335,2.505,353,1.104,358,1.104,365,1.519,366,1.846,384,3.198,387,2.144,389,1.957,392,2.378,398,3.342,430,1.25,565,3.342,570,4.475,579,2.089,582,1.25,592,3.198,610,1.25,622,1.846,650,2.691,651,3.145,652,3.145,653,3.145,654,3.145,655,3.145,656,3.145,667,2.089,668,3.782,669,2.089,670,2.089,671,2.089,672,3.145,675,1.25,684,2.691,686,4.373,687,3.145,688,1.25,690,4.014,691,1.25,692,1.25,693,1.25,694,2.089,695,1.25,696,1.25,699,1.25,700,2.089,701,2.089,702,1.25,703,2.089,706,2.691,713,1.25,718,1.25,719,1.25,732,1.25,733,3.167,734,2.458,735,4.45,736,3.701,737,3.701,738,3.701,739,3.701,740,3.701,741,1.471,742,3.013,743,1.471,744,1.471,745,1.471,746,1.471,747,1.471,748,1.471,749,1.471,750,1.471,751,1.471,752,1.471,753,1.471,754,1.471,755,1.471,756,1.471,757,2.458,758,2.458,759,1.471,760,1.25,761,1.471,762,1.471,763,1.471,764,1.25,765,1.471,766,1.471,767,1.471,768,2.458,769,1.471,770,3.167,771,1.471,772,1.471,773,1.471,774,1.471,775,1.471,776,1.471,777,1.471,778,2.458,779,1.471,780,1.471,781,1.471,782,1.471,783,2.458,784,3.701,785,1.471,786,1.471,787,1.471,788,1.471,789,1.471,790,1.471,791,2.458,792,1.471,793,4.45,794,1.471,795,2.458,796,1.471,797,2.458,798,1.471,799,1.471,800,2.458,801,2.458,802,2.458,803,2.458,804,1.471,805,1.471,806,1.471,807,1.471,808,1.471,809,1.471,810,1.471,811,1.471]],["title/interfaces/SignupCredentials.html",[279,1.697,291,0.851]],["body/interfaces/SignupCredentials.html",[3,0.21,4,0.183,9,0.183,14,1.068,19,0.358,20,1.017,21,1.796,29,1.135,34,0.024,36,0.719,40,1.764,45,1.796,46,0.373,47,0.21,49,1.207,51,0.21,52,0.238,57,1.396,59,1.068,79,2.468,87,1.796,128,0.015,129,0.015,156,1.367,196,1.152,199,1.67,201,1.284,205,1.006,232,1.796,235,2.823,263,1.796,264,1.559,265,1.939,267,1.796,270,1.559,273,1.939,274,2.295,276,1.939,278,1.939,279,2.622,282,2.581,284,2.977,286,1.559,287,1.459,289,1.207,290,1.939,291,1.485,292,1.67,293,1.796,294,2.959,295,2.823,296,1.67,297,1.67,298,1.939,299,1.135,300,1.939,301,1.939,302,2.665,303,1.939,304,1.939,305,1.939,306,1.939,307,1.939,308,1.939,309,1.939,310,3.044,311,2.295,312,1.939,313,1.939,314,1.939,315,1.939,316,1.939,317,1.939,318,1.939,319,1.939,320,1.939,321,1.559]],["title/interfaces/SignupResponse.html",[291,0.851,296,1.697]],["body/interfaces/SignupResponse.html",[3,0.217,4,0.189,9,0.189,14,1.104,19,0.369,20,1.04,21,1.856,29,1.173,34,0.024,36,0.473,40,1.804,45,1.856,46,0.38,47,0.217,49,1.247,51,0.217,52,0.246,57,1.412,59,1.104,79,2.524,87,1.856,128,0.016,129,0.016,156,1.413,196,1.178,199,1.726,201,1.327,205,1.039,232,1.856,235,2.862,263,1.856,264,1.611,265,2.004,267,1.856,270,1.611,273,2.004,274,2.348,276,2.004,278,2.004,279,2.348,282,2.505,284,3,286,1.611,287,1.508,289,1.247,290,2.004,291,1.502,292,1.726,293,1.856,294,2.348,295,1.726,296,2.348,297,1.726,298,2.004,299,1.173,300,2.004,301,2.004,302,2.725,303,2.004,304,2.004,305,2.004,306,2.004,307,2.004,308,2.004,309,2.004,310,3.097,311,2.348,312,2.004,313,2.004,314,2.004,315,2.004,316,2.004,317,2.004,318,2.004,319,2.004,320,2.004,321,1.611]],["title/injectables/UniqueUsername.html",[196,0.851,742,2.344]],["body/injectables/UniqueUsername.html",[3,0.234,4,0.204,9,0.204,14,1.193,19,0.399,20,1.096,27,0.88,28,2.352,29,2.146,31,1.028,33,1.057,34,0.024,35,0.776,36,0.511,37,1.057,46,0.42,47,0.234,49,1.347,51,0.234,52,0.265,57,1.45,59,1.581,83,1.628,128,0.017,129,0.017,189,3.416,190,3.234,196,1.241,200,2.352,201,1.433,202,0.936,205,1.67,206,2.858,235,1.865,257,1.628,262,2.352,285,1.527,299,1.267,391,3.789,475,3.234,523,3.234,595,4.81,742,3.416,764,3.234,812,4.81,813,3.234,814,3.806,815,3.806,816,5.045,817,3.806,818,5.045,819,3.806,820,3.806,821,3.806,822,3.806,823,3.806,824,3.806,825,3.806]],["title/interfaces/UserNameAvailableResponse.html",[291,0.851,292,1.697]],["body/interfaces/UserNameAvailableResponse.html",[3,0.217,4,0.189,9,0.189,14,1.104,19,0.369,20,1.04,21,1.856,29,1.173,34,0.024,36,0.473,40,2.2,45,1.856,46,0.38,47,0.217,49,1.247,51,0.217,52,0.246,57,1.412,59,1.104,79,2.524,87,1.856,128,0.016,129,0.016,156,1.413,196,1.178,199,1.726,201,1.327,205,1.039,232,1.856,235,2.862,263,1.856,264,1.611,265,2.004,267,1.856,270,1.611,273,2.004,274,2.348,276,2.004,278,2.004,279,2.348,282,2.428,284,2.794,286,1.611,287,1.508,289,1.247,290,2.004,291,1.502,292,2.348,293,3.077,294,2.348,295,1.726,296,1.726,297,1.726,298,2.004,299,1.173,300,2.004,301,2.004,302,2.725,303,2.004,304,2.004,305,2.004,306,2.004,307,2.004,308,2.004,309,2.004,310,3.097,311,2.348,312,2.004,313,2.004,314,2.004,315,2.004,316,2.004,317,2.004,318,2.004,319,2.004,320,2.004,321,1.611]],["title/coverage.html",[826,4.023]],["body/coverage.html",[0,0.648,1,0.792,9,0.162,10,2.575,29,1.009,34,0.024,36,0.407,78,5.379,89,0.579,100,0.792,102,0.792,104,0.792,106,0.792,108,0.745,110,0.745,112,0.792,114,0.792,116,0.745,118,0.745,120,0.745,122,0.745,124,0.745,128,0.014,129,0.014,142,1.873,161,1.596,162,2.275,170,2.051,178,3.239,180,2.575,196,1.345,215,2.275,216,2.575,263,3.166,274,1.485,279,1.485,289,1.073,291,1.554,292,1.485,296,1.485,297,1.485,322,2.575,326,3.166,327,2.275,328,2.575,337,1.296,340,1.596,368,2.275,369,2.575,407,2.275,408,2.575,415,1.724,451,2.275,452,2.575,469,2.051,470,2.575,481,3.4,495,2.051,496,2.575,515,2.575,537,2.051,544,2.575,592,2.051,593,2.575,594,2.575,602,2.575,626,2.575,627,2.575,632,2.575,647,2.575,722,2.575,732,2.575,742,2.051,812,2.575,813,2.575,826,2.575,827,3.03,828,3.03,829,3.03,830,5.022,831,6.432,832,5.783,833,3.03,834,5.472,835,3.03,836,3.03,837,4.313,838,5.022,839,2.575,840,5.472,841,3.666,842,5.472,843,2.575,844,3.666,845,2.575,846,2.575,847,3.03,848,3.03]],["title/dependencies.html",[133,2.195,849,2.168]],["body/dependencies.html",[34,0.024,47,0.295,48,1.925,49,1.699,128,0.019,129,0.019,133,2.528,152,4.969,153,4.391,252,3.249,257,2.053,559,4.078,850,4.799,851,6.994,852,4.799,853,4.799,854,4.799,855,4.799,856,4.799,857,4.799,858,4.799,859,4.799,860,4.799,861,4.799,862,4.799,863,4.799]],["title/index.html",[19,0.303,864,2.888,865,2.888]],["body/index.html",[0,0.558,4,0.217,34,0.017,35,0.825,88,4.956,91,2.132,128,0.017,129,0.017,202,0.995,289,1.432,730,3.439,849,3.038,866,4.047,867,5.253,868,4.047,869,5.832,870,3.439,871,4.047,872,4.047,873,5.253,874,6.396,875,6.673,876,4.047,877,4.047,878,4.047,879,4.047,880,4.047,881,4.047,882,4.047,883,4.047,884,4.047,885,4.047,886,4.047,887,5.832,888,5.832,889,4.047,890,6.172,891,4.047,892,4.047,893,4.047,894,4.047,895,5.253,896,5.253,897,6.172,898,4.047,899,5.253,900,5.253,901,4.047,902,6.555,903,4.047,904,4.047,905,4.047,906,5.253,907,4.047,908,4.047,909,4.047,910,4.047,911,4.047,912,4.047,913,5.832,914,4.047,915,4.047,916,4.047,917,3.038,918,4.047]],["title/modules.html",[132,2.026]],["body/modules.html",[34,0.02,128,0.02,129,0.02,131,3.381,132,2.137,139,3.086,140,3.086,141,2.841,153,4.996,249,2.841,293,3.38,524,3.381,528,3.086,919,6.654,920,6.654,921,6.985,922,6.417]],["title/overview.html",[917,3.555]],["body/overview.html",[1,1.657,2,1.037,34,0.023,91,1.743,100,1.377,102,1.377,104,1.377,106,1.377,108,1.295,110,1.295,112,1.657,114,1.657,116,1.295,118,1.295,120,1.295,122,1.295,124,1.295,128,0.015,129,0.015,131,4.618,132,1.416,133,2.418,134,2.812,135,2.812,136,2.812,137,2.812,138,2.812,139,3.256,140,4.215,141,3.236,142,3.256,143,2.836,144,2.045,168,1.883,179,2.485,246,2.812,247,2.812,248,2.812,249,3.78,262,2.045,321,1.513,524,4.791,525,2.812,526,2.812,527,2.812,528,3.256,641,2.812,642,2.812,643,2.812,917,2.485,923,3.309,924,3.309,925,3.309,926,3.309,927,3.309,928,3.309]],["title/properties.html",[20,0.905,849,2.168]],["body/properties.html",[20,1.203,34,0.022,128,0.021,129,0.021,870,4.707,929,5.539]],["title/routes.html",[168,2.693]],["body/routes.html",[34,0.021,128,0.021,129,0.021,168,3.187]],["title/interfaces/sendEmailResponse.html",[291,0.851,340,1.824]],["body/interfaces/sendEmailResponse.html",[3,0.267,4,0.232,9,0.232,14,1.358,19,0.454,20,1.192,34,0.024,36,0.582,46,0.42,47,0.267,51,0.371,52,0.302,57,1.392,89,1.15,128,0.018,129,0.018,156,1.738,161,2.282,196,1.349,201,1.632,264,1.981,270,2.509,282,2.553,286,1.981,287,1.854,291,1.349,299,1.443,321,1.981,323,2.282,324,2.465,337,1.854,340,2.891,415,2.465,481,2.933,483,3.253,486,3.253,489,3.253,491,4.754,492,3.253,493,3.253,494,3.253]],["title/miscellaneous/variables.html",[930,2.454,931,3.541]],["body/miscellaneous/variables.html",[19,0.498,34,0.023,36,0.879,59,1.822,60,2.703,128,0.019,129,0.019,205,1.852,285,2.519,760,4.94,839,4.038,841,5.56,843,4.038,844,4.038,845,4.94,846,4.94,930,4.038,931,4.038,932,5.813,933,4.752,934,4.752,935,4.752,936,4.752,937,4.752,938,5.813]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":929,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["0.5em",{"_index":806,"title":{},"body":{"components/SignupComponent.html":{}}}],["0/1",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["1.1.19",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":450,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["100em",{"_index":804,"title":{},"body":{"components/SignupComponent.html":{}}}],["10px",{"_index":440,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["12",{"_index":928,"title":{},"body":{"overview.html":{}}}],["13.3.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["13.3.5",{"_index":871,"title":{},"body":{"index.html":{}}}],["14",{"_index":924,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":584,"title":{},"body":{"components/InputComponent.html":{}}}],["1px",{"_index":709,"title":{},"body":{"components/SigninComponent.html":{}}}],["1rem",{"_index":367,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["2",{"_index":926,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":715,"title":{},"body":{"components/SigninComponent.html":{}}}],["20px",{"_index":438,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["4",{"_index":925,"title":{},"body":{"overview.html":{}}}],["50",{"_index":717,"title":{},"body":{"components/SigninComponent.html":{}}}],["5000",{"_index":779,"title":{},"body":{"components/SignupComponent.html":{}}}],["54c8ff",{"_index":711,"title":{},"body":{"components/SigninComponent.html":{}}}],["7",{"_index":923,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":927,"title":{},"body":{"overview.html":{}}}],["9",{"_index":671,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["90",{"_index":442,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["a.active",{"_index":426,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["a.active:before",{"_index":435,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["abstractcontrol",{"_index":391,"title":{},"body":{"components/EmailFormComponent.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["account",{"_index":791,"title":{},"body":{"components/SignupComponent.html":{}}}],["actions",{"_index":624,"title":{},"body":{"components/ModalComponent.html":{}}}],["actions:empty",{"_index":621,"title":{},"body":{"components/ModalComponent.html":{}}}],["activatedroute",{"_index":412,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{}}}],["activatedroutesnapshot",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{}}}],["actual_component",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["add",{"_index":909,"title":{},"body":{"index.html":{}}}],["aleast",{"_index":572,"title":{},"body":{"components/InputComponent.html":{}}}],["align",{"_index":432,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["allowed",{"_index":701,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["angular",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["angular/compiler",{"_index":559,"title":{},"body":{"components/InputComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"dependencies.html":{},"interfaces/sendEmailResponse.html":{}}}],["angular/forms",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"components/EmailFormComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/EmailIndexComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"modules/InboxRoutingModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["app.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":880,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":131,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":139,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":891,"title":{},"body":{"index.html":{}}}],["asyncvalidator",{"_index":816,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["auth",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["auth/auth",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.guard",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["authenticated,this.authservice.signedin",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentifications",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authform",{"_index":650,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls['password'].errors!['maxlength'].requiredlength",{"_index":704,"title":{},"body":{"components/SigninComponent.html":{}}}],["authform.controls['password'].errors!['minlength'].requiredlength",{"_index":702,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls['passwordconfirmation'].errors!['maxlength'].requiredlength",{"_index":799,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls['passwordconfirmation'].errors!['minlength'].requiredlength",{"_index":798,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls['username'].errors!['minlength'].requiredlength",{"_index":699,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls[\\'password\\'].errors![\\'maxlength\\'].requiredlength",{"_index":720,"title":{},"body":{"components/SigninComponent.html":{}}}],["authform.controls[\\'password\\'].errors![\\'minlength\\'].requiredlength",{"_index":719,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls[\\'passwordconfirmation\\'].errors![\\'maxlength\\'].requiredlength",{"_index":811,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls[\\'passwordconfirmation\\'].errors![\\'minlength\\'].requiredlength",{"_index":810,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls[\\'username\\'].errors![\\'minlength\\'].requiredlength",{"_index":718,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.get('password')?.errors",{"_index":794,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get('passwordconfirmation')?.errors",{"_index":796,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get('username')?.errors",{"_index":792,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get(\\'password\\')?.errors",{"_index":808,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get(\\'passwordconfirmation\\')?.errors",{"_index":809,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get(\\'username\\')?.errors",{"_index":807,"title":{},"body":{"components/SignupComponent.html":{}}}],["authguard",{"_index":170,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authhttpinterceptor",{"_index":142,"title":{"interceptors/AuthHttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":140,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":141,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":29,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["authservice,private",{"_index":674,"title":{},"body":{"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["automatically",{"_index":881,"title":{},"body":{"index.html":{}}}],["available",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"modules.html":{}}}],["back",{"_index":729,"title":{},"body":{"components/SignoutComponent.html":{}}}],["background",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/InputComponent.html":{}}}],["basic.label",{"_index":805,"title":{},"body":{"components/SignupComponent.html":{}}}],["behaviorsubject",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["behaviorsubject(false",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["black",{"_index":425,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["block",{"_index":713,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EmailReplyComponent.html":{},"injectables/MatchPassword.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["bootstrap",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":708,"title":{},"body":{"components/SigninComponent.html":{}}}],["bottom",{"_index":366,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/InputComponent.html":{},"components/SignupComponent.html":{}}}],["browse",{"_index":921,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":890,"title":{},"body":{"index.html":{}}}],["can't",{"_index":580,"title":{},"body":{"components/InputComponent.html":{}}}],["can\\'t",{"_index":591,"title":{},"body":{"components/InputComponent.html":{}}}],["canactivate",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canload",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":911,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":475,"title":{},"body":{"guards/EmailResolverService.html":{},"injectables/UniqueUsername.html":{}}}],["catcherror((e",{"_index":822,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["ccc",{"_index":586,"title":{},"body":{"components/InputComponent.html":{}}}],["center",{"_index":434,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["change",{"_index":883,"title":{},"body":{"index.html":{}}}],["characters",{"_index":570,"title":{},"body":{"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":916,"title":{},"body":{"index.html":{}}}],["checkauth",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["checkconnection",{"_index":736,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkmaxlengthpasswordconfirmation",{"_index":651,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkminlength",{"_index":652,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkminlengthpassword",{"_index":653,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkminlengthpasswordconfirmation",{"_index":737,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkpassworddontmatch",{"_index":738,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkpattern",{"_index":654,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkrequiredpassword",{"_index":655,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkrequiredpasswordconfirmation",{"_index":739,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkrequiredusername",{"_index":656,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checktakenusername",{"_index":740,"title":{},"body":{"components/SignupComponent.html":{}}}],["children",{"_index":542,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["choice",{"_index":905,"title":{},"body":{"index.html":{}}}],["choose",{"_index":638,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["cli",{"_index":869,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_inboxmodule",{"_index":525,"title":{},"body":{"modules/InboxModule.html":{},"overview.html":{}}}],["cluster_inboxmodule_declarations",{"_index":526,"title":{},"body":{"modules/InboxModule.html":{},"overview.html":{}}}],["cluster_inboxmodule_imports",{"_index":527,"title":{},"body":{"modules/InboxModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":641,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":643,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":642,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":885,"title":{},"body":{"index.html":{}}}],["color",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/EmailIndexComponent.html":{}}}],["command",{"_index":906,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{}}}],["complete",{"_index":358,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["completed",{"_index":683,"title":{},"body":{"components/SigninComponent.html":{}}}],["compodoc/compodoc",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["component',this.email",{"_index":509,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["component_template",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["compose",{"_index":363,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["confirm",{"_index":795,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmation",{"_index":797,"title":{},"body":{"components/SignupComponent.html":{}}}],["connection",{"_index":802,"title":{},"body":{"components/SignupComponent.html":{}}}],["console.log(\"%c",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('email",{"_index":359,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{}}}],["console.log('input",{"_index":560,"title":{},"body":{"components/InputComponent.html":{}}}],["console.log('request",{"_index":239,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["console.log('response",{"_index":244,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["console.log('sending",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('show",{"_index":508,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["console.log('signedin",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log('signin",{"_index":682,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log('signing",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log('your",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(authenticated",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log(error.error",{"_index":680,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log(localstorage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log(modifyreq",{"_index":233,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["console.log(req",{"_index":229,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["console.log(response",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log(this.authform",{"_index":681,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log(this.authform,response",{"_index":678,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log(this.emails",{"_index":421,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["console.log(this.route",{"_index":418,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["console.log(url",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(v",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UniqueUsername.html":{}}}],["const",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthRoutingModule.html":{},"components/EmailFormComponent.html":{},"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["constructor(authservice",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"injectables/UniqueUsername.html":{}}}],["constructor(el",{"_index":609,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(emailservice",{"_index":336,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{}}}],["constructor(http",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["constructor(private",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailIndexComponent.html":{},"injectables/EmailService.html":{},"components/ModalComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["constructor(route",{"_index":500,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["constructor(uniqueusername",{"_index":741,"title":{},"body":{"components/SignupComponent.html":{}}}],["content",{"_index":429,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["context",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":548,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['maxlength'].actuallength",{"_index":574,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['maxlength'].requiredlength",{"_index":576,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['minlength'].actuallength",{"_index":569,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['minlength'].requiredlength",{"_index":573,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'maxlength\\'].actuallength",{"_index":589,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'maxlength\\'].requiredlength",{"_index":590,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'minlength\\'].actuallength",{"_index":587,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'minlength\\'].requiredlength",{"_index":588,"title":{},"body":{"components/InputComponent.html":{}}}],["control2",{"_index":818,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["controltype",{"_index":549,"title":{},"body":{"components/InputComponent.html":{}}}],["coverage",{"_index":826,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":330,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SignupComponent.html":{}}}],["create'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["create.component",{"_index":532,"title":{},"body":{"modules/InboxModule.html":{}}}],["create.component.css",{"_index":331,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.html",{"_index":332,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts",{"_index":328,"title":{},"body":{"components/EmailCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:14",{"_index":347,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:15",{"_index":338,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:29",{"_index":343,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:31",{"_index":345,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:39",{"_index":341,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create/email",{"_index":327,"title":{},"body":{"components/EmailCreateComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["credentials",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["css",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{}}}],["default",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["dependencies",{"_index":133,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detected,failed",{"_index":803,"title":{},"body":{"components/SignupComponent.html":{}}}],["dev",{"_index":877,"title":{},"body":{"index.html":{}}}],["development",{"_index":872,"title":{},"body":{"index.html":{}}}],["directive",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["directives",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":889,"title":{},"body":{"index.html":{}}}],["directory",{"_index":894,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":561,"title":{},"body":{"components/InputComponent.html":{}}}],["dismiss",{"_index":608,"title":{},"body":{"components/ModalComponent.html":{}}}],["display",{"_index":622,"title":{},"body":{"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["display:block",{"_index":583,"title":{},"body":{"components/InputComponent.html":{},"components/ModalComponent.html":{}}}],["display:flex",{"_index":427,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["display:none",{"_index":625,"title":{},"body":{"components/ModalComponent.html":{}}}],["dist",{"_index":893,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(this.el.nativeelement",{"_index":616,"title":{},"body":{"components/ModalComponent.html":{}}}],["documentation",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["dynamic",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["e.error.username",{"_index":823,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["e2e",{"_index":903,"title":{},"body":{"index.html":{}}}],["el",{"_index":612,"title":{},"body":{"components/ModalComponent.html":{}}}],["element",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["elementref",{"_index":610,"title":{},"body":{"components/ModalComponent.html":{},"components/SignupComponent.html":{}}}],["ellipsis",{"_index":449,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["email",{"_index":89,"title":{"interfaces/Email.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["email.com",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["email.from",{"_index":423,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{}}}],["email.service",{"_index":348,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{}}}],["email.subject",{"_index":422,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{}}}],["email.to",{"_index":514,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["emailclient",{"_index":866,"title":{},"body":{"index.html":{}}}],["emailcreatecomponent",{"_index":100,"title":{"components/EmailCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailform",{"_index":373,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["emailformcomponent",{"_index":102,"title":{"components/EmailFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailindexcomponent",{"_index":104,"title":{"components/EmailIndexComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailreplycomponent",{"_index":106,"title":{"components/EmailReplyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailresolverservice",{"_index":469,"title":{"guards/EmailResolverService.html":{}},"body":{"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{},"coverage.html":{}}}],["emails",{"_index":411,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["emails:responsegetemails",{"_index":416,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["emailservice",{"_index":337,"title":{"injectables/EmailService.html":{}},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["emailservice:emailservice,private",{"_index":417,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["emailshowcomponent",{"_index":108,"title":{"components/EmailShowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailsubmit",{"_index":377,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["empty",{"_index":476,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["end",{"_index":902,"title":{},"body":{"index.html":{}}}],["enter",{"_index":566,"title":{},"body":{"components/InputComponent.html":{}}}],["entered",{"_index":568,"title":{},"body":{"components/InputComponent.html":{}}}],["environment",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":355,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{}}}],["error('passwords",{"_index":769,"title":{},"body":{"components/SignupComponent.html":{}}}],["error(error.message",{"_index":357,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["error(string(this.authform.errors",{"_index":771,"title":{},"body":{"components/SignupComponent.html":{}}}],["error)=>{throw",{"_index":356,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["error:(error",{"_index":774,"title":{},"body":{"components/SignupComponent.html":{}}}],["errors",{"_index":563,"title":{},"body":{"components/InputComponent.html":{}}}],["event",{"_index":346,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["eventemitter",{"_index":380,"title":{},"body":{"components/EmailFormComponent.html":{},"components/ModalComponent.html":{}}}],["execute",{"_index":899,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["exports",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}}}],["false",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["files",{"_index":884,"title":{},"body":{"index.html":{}}}],["filter",{"_index":226,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["filter(v=>v.type===httpeventtype.sent",{"_index":237,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["first",{"_index":908,"title":{},"body":{"index.html":{}}}],["flex",{"_index":430,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SignupComponent.html":{}}}],["font",{"_index":436,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["form",{"_index":370,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["form.component",{"_index":539,"title":{},"body":{"modules/InboxModule.html":{}}}],["form.component.css",{"_index":371,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.html",{"_index":372,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts",{"_index":369,"title":{},"body":{"components/EmailFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:11",{"_index":388,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:13",{"_index":379,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:15",{"_index":378,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:19",{"_index":385,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:29",{"_index":382,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:33",{"_index":386,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form/email",{"_index":368,"title":{},"body":{"components/EmailFormComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["format",{"_index":578,"title":{},"body":{"components/InputComponent.html":{}}}],["formcontrol",{"_index":384,"title":{},"body":{"components/EmailFormComponent.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol(subject",{"_index":397,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formcontrol(text",{"_index":399,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formcontrol(to,[validators.required",{"_index":394,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formcontrol({value:from,disabled:true",{"_index":396,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formgroup",{"_index":387,"title":{},"body":{"components/EmailFormComponent.html":{},"injectables/MatchPassword.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["formgroupdirective",{"_index":762,"title":{},"body":{"components/SignupComponent.html":{}}}],["formpropertygetters",{"_index":374,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formpropertygetters(prop",{"_index":381,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formpropertygetters(prop:string",{"_index":400,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["found",{"_index":480,"title":{},"body":{"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{},"components/NotFoundComponent.html":{},"components/SigninComponent.html":{}}}],["found'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["found.component",{"_index":538,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["found.component.css",{"_index":628,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":629,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":627,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":631,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":630,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":537,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["function'+prop,this.emailform.get(prop",{"_index":402,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["further",{"_index":912,"title":{},"body":{"index.html":{}}}],["generate",{"_index":887,"title":{},"body":{"index.html":{}}}],["generated",{"_index":868,"title":{},"body":{"index.html":{}}}],["getemail",{"_index":482,"title":{},"body":{"injectables/EmailService.html":{}}}],["getemail(id",{"_index":486,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["getemails",{"_index":483,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["getters",{"_index":401,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["getting",{"_index":864,"title":{"index.html":{}},"body":{}}],["go",{"_index":915,"title":{},"body":{"index.html":{}}}],["graph",{"_index":922,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":178,"title":{"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{},"overview.html":{}}}],["handlersuccessemailsent",{"_index":334,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["handlersuccessemailsent(response",{"_index":339,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["handlersuccessemailsent(response:sendemailresponse",{"_index":361,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["help",{"_index":913,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":445,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["home",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["home.component.css",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":531,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["homecomponent",{"_index":110,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":582,"title":{},"body":{"components/InputComponent.html":{},"components/SignupComponent.html":{}}}],["html",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["http://localhost:4200",{"_index":879,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["http_interceptors",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["httpclientmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent,httpinterceptor,httphandler,httprequest,httpeventtype",{"_index":225,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httpeventtype.response",{"_index":243,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httpeventtype.sent",{"_index":242,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httphandler",{"_index":222,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":228,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httprequest",{"_index":220,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["https://api.angular",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["id",{"_index":323,"title":{},"body":{"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"modules/InboxRoutingModule.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["identifier",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["if(!authenticated",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(error.status",{"_index":775,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(localstorage.length",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["if(password",{"_index":601,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["if(this.authform.controls['password'].errors!['maxlength",{"_index":697,"title":{},"body":{"components/SigninComponent.html":{}}}],["if(this.authform.controls['password'].errors!['minlength",{"_index":696,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['password'].errors!['required",{"_index":695,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['password'].touched",{"_index":693,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['passwordconfirmation'].errors!['maxlength",{"_index":787,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.controls['passwordconfirmation'].errors!['minlength",{"_index":786,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['minlength']){return",{"_index":691,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['nonuniqueusername",{"_index":781,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['pattern",{"_index":692,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['required']){return",{"_index":780,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.errors!['passworddontmatch",{"_index":767,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.invalid",{"_index":675,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.touched",{"_index":690,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.emailform.invalid",{"_index":404,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["implements",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"index.html":{}}}],["import",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["import('./inbox/inbox.module').then(mod=>mod.inboxmodule",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}}}],["inbox",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/InboxModule.html":{}}}],["inboxmodule",{"_index":524,"title":{"modules/InboxModule.html":{}},"body":{"modules/InboxModule.html":{},"modules.html":{},"overview.html":{}}}],["inboxroutingmodule",{"_index":528,"title":{"modules/InboxRoutingModule.html":{}},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["index.component",{"_index":535,"title":{},"body":{"modules/InboxModule.html":{}}}],["index.component.css",{"_index":409,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index.component.html",{"_index":410,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index.component.ts",{"_index":408,"title":{},"body":{"components/EmailIndexComponent.html":{},"coverage.html":{}}}],["index.component.ts:12",{"_index":413,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index.component.ts:16",{"_index":414,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index/email",{"_index":407,"title":{},"body":{"components/EmailIndexComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["injectable({providedin",{"_index":227,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"injectables/MatchPassword.html":{}}}],["injectables",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{},"overview.html":{}}}],["input",{"_index":389,"title":{},"body":{"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["input'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["input.component.css",{"_index":545,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.html",{"_index":546,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component",{"_index":646,"title":{},"body":{"modules/SharedModule.html":{}}}],["input:disabled",{"_index":585,"title":{},"body":{"components/InputComponent.html":{}}}],["inputcomponent",{"_index":112,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":375,"title":{},"body":{"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/InputComponent.html":{}}}],["inputtype",{"_index":550,"title":{},"body":{"components/InputComponent.html":{}}}],["intercept",{"_index":217,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["intercept(req",{"_index":219,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interceptor",{"_index":162,"title":{"interceptors/AuthHttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":216,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:6",{"_index":218,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interceptor.ts:8",{"_index":223,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interceptors",{"_index":214,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interface",{"_index":291,"title":{"interfaces/Email.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Email.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["interfaces",{"_index":321,"title":{},"body":{"interfaces/Email.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"overview.html":{},"interfaces/sendEmailResponse.html":{}}}],["internet",{"_index":801,"title":{},"body":{"components/SignupComponent.html":{}}}],["invalid",{"_index":577,"title":{},"body":{"components/InputComponent.html":{}}}],["isnotsignedin",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["issignedin",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":424,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["items",{"_index":433,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["json",{"_index":793,"title":{},"body":{"components/SignupComponent.html":{}}}],["justify",{"_index":428,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["karma",{"_index":901,"title":{},"body":{"index.html":{}}}],["label",{"_index":551,"title":{},"body":{"components/InputComponent.html":{}}}],["left",{"_index":716,"title":{},"body":{"components/SigninComponent.html":{}}}],["legend",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["length",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.clear",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["localstorage.key(0",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.key(0)}@angular",{"_index":350,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["localstorage.setitem(credentials.username,string(this.signedin$.value",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["location.href",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["log",{"_index":698,"title":{},"body":{"components/SigninComponent.html":{}}}],["long",{"_index":571,"title":{},"body":{"components/InputComponent.html":{}}}],["longer",{"_index":575,"title":{},"body":{"components/InputComponent.html":{}}}],["map",{"_index":817,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["map(v",{"_index":820,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["margin",{"_index":365,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["match",{"_index":770,"title":{},"body":{"components/SignupComponent.html":{}}}],["matching",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":592,"title":{"injectables/MatchPassword.html":{}},"body":{"injectables/MatchPassword.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["max",{"_index":703,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":930,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":603,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["modal.component.css",{"_index":604,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.html",{"_index":605,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":645,"title":{},"body":{"modules/SharedModule.html":{}}}],["modalcomponent",{"_index":114,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modifyreq",{"_index":230,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["module",{"_index":130,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":132,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":914,"title":{},"body":{"index.html":{}}}],["multi",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["n",{"_index":465,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"index.html":{}}}],["navigate",{"_index":878,"title":{},"body":{"index.html":{}}}],["need",{"_index":907,"title":{},"body":{"index.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":221,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{}}}],["next.handle(modifyreq",{"_index":234,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["next:(response",{"_index":773,"title":{},"body":{"components/SignupComponent.html":{}}}],["ng",{"_index":875,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":763,"title":{},"body":{"components/SignupComponent.html":{}}}],["ngmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":606,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngondestroy():void",{"_index":617,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["noconnection",{"_index":735,"title":{},"body":{"components/SignupComponent.html":{}}}],["none",{"_index":623,"title":{},"body":{"components/ModalComponent.html":{}}}],["nonuniqueusername",{"_index":824,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["notfoundcomponent",{"_index":116,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nowrap",{"_index":448,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["null",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["object",{"_index":760,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"components/EmailShowComponent.html":{},"injectables/UniqueUsername.html":{}}}],["observableinput",{"_index":504,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["ok",{"_index":620,"title":{},"body":{"components/ModalComponent.html":{}}}],["ondismissclick",{"_index":607,"title":{},"body":{"components/ModalComponent.html":{}}}],["oninit",{"_index":329,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["onsubmit",{"_index":335,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/SignupComponent.html":{}}}],["onsubmit(email",{"_index":458,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["onsubmit(event",{"_index":344,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["onsubmit(event:email",{"_index":351,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["onsubmitsignin",{"_index":657,"title":{},"body":{"components/SigninComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["out",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["out',response",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["output",{"_index":390,"title":{},"body":{"components/EmailFormComponent.html":{},"components/ModalComponent.html":{}}}],["outputs",{"_index":376,"title":{},"body":{"components/EmailFormComponent.html":{},"components/ModalComponent.html":{}}}],["overflow",{"_index":444,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["overview",{"_index":917,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":849,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":730,"title":{},"body":{"components/SignoutComponent.html":{},"index.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["params",{"_index":503,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["passworconfirmation",{"_index":782,"title":{},"body":{"components/SignupComponent.html":{}}}],["password",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["password,passwordconfirmation}=formgroup.value",{"_index":600,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["password.ts",{"_index":594,"title":{},"body":{"injectables/MatchPassword.html":{},"coverage.html":{}}}],["password.ts:6",{"_index":597,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["passwordconfirmation",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["passworddontmatch",{"_index":598,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["passwords",{"_index":800,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{}}}],["path:'signout",{"_index":260,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["path:'signup",{"_index":261,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["pipe",{"_index":235,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["placeholder",{"_index":633,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["placeholder'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["placeholder.component.css",{"_index":634,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["placeholder.component.html",{"_index":635,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["placeholder/placeholder.component",{"_index":536,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["placeholdercomponent",{"_index":118,"title":{"components/PlaceholderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platform",{"_index":904,"title":{},"body":{"index.html":{}}}],["powderblue;font",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"components/SignupComponent.html":{}}}],["production",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":867,"title":{},"body":{"index.html":{}}}],["promise",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UniqueUsername.html":{}}}],["prop",{"_index":383,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"properties.html":{},"interfaces/sendEmailResponse.html":{}}}],["provide",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":712,"title":{},"body":{"components/SigninComponent.html":{}}}],["reactiveformsmodule",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":640,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["received",{"_index":245,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["reference",{"_index":918,"title":{},"body":{"index.html":{}}}],["reload",{"_index":882,"title":{},"body":{"index.html":{}}}],["reply",{"_index":453,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["reply.component",{"_index":534,"title":{},"body":{"modules/InboxModule.html":{}}}],["reply.component.css",{"_index":454,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.html",{"_index":455,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts",{"_index":452,"title":{},"body":{"components/EmailReplyComponent.html":{},"coverage.html":{}}}],["reply.component.ts:12",{"_index":460,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts:14",{"_index":456,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts:19",{"_index":457,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts:28",{"_index":459,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply/email",{"_index":451,"title":{},"body":{"components/EmailReplyComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["reply:\\n\\n\\n\\n",{"_index":463,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["req",{"_index":224,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["req.clone",{"_index":231,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["require",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":565,"title":{},"body":{"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["reset",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":471,"title":{},"body":{"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{}}}],["resolve(route",{"_index":473,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["resolver.service",{"_index":541,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["resolver.service.ts",{"_index":470,"title":{},"body":{"guards/EmailResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":472,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["resolver.service.ts:15",{"_index":474,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["response",{"_index":342,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{},"components/SigninComponent.html":{}}}],["response)=>{this.handlersuccessemailsent(response",{"_index":354,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["responsegetemails",{"_index":415,"title":{"interfaces/ResponseGetEmails.html":{}},"body":{"components/EmailIndexComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailFormComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["right",{"_index":439,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["root'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["rooturl",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["route",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"components/EmailIndexComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{}}}],["route.params",{"_index":477,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["router",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["router:router",{"_index":727,"title":{},"body":{"components/SignoutComponent.html":{}}}],["routermodule",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":543,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":168,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{}}}],["routing.module.ts",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{}}}],["royalblue",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":874,"title":{},"body":{"index.html":{}}}],["running",{"_index":895,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":886,"title":{},"body":{"index.html":{}}}],["segments",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["semantic",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":406,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["sendemail",{"_index":484,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemail(email",{"_index":489,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["sendemailresponse",{"_index":340,"title":{"interfaces/sendEmailResponse.html":{}},"body":{"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["sent",{"_index":240,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"components/EmailCreateComponent.html":{}}}],["serve",{"_index":876,"title":{},"body":{"index.html":{}}}],["server",{"_index":873,"title":{},"body":{"index.html":{}}}],["session",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["sessionstorage.length",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":777,"title":{},"body":{"components/SignupComponent.html":{}}}],["shared/shared.module",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{}}}],["sharedmodule",{"_index":249,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":497,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["show.component",{"_index":533,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["show.component.css",{"_index":498,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show.component.html",{"_index":499,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show.component.ts",{"_index":496,"title":{},"body":{"components/EmailShowComponent.html":{},"coverage.html":{}}}],["show.component.ts:13",{"_index":501,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show.component.ts:26",{"_index":502,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show/email",{"_index":495,"title":{},"body":{"components/EmailShowComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"coverage.html":{}}}],["showerrors",{"_index":547,"title":{},"body":{"components/InputComponent.html":{}}}],["showmodal",{"_index":333,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{}}}],["sign",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{}}}],["signedin",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signin",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["signin'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["signin(credentials",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signin.component.css",{"_index":648,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.component.html",{"_index":649,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.component",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signincomponent",{"_index":120,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signincredentials",{"_index":274,"title":{"interfaces/SigninCredentials.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["signinresponse",{"_index":297,"title":{"interfaces/SigninResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["signout",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signout'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["signout.component.css",{"_index":723,"title":{},"body":{"components/SignoutComponent.html":{}}}],["signout.component.html",{"_index":724,"title":{},"body":{"components/SignoutComponent.html":{}}}],["signout/signout.component",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signoutcomponent",{"_index":122,"title":{"components/SignoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["signup(credentials",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signup.component.css",{"_index":733,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":734,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":124,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupcredentials",{"_index":279,"title":{"interfaces/SignupCredentials.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["signupresponse",{"_index":296,"title":{"interfaces/SignupResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["size",{"_index":437,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["skipwhile",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["skipwhile(value",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["solid",{"_index":710,"title":{},"body":{"components/SigninComponent.html":{}}}],["somethigweirdisgoingon",{"_index":825,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"index.html":{},"interfaces/sendEmailResponse.html":{}}}],["space",{"_index":447,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["spec\\.ts",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":215,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"modules/AuthRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:14",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:9",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.ts",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:30",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:31",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:44",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:67",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:78",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/signin/signin.component.ts",{"_index":647,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["src/app/auth/signin/signin.component.ts:104",{"_index":659,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:13",{"_index":673,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:25",{"_index":658,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:28",{"_index":665,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:30",{"_index":666,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:49",{"_index":664,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:59",{"_index":660,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:68",{"_index":662,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:80",{"_index":663,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:92",{"_index":661,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signout/signout.component.ts",{"_index":722,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["src/app/auth/signout/signout.component.ts:10",{"_index":725,"title":{},"body":{"components/SignoutComponent.html":{}}}],["src/app/auth/signout/signout.component.ts:14",{"_index":726,"title":{},"body":{"components/SignoutComponent.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":732,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:106",{"_index":754,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:121",{"_index":751,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:133",{"_index":747,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:147",{"_index":752,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":761,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:158",{"_index":748,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":759,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:170",{"_index":745,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:182",{"_index":749,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:34",{"_index":743,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:42",{"_index":755,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:43",{"_index":756,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:70",{"_index":744,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:74",{"_index":753,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:84",{"_index":746,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:94",{"_index":750,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/validators/match",{"_index":593,"title":{},"body":{"injectables/MatchPassword.html":{},"coverage.html":{}}}],["src/app/auth/validators/unique",{"_index":812,"title":{},"body":{"injectables/UniqueUsername.html":{},"coverage.html":{}}}],["src/app/inbox/email",{"_index":326,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"coverage.html":{}}}],["src/app/inbox/email.service.ts",{"_index":481,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["src/app/inbox/email.service.ts:21",{"_index":485,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.service.ts:25",{"_index":488,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.service.ts:28",{"_index":487,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.service.ts:31",{"_index":490,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.ts",{"_index":322,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/app/inbox/home/home.component.ts",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/inbox/home/home.component.ts:10",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/inbox/home/home.component.ts:14",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/inbox/inbox",{"_index":540,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["src/app/inbox/inbox.module.ts",{"_index":529,"title":{},"body":{"modules/InboxModule.html":{}}}],["src/app/inbox/inbox.module.ts:36",{"_index":530,"title":{},"body":{"modules/InboxModule.html":{}}}],["src/app/inbox/not",{"_index":626,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/inbox/placeholder/placeholder.component.ts",{"_index":632,"title":{},"body":{"components/PlaceholderComponent.html":{},"coverage.html":{}}}],["src/app/inbox/placeholder/placeholder.component.ts:12",{"_index":637,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["src/app/inbox/placeholder/placeholder.component.ts:8",{"_index":636,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["src/app/shared/input/input.component.ts",{"_index":544,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/shared/input/input.component.ts:13",{"_index":555,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:15",{"_index":553,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:17",{"_index":554,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:19",{"_index":552,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:24",{"_index":556,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:27",{"_index":557,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/modal/modal.component.ts",{"_index":602,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/modal/modal.component.ts:10",{"_index":611,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/modal/modal.component.ts:14",{"_index":614,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/modal/modal.component.ts:17",{"_index":613,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/modal/modal.component.ts:20",{"_index":615,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":644,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacked.segment",{"_index":707,"title":{},"body":{"components/SigninComponent.html":{}}}],["start",{"_index":431,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["started",{"_index":865,"title":{"index.html":{}},"body":{}}],["state",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":491,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["storage",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":892,"title":{},"body":{"index.html":{}}}],["string",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailFormComponent.html":{},"injectables/EmailService.html":{},"components/InputComponent.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["subject",{"_index":324,"title":{},"body":{"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["submit",{"_index":706,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe",{"_index":353,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(response",{"_index":513,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["subscribe(response=>console.log(response",{"_index":468,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["subscribe(v",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["successfully",{"_index":360,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["support",{"_index":919,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":920,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":505,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["switchmap(({id",{"_index":511,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["symbol",{"_index":700,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["table",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignoutComponent.html":{}}}],["take(1",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["taken",{"_index":579,"title":{},"body":{"components/InputComponent.html":{},"components/SignupComponent.html":{}}}],["tap",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["tap((response",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["tap(({authenticated",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["tap(authenticated",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap(v",{"_index":238,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["tap(v=>console.log(httpeventtype",{"_index":236,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["tell",{"_index":581,"title":{},"body":{"components/InputComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":898,"title":{},"body":{"index.html":{}}}],["testing",{"_index":910,"title":{},"body":{"index.html":{}}}],["tests",{"_index":897,"title":{},"body":{"index.html":{}}}],["text",{"_index":325,"title":{},"body":{"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/SigninComponent.html":{}}}],["this.authform.controls['password'].dirty",{"_index":789,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['password'].errors",{"_index":694,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.controls['password'].touched",{"_index":788,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].dirty",{"_index":790,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].errors",{"_index":784,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].errors!['required",{"_index":785,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].touched",{"_index":783,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['username'].errors",{"_index":687,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.controls['username'].errors!['required",{"_index":689,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.controls['username'].touched",{"_index":688,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.dirty",{"_index":686,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.errors!['password",{"_index":705,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.errors![\\'password",{"_index":721,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.seterrors(error.error",{"_index":679,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.seterrors(this.noconnection",{"_index":776,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.touched",{"_index":685,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authservice.checkauth",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice.signedin",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.signedin$.pipe",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.signin(this.authform.value",{"_index":676,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authservice.signout().subscribe",{"_index":728,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this.authservice.signup(this.authform.value",{"_index":772,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.usernameavailable(value",{"_index":819,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["this.control",{"_index":564,"title":{},"body":{"components/InputComponent.html":{}}}],["this.dismiss.emit",{"_index":619,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.el.nativeelement.remove",{"_index":618,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.email",{"_index":349,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{}}}],["this.email.from",{"_index":462,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.email.text",{"_index":466,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.email.to",{"_index":461,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.email=this.route.snapshot.data['email",{"_index":506,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.emailform",{"_index":393,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["this.emailform.get(prop",{"_index":403,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["this.emails",{"_index":420,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["this.emailservice.getemail(id",{"_index":512,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.emailservice.getemail(id).pipe",{"_index":478,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["this.emailservice.getemails().subscribe((response",{"_index":419,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["this.emailservice.sendemail(email",{"_index":467,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.emailservice.sendemail(event",{"_index":352,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["this.emailsubmit.emit(this.emailform.value",{"_index":405,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["this.http.get(`${this.rooturl}/auth/signedin",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.get(`${this.rooturl}/emails",{"_index":492,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["this.http.get(`${this.rooturl}/emails/${id",{"_index":493,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["this.http.post",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.post(`${this.rooturl}/auth/signin`,credentials",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.post(`${this.rooturl}/auth/signout",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.post(`${this.rooturl}/emails`,email",{"_index":494,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["this.matchpassword.validate",{"_index":758,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.noconnection.noconnection",{"_index":778,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.rooturl}/auth/signup",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.rooturl}/auth/username",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.route.data.subscribe(({email",{"_index":507,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.route.params.pipe",{"_index":510,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.router.navigate(['/inbox",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignoutComponent.html":{}}}],["this.router.navigatebyurl('/inbox",{"_index":677,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.router.navigatebyurl('/inbox/not",{"_index":479,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["this.showmodal",{"_index":362,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{}}}],["this.signedin",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["this.signedin$.next(authenticated",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.next(false",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.next(true",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.value",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.value===false",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.signedin$.value===true",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["this.uniqueusername.validate",{"_index":757,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.usersessioncontroller",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["thisreceiver",{"_index":558,"title":{},"body":{"components/InputComponent.html":{}}}],["throw",{"_index":768,"title":{},"body":{"components/SignupComponent.html":{}}}],["top",{"_index":714,"title":{},"body":{"components/SigninComponent.html":{}}}],["touched",{"_index":562,"title":{},"body":{"components/InputComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["trim",{"_index":443,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["true",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["ui.button.primary",{"_index":364,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["uniqueusername",{"_index":742,"title":{"injectables/UniqueUsername.html":{}},"body":{"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"coverage.html":{}}}],["unit",{"_index":896,"title":{},"body":{"index.html":{}}}],["up",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{}}}],["url",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["url.split('/')[3",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["urlsegment",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["urltree",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":888,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/SignoutComponent.html":{}}}],["userkey:string|null",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["username",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["username.ts",{"_index":813,"title":{},"body":{"injectables/UniqueUsername.html":{},"coverage.html":{}}}],["username.ts:11",{"_index":815,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["username.ts:9",{"_index":814,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["usernameavailable",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernameavailable(username",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernameavailable(username:string",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["usernameavailableresponse",{"_index":292,"title":{"interfaces/UserNameAvailableResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["usersessioncontroller",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["v.available",{"_index":821,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["v.type",{"_index":241,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["valid",{"_index":567,"title":{},"body":{"components/InputComponent.html":{}}}],["validate",{"_index":595,"title":{},"body":{"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["validate(formgroup",{"_index":596,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validation",{"_index":684,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validationerrors",{"_index":764,"title":{},"body":{"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["validator",{"_index":599,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validators",{"_index":392,"title":{},"body":{"components/EmailFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":395,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["validators.maxlength(20",{"_index":668,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":667,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(4",{"_index":672,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.pattern(/^[a",{"_index":669,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":398,"title":{},"body":{"components/EmailFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators/match",{"_index":765,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators/unique",{"_index":766,"title":{},"body":{"components/SignupComponent.html":{}}}],["value",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["variable",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":931,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":870,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":900,"title":{},"body":{"index.html":{}}}],["void",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["want",{"_index":639,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["weight:bold",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":446,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["width",{"_index":441,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["withcredentials",{"_index":232,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["withcredentials:true",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["works",{"_index":731,"title":{},"body":{"components/SignoutComponent.html":{}}}],["wrote",{"_index":464,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["z0",{"_index":670,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["zone.js",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                signedin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNotSignedIn\n                            \n                            \n                                isSignedIn\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                userSessionController\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isNotSignedIn\n                        \n                    \n                \n            \n            \n                \nisNotSignedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSignedIn\n                        \n                    \n                \n            \n            \n                \nisSignedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSessionController\n                        \n                    \n                \n            \n            \n                \nuserSessionController()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        signedin$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  signedin$!: BehaviorSubject;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    ){\n    this.signedin$ = this.authService.signedin$;\n  }\n  ngOnInit() {\n     this.userSessionController();    \n  }\n   isSignedIn(){\n    return this.signedin$.value===true ? true : false;\n   }\n   isNotSignedIn(){\n    return this.signedin$.value===false ? true : false;\t\n   }\n   userSessionController(){\n    let url = location.href;\n    let inbox =url.split('/')[3];\n    console.log(\"%c\" + 'SESSION STORAGE LENGTH: '+ sessionStorage.length, \"color: PowderBlue;font-weight:bold; background-color: RoyalBlue;\")\n    console.log(url);\n    if(localStorage.length > 0){\n      this.signedin$.next(true);\n      if (inbox !== 'inbox') {\n        console.log('Sending user to inbox from userSessionController');\n        this.router.navigate(['/inbox']); \n      }\n      const userKey:string|null = localStorage.key(0) || 'No user in localStorage';\n      return console.log(localStorage);\n    }else{\n      return false;\n    }\n   }\n}\n\n    \n\n    \n        \n    \n        Angular Email\n        \n            \n                Inbox\n                Sign Out\n            \n            \n                 Sign In\n                Sign Up\n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Angular Email                                    Inbox                Sign Out                                         Sign In                Sign Up                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\n\n\nAuthHttpInterceptor\n\nAuthHttpInterceptor\n\nAppModule -->\n\nAuthHttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthHttpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module'; \nimport { AuthRoutingModule } from './auth/auth-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthHttpInterceptor } from './auth/auth-http-interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    AuthRoutingModule,\n    HttpClientModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthHttpInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'inbox',\n    canLoad: [AuthGuard],\n    loadChildren: () => \n    \"import('./inbox/inbox.module').then(mod=>mod.InboxModule)\"\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanLoad, Route, Router, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable, skipWhile, take, tap } from 'rxjs';\nimport { AuthService } from './auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanLoad {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable | Promise | boolean | UrlTree {\n    return this.authService.signedin$.pipe(\n      skipWhile(value => value === null),\n      take(1),\n      tap(authenticated => {\n        console.log('Your authentifications is: ',authenticated,this.authService.signedin$)\n        if(!authenticated) {\n          this.router.navigateByUrl('/');\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthHttpInterceptor.html":{"url":"interceptors/AuthHttpInterceptor.html","title":"interceptor - AuthHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-http-interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-http-interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-http-interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpEvent,HttpInterceptor,HttpHandler,HttpRequest,HttpEventType } from '@angular/common/http';\nimport { filter, Observable, tap } from 'rxjs'\n\n@Injectable({providedIn: 'root'})\nexport class AuthHttpInterceptor implements HttpInterceptor {\n    constructor() { };\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        console.log(req)\n        const modifyReq = req.clone({\n            withCredentials: true,\n        });\n        console.log(modifyReq)\n        return next.handle(modifyReq)\n            .pipe(\n                tap(v=>console.log(HttpEventType))\n                // filter(v=>v.type===HttpEventType.Sent),\n                // tap(v => {\n                //     console.log('Request was sent it');\n                //     if (v.type === HttpEventType.Sent) {\n                //         console.log('Request was sent it');\n                //     }\n                //     if (v.type === HttpEventType.Response) {\n                //         console.log('Response received it');\n                //     }\n                // }),\n            )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nSigninComponent\n\nSigninComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSigninComponent->AuthModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthModule -->\n\nSignoutComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SigninComponent\n                        \n                        \n                            SignoutComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { SignoutComponent } from './signout/signout.component';\n\n\n@NgModule({\n  declarations: [\n    SigninComponent,\n    SignupComponent,\n    SignoutComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {SignupComponent} from './signup/signup.component';\nimport {SigninComponent} from './signin/signin.component';\nimport { SignoutComponent } from './signout/signout.component';\n\nconst routes: Routes = [\n  {path:'signout', component: SignoutComponent},\n  {path:'signup', component: SignupComponent},\n  {path:'', component: SigninComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                            \n                                signedin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuth\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                            \n                                usernameAvailable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuth\n                        \n                    \n                \n            \n            \n                \ncheckAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signin\n                        \n                    \n                \n            \n            \n                \nsignin(credentials: SigninCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                SigninCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signout\n                        \n                    \n                \n            \n            \n                \nsignout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(credentials: SignupCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                SignupCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameAvailable\n                        \n                    \n                \n            \n            \n                \nusernameAvailable(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.angular-email.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signedin$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            html\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Email {\n        id: string;\n        subject: string;\n        text: string;\n        to: string;\n        from: string;\n        html: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailCreateComponent.html":{"url":"components/EmailCreateComponent.html","title":"component - EmailCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-create/email-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-create\n            \n\n            \n                styleUrls\n                ./email-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handlerSuccessEmailSent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-create/email-create.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handlerSuccessEmailSent\n                        \n                    \n                \n            \n            \n                \nhandlerSuccessEmailSent(response: sendEmailResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-create/email-create.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                sendEmailResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-create/email-create.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-create/email-create.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Email\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-create/email-create.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-create/email-create.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Email } from '../email';\nimport { EmailService } from '../email.service';\nimport { sendEmailResponse } from '../email.service';\n\n\n\n@Component({\n  selector: 'app-email-create',\n  templateUrl: './email-create.component.html',\n  styleUrls: ['./email-create.component.css']\n})\nexport class EmailCreateComponent implements OnInit {\n  showModal = false;\n  email: Email;\n  constructor(\n    private emailService: EmailService\n  ) {\n    this.email= {\n      id: '',\n      to: '',\n      subject: '',\n      html: '',\n      text: '',\n      from: `${localStorage.key(0)}@angular-email.com`\n    }\n   }\n\n  ngOnInit(): void {\n  }\n  onSubmit(event:Email){\n    this.emailService.sendEmail(event)\n    .subscribe({\n      next: (response)=>{this.handlerSuccessEmailSent(response)},\n      error: (error)=>{throw new Error(error.message)},\n      complete: ()=>{console.log('Email sent successfully')}\n    })\n  }\n  handlerSuccessEmailSent(response:sendEmailResponse){\n      console.log(response);\n      this.showModal = false;\n  }\n\n}\n\n    \n\n    \n        \n    Compose\n\n\n    Compose\n    \n\n    \n\n    \n                \n                    ./email-create.component.css\n                \n                .ui.button.primary {\n    margin-bottom: 1rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Compose    Compose    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailFormComponent.html":{"url":"components/EmailFormComponent.html","title":"component - EmailFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-form/email-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-form\n            \n\n            \n                styleUrls\n                ./email-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formPropertyGetters\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-form/email-form.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :         Email\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inbox/email-form/email-form.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emailSubmit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inbox/email-form/email-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formPropertyGetters\n                        \n                    \n                \n            \n            \n                \nformPropertyGetters(prop: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-form/email-form.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-form/email-form.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-form/email-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-form/email-form.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Email } from '../email';\n\n@Component({\n  selector: 'app-email-form',\n  templateUrl: './email-form.component.html',\n  styleUrls: ['./email-form.component.css']\n})\nexport class EmailFormComponent implements OnInit {\n  emailForm!: FormGroup;\n  @Input()\n  email!: Email;\n  @Output()\n  emailSubmit: EventEmitter = new EventEmitter;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    //console.log('EMAIL FORM');\n    const { subject, from, to, text } = this.email;\n    this.emailForm = new FormGroup({\n      to: new FormControl(to,[Validators.required, Validators.email]),\n      from: new FormControl({value:from,disabled:true}),\n      subject: new FormControl(subject, [Validators.required]),\n      text: new FormControl(text, [Validators.required])\n    })\n  }\n  formPropertyGetters(prop:string){\n    //console.log('EMAIL FORM GETTERS FUNCTION'+prop,this.emailForm.get(prop));\n    return this.emailForm.get(prop) as FormControl;\n  }\n  onSubmit(){\n    if(this.emailForm.invalid){\n      return;\n    }else{\n      return this.emailSubmit.emit(this.emailForm.value)\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n    \n    \n    \n   \n    \n    \n    \n    \n    \n    \n    \n    \n    Send\n\n\n\n    \n\n    \n                \n                    ./email-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Send'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailIndexComponent.html":{"url":"components/EmailIndexComponent.html","title":"component - EmailIndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailIndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-index/email-index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-index\n            \n\n            \n                styleUrls\n                ./email-index.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-index/email-index.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-index/email-index.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResponseGetEmails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-index/email-index.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmailService } from '../email.service';\nimport { ResponseGetEmails } from '../email.service';\n\n@Component({\n  selector: 'app-email-index',\n  templateUrl: './email-index.component.html',\n  styleUrls: ['./email-index.component.css']\n})\nexport class EmailIndexComponent implements OnInit {\n   emails:ResponseGetEmails[] = [];\n\n  constructor(private emailService:EmailService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.route)\n    this.emailService.getEmails().subscribe((response) => {\n      this.emails = response;\n      console.log(this.emails);\n  })\n\n }\n}\n\n    \n\n    \n        \n    \n      \n        \n            \n                {{email.subject}}\n            \n            \n                {{email.from}}\n            \n        \n      \n    \n\n\n    \n\n    \n                \n                    ./email-index.component.css\n                \n                .item a{\n    color: black;\n}\n\na.active {\n    display:flex;\n    justify-content: flex-start;\n    align-items: center;\n}\n\na.active:before {\n    content: '>';\n    font-size: 20px;\n    margin-right: 10px; \n}\n\n.content {\n    width: 90%;\n}\n\n.trim {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{email.subject}}                                        {{email.from}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailIndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailReplyComponent.html":{"url":"components/EmailReplyComponent.html","title":"component - EmailReplyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailReplyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-reply/email-reply.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-reply\n            \n\n            \n                styleUrls\n                ./email-reply.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-reply.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-reply/email-reply.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :         Email\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inbox/email-reply/email-reply.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-reply/email-reply.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(email: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-reply/email-reply.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-reply/email-reply.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Email } from '../email';\nimport { EmailService, sendEmailResponse } from '../email.service';\n\n@Component({\n  selector: 'app-email-reply',\n  templateUrl: './email-reply.component.html',\n  styleUrls: ['./email-reply.component.css']\n})\nexport class EmailReplyComponent implements OnInit {\n\n  showModal: boolean = false;\n  @Input()\n  email!: Email;\n  constructor(\n    private emailService: EmailService\n  ) { }\n\n  ngOnInit(): void {\n    this.email = {\n      ...this.email,\n      from: this.email.to,\n      to: this.email.from,\n      text: `Reply:\\n\\n\\n\\n----------------\n      ${this.email.from} wrote: \\n> ${this.email.text}`\n     }\n  }\n  onSubmit(email: Email){\n    this.emailService.sendEmail(email)\n    .subscribe(response=>console.log(response));\n    this.showModal = false;\n  }\n\n}\n\n\n\n\n    \n\n    \n        \n    Reply\n    \n\n\n    Reply\n    \n\n    \n\n    \n                \n                    ./email-reply.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Reply        Reply    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailReplyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EmailResolverService.html":{"url":"guards/EmailResolverService.html","title":"guard - EmailResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EmailResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/inbox/email-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { catchError, EMPTY } from 'rxjs';\nimport { Email } from './email';\nimport { EmailService } from './email.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailResolverService implements Resolve{\n  constructor(\n    private emailService: EmailService,\n    private router: Router\n    ) { }\n  resolve(route: ActivatedRouteSnapshot) {\n    const {id} = route.params;\n    return this.emailService.getEmail(id).pipe(\n      catchError(()=>{\n        this.router.navigateByUrl('/inbox/not-found');\n        return EMPTY;\n      })\n    )\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmail\n                            \n                            \n                                getEmails\n                            \n                            \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmail\n                        \n                    \n                \n            \n            \n                \ngetEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmails\n                        \n                    \n                \n            \n            \n                \ngetEmails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmail\n                        \n                    \n                \n            \n            \n                \nsendEmail(email: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.angular-email.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email} from './email';\n\nexport interface ResponseGetEmails{\n  id: string;\n  subject: string;\n  from: string;\n}\n\nexport interface sendEmailResponse {\n  status: string;\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  rootUrl = 'https://api.angular-email.com'\n\n  constructor(private http: HttpClient) { }\n\n  getEmails(){\n    return this.http.get(`${this.rootUrl}/emails`);\n  }\n  getEmail(id: string){\n    return this.http.get(`${this.rootUrl}/emails/${id}`);\t\n  }\n  sendEmail(email: Email){\n    return this.http.post(`${this.rootUrl}/emails`,email)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailShowComponent.html":{"url":"components/EmailShowComponent.html","title":"component - EmailShowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailShowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-show/email-show.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-show\n            \n\n            \n                styleUrls\n                ./email-show.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-show.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-show/email-show.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-show/email-show.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Email\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-show/email-show.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EmailService } from '../email.service';\nimport { Email} from '../email';\nimport { Observable, ObservableInput, switchMap } from 'rxjs';\n\n@Component({\n  selector: 'app-email-show',\n  templateUrl: './email-show.component.html',\n  styleUrls: ['./email-show.component.css']\n})\nexport class EmailShowComponent implements OnInit {\n  email!: Email;\n\n  constructor(\n    private route: ActivatedRoute,\n    private emailService: EmailService,\n    ) { \n        this.email=this.route.snapshot.data['email']\n        this.route.data.subscribe(({email}) =>{\n          this.email = email;\n          console.log('show component',this.email);\n        })\n      }\n\n  ngOnInit(): void {\n    // this.route.params.pipe(\n    //   switchMap(({id}) => { \n    //     return this.emailService.getEmail(id)\n    //   })\n    //   ).subscribe(response=>{\n    //     this.email = response;\n    //   })\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        {{email.subject}}\n        \n            From: {{email.from}}\n        \n        \n            To: {{email.to}}\n        \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./email-show.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{email.subject}}                    From: {{email.from}}                            To: {{email.to}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailShowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/home/home.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {}\n  //   this.authService.checkAuth()\n  //   .subscribe(v=>{\n  //     console.log(v);\n  //   })\n  // }\n\n\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InboxModule.html":{"url":"modules/InboxModule.html","title":"module - InboxModule","body":"\n                   \n\n\n\n\n    Modules\n    InboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InboxModule\n\n\n\ncluster_InboxModule_declarations\n\n\n\ncluster_InboxModule_imports\n\n\n\n\nEmailCreateComponent\n\nEmailCreateComponent\n\n\n\nInboxModule\n\nInboxModule\n\nInboxModule -->\n\nEmailCreateComponent->InboxModule\n\n\n\n\n\nEmailFormComponent\n\nEmailFormComponent\n\nInboxModule -->\n\nEmailFormComponent->InboxModule\n\n\n\n\n\nEmailIndexComponent\n\nEmailIndexComponent\n\nInboxModule -->\n\nEmailIndexComponent->InboxModule\n\n\n\n\n\nEmailReplyComponent\n\nEmailReplyComponent\n\nInboxModule -->\n\nEmailReplyComponent->InboxModule\n\n\n\n\n\nEmailShowComponent\n\nEmailShowComponent\n\nInboxModule -->\n\nEmailShowComponent->InboxModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nInboxModule -->\n\nHomeComponent->InboxModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nInboxModule -->\n\nNotFoundComponent->InboxModule\n\n\n\n\n\nPlaceholderComponent\n\nPlaceholderComponent\n\nInboxModule -->\n\nPlaceholderComponent->InboxModule\n\n\n\n\n\nInboxRoutingModule\n\nInboxRoutingModule\n\nInboxModule -->\n\nInboxRoutingModule->InboxModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInboxModule -->\n\nSharedModule->InboxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inbox/inbox.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EmailCreateComponent\n                        \n                        \n                            EmailFormComponent\n                        \n                        \n                            EmailIndexComponent\n                        \n                        \n                            EmailReplyComponent\n                        \n                        \n                            EmailShowComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PlaceholderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InboxRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/inbox.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InboxRoutingModule } from './inbox-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { EmailCreateComponent } from './email-create/email-create.component';\nimport { EmailShowComponent } from './email-show/email-show.component';\nimport { EmailReplyComponent } from './email-reply/email-reply.component';\nimport { EmailIndexComponent } from './email-index/email-index.component';\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { EmailFormComponent } from './email-form/email-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    EmailCreateComponent,\n    EmailShowComponent,\n    EmailReplyComponent,\n    EmailIndexComponent,\n    PlaceholderComponent,\n    NotFoundComponent,\n    EmailFormComponent\n  ],\n  imports: [\n    CommonModule,\n    InboxRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class InboxModule {\n  ngOnInit(){}\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InboxRoutingModule.html":{"url":"modules/InboxRoutingModule.html","title":"module - InboxRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InboxRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inbox/inbox-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmailShowComponent } from './email-show/email-show.component';\nimport { HomeComponent } from './home/home.component';\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\nimport { EmailResolverService } from './email-resolver.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }, \n      {\n        path: ':id', \n        component: EmailShowComponent,\n        resolve: {\n          email : EmailResolverService\n        }\n      },\n      {\n        path: '',\n        component: PlaceholderComponent     \n      },\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InboxRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                controlType\n                            \n                            \n                                inputType\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/input/input.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        controlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'input'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/input/input.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n            \n                \nshowErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/input/input.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ThisReceiver } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n  @Input()\n  label!: string;\n  @Input()\n  control!: FormControl;\n  @Input()\n  inputType!: string;\n  @Input()\n  controlType = 'input';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n     //console.log('INPUT COMPONENT');\n  }\n  showErrors() {\n    const { dirty, touched, errors } = this.control;\n    return dirty && touched && errors;\n  }\n\n}\n\n    \n\n    \n        \n    {{ label }}\n\n    \n    \n     \n    \n      \n        Value is required\n      \n      \n          Enter a valid email\n      \n      \n        Value you entered is\n        {{ control.errors!['minlength'].actualLength }}\n        characters long, but it must be at aleast\n        {{ control.errors!['minlength'].requiredLength }}\n        characters\n      \n      \n        Value you entered is\n        {{ control.errors!['maxlength'].actualLength }}\n        characters long, but it cannot be longer than\n        {{ control.errors!['maxlength'].requiredLength }}\n        characters\n      \n      \n        Invalid format\n      \n      \n        Username is taken\n      \n      \n        Can't tell if username is taken\n      \n    \n  \n\n    \n\n    \n                \n                    ./input.component.css\n                \n                :host {\n    display:block;\n    margin-bottom: 1em;\n}\n:host input:disabled {\n    background: #ccc;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}                               Value is required                      Enter a valid email                    Value you entered is        {{ control.errors![\\'minlength\\'].actualLength }}        characters long, but it must be at aleast        {{ control.errors![\\'minlength\\'].requiredLength }}        characters                    Value you entered is        {{ control.errors![\\'maxlength\\'].actualLength }}        characters long, but it cannot be longer than        {{ control.errors![\\'maxlength\\'].requiredLength }}        characters                    Invalid format                    Username is taken                    Can\\'t tell if username is taken            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPassword.html":{"url":"injectables/MatchPassword.html","title":"injectable - MatchPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/validators/match-password.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(formGroup: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/validators/match-password.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { passwordDontMatch: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Validator, AbstractControl } from '@angular/forms';\nimport { Injectable } from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class MatchPassword implements Validator {\n    validate(formGroup: AbstractControl){\n        const {password,passwordConfirmation}=formGroup.value;\n        if(password=== passwordConfirmation){\n            return null;\n        }\n        else{\n            return {passwordDontMatch: true};\n        }  \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDismissClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/modal/modal.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dismiss\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal/modal.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/modal/modal.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/modal/modal.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDismissClick\n                        \n                    \n                \n            \n            \n                \nonDismissClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/modal/modal.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  @Output() dismiss = new EventEmitter();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit(): void {\n    document.body.appendChild(this.el.nativeElement);\n  }\n  ngOnDestroy():void{\n    this.el.nativeElement.remove();\n  }\n onDismissClick(){\n   this.dismiss.emit();\n }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n            \n        \n        \n            \n                Ok\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./modal.component.css\n                \n                .actions:empty{\n    display: none;\n}\n\n.actions-default {\n    display:none;\n}\n\n.actions:empty + .actions-default{\n    display:block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Ok                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Email not found!\n    \n\n    \n\n    \n                \n                    ./not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Email not found!    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceholderComponent.html":{"url":"components/PlaceholderComponent.html","title":"component - PlaceholderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaceholderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/placeholder/placeholder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-placeholder\n            \n\n            \n                styleUrls\n                ./placeholder.component.css\n            \n\n\n\n            \n                templateUrl\n                ./placeholder.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/placeholder/placeholder.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/placeholder/placeholder.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-placeholder',\n  templateUrl: './placeholder.component.html',\n  styleUrls: ['./placeholder.component.css']\n})\nexport class PlaceholderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Choose the email you want to read\n    \n\n    \n\n    \n                \n                    ./placeholder.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Choose the email you want to read    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceholderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseGetEmails.html":{"url":"interfaces/ResponseGetEmails.html","title":"interface - ResponseGetEmails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseGetEmails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email} from './email';\n\nexport interface ResponseGetEmails{\n  id: string;\n  subject: string;\n  from: string;\n}\n\nexport interface sendEmailResponse {\n  status: string;\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  rootUrl = 'https://api.angular-email.com'\n\n  constructor(private http: HttpClient) { }\n\n  getEmails(){\n    return this.http.get(`${this.rootUrl}/emails`);\n  }\n  getEmail(id: string){\n    return this.http.get(`${this.rootUrl}/emails/${id}`);\t\n  }\n  sendEmail(email: Email){\n    return this.http.post(`${this.rootUrl}/emails`,email)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nInputComponent\n\nInputComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nSharedModule -->\n\nModalComponent->SharedModule\n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nSharedModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InputComponent\n                        \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InputComponent\n                        \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ModalComponent } from './modal/modal.component';\nimport { InputComponent } from './input/input.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    ModalComponent,\n    InputComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    ModalComponent,\n    InputComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signin/signin.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signin\n            \n\n            \n                styleUrls\n                ./signin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkMaxLengthPasswordConfirmation\n                            \n                            \n                                checkMinLength\n                            \n                            \n                                checkMinLengthPassword\n                            \n                            \n                                checkPattern\n                            \n                            \n                                checkRequiredPassword\n                            \n                            \n                                checkRequiredUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitSignin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signin/signin.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkMaxLengthPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckMaxLengthPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLength\n                        \n                    \n                \n            \n            \n                \ncheckMinLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLengthPassword\n                        \n                    \n                \n            \n            \n                \ncheckMinLengthPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPattern\n                        \n                    \n                \n            \n            \n                \ncheckPattern()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredPassword\n                        \n                    \n                \n            \n            \n                \ncheckRequiredPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredUsername\n                        \n                    \n                \n            \n            \n                \ncheckRequiredUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitSignin\n                        \n                    \n                \n            \n            \n                \nonSubmitSignin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n})\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signin/signin.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n//import { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  authForm = new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n});\n  constructor(private authService: AuthService,private router: Router) { }\n//\n  ngOnInit(): void {\n  }\n  onSubmitSignin(){\n    if(this.authForm.invalid) return;\n    this.authService.signin(this.authForm.value)\n    .subscribe({\n      next: (response)=>{\n       this.router.navigateByUrl('/inbox');\n       console.log(this.authForm,response)\n      },\n      error: (error)=>{\n         this.authForm.setErrors(error.error)\n         console.log(error.error);\n         console.log(this.authForm);\n      },\n      complete: ()=>{\n        console.log('Signin Response Completed')\n      }\n    });\n  }\n  /** @UserName Input validation *********************************/\n  checkRequiredUsername() {\n    if (this.authForm.touched && this.authForm.dirty &&\n      this.authForm.controls['username'].errors! &&\n      this.authForm.controls['username'].touched) {\n      if (this.authForm.controls['username'].errors!['required']) { return true; }\n      else { return false };\n    } else {\n      return false;\n    }\n  }\n  checkMinLength(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n       if(this.authForm.controls['username'].errors!['minlength']){return true;}\n       else {return false;};\n    }else{\n      return false;\n    }\n  }\n  checkPattern(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n      if(this.authForm.controls['username'].errors!['pattern']){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkRequiredPassword(){\n    if(this.authForm.controls['password'].touched && this.authForm.dirty && \n    this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['required']){\n        return true;\n      }else {\n        return false};\n    }\n    else{\n      return false\n    }\n  }\n  checkMinLengthPassword(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['minlength']){\n        return true;\n      }else {\n        return false;\n      };\n    }else{\n      return false\n    }\n  }\n  checkMaxLengthPasswordConfirmation(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['maxlength']){\n        return true;\n      }else {\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n    Log in\n    \n        \n        value is required\n        characters must be at least\n            {{authForm.controls['username'].errors!['minlength'].requiredLength}}\n            characters\n        This symbol is not allowed\n        \n            {{'Username not found!'}}\n        \n    \n    \n        \n        password is required\n        characters must be at least\n            {{authForm.controls['password'].errors!['minlength'].requiredLength}}\n            characters\n        \n        characters must be max\n            {{authForm.controls['password'].errors!['maxlength'].requiredLength}}\n            characters\n        \n        \n            {{this.authForm.errors!['password']}}\n        \n    \n    Submit\n\n\n\n    \n\n    \n                \n                    ./signin.component.css\n                \n                .stacked.segment {      \n border: 1px solid #54C8FF;\n border-radius: 10px ;\n display: block;\n margin-top: 200px;\n margin-left: 200px;\n align-content: center;\n text-align: center;\n width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Log in                    value is required        characters must be at least            {{authForm.controls[\\'username\\'].errors![\\'minlength\\'].requiredLength}}            characters        This symbol is not allowed                    {{\\'Username not found!\\'}}                                password is required        characters must be at least            {{authForm.controls[\\'password\\'].errors![\\'minlength\\'].requiredLength}}            characters                characters must be max            {{authForm.controls[\\'password\\'].errors![\\'maxlength\\'].requiredLength}}            characters                            {{this.authForm.errors![\\'password\\']}}                Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SigninCredentials.html":{"url":"interfaces/SigninCredentials.html","title":"interface - SigninCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SigninCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SigninResponse.html":{"url":"interfaces/SigninResponse.html","title":"interface - SigninResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SigninResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authenticated\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authenticated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signout/signout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signout\n            \n\n            \n                styleUrls\n                ./signout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signout/signout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signout/signout.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signout',\n  templateUrl: './signout.component.html',\n  styleUrls: ['./signout.component.css']\n})\nexport class SignoutComponent implements OnInit {\n\n  constructor(private authService: AuthService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.authService.signout().subscribe(()=>{\n      //take the user back to signin page\n      this.router.navigateByUrl('/')\n    })\n  }\n\n}\n\n    \n\n    \n        signout works!\n\n    \n\n    \n                \n                    ./signout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'signout works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                noConnection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkConnection\n                            \n                            \n                                checkMaxLengthPasswordConfirmation\n                            \n                            \n                                checkMinLength\n                            \n                            \n                                checkMinLengthPassword\n                            \n                            \n                                checkMinLengthPasswordConfirmation\n                            \n                            \n                                checkPasswordDontMatch\n                            \n                            \n                                checkPattern\n                            \n                            \n                                checkRequiredPassword\n                            \n                            \n                                checkRequiredPasswordConfirmation\n                            \n                            \n                                checkRequiredUsername\n                            \n                            \n                                checkTakenUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueUserName: UniqueUsername, matchPassword: MatchPassword, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueUserName\n                                                  \n                                                        \n                                                                        UniqueUsername\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPassword\n                                                  \n                                                        \n                                                                        MatchPassword\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkConnection\n                        \n                    \n                \n            \n            \n                \ncheckConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMaxLengthPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckMaxLengthPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLength\n                        \n                    \n                \n            \n            \n                \ncheckMinLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLengthPassword\n                        \n                    \n                \n            \n            \n                \ncheckMinLengthPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLengthPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckMinLengthPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordDontMatch\n                        \n                    \n                \n            \n            \n                \ncheckPasswordDontMatch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPattern\n                        \n                    \n                \n            \n            \n                \ncheckPattern()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredPassword\n                        \n                    \n                \n            \n            \n                \ncheckRequiredPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckRequiredPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredUsername\n                        \n                    \n                \n            \n            \n                \ncheckRequiredUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkTakenUsername\n                        \n                    \n                \n            \n            \n                \ncheckTakenUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[this.uniqueUserName.validate]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n    passwordConfirmation: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ])\n  },{ validators: [this.matchPassword.validate] }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { noConnection: false}\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, ValidationErrors, Validators } from '@angular/forms';\nimport { MatchPassword} from '../validators/match-password';\nimport { UniqueUsername } from '../validators/unique-username';\nimport { AuthService } from '../auth.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n  noConnection = { noConnection: false};\n  authForm = new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[this.uniqueUserName.validate]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n    passwordConfirmation: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ])\n  },{ validators: [this.matchPassword.validate] }\n  );\n\n  constructor(\n    private uniqueUserName: UniqueUsername,\n    private matchPassword: MatchPassword,\n    private authService: AuthService\n    ) {}\n\n  ngOnInit(): void {}\n  onSubmit() {\n    if(this.authForm.invalid){\n      if(this.authForm.errors!['passwordDontMatch']){\n        throw new Error('Passwords do not match!');\n      }else{\n        throw new Error(String(this.authForm.errors) || '{}');\n      }\n    }\n    else{\n     this.authService.signup(this.authForm.value)\n     .subscribe({\n       next:(response)=>{\n         console.log(response);\n       },\n       error:(error)=>{\n         if(error.status === 0){\n           this.authForm.setErrors(this.noConnection = { noConnection: true});\n           setTimeout(()=>{\n             this.noConnection.noConnection = false;\n            },5000)\n         }\n           \n        },\n       complete:()=>{},\n     })\n    }\n  }\n  checkConnection(){\n    return this.noConnection.noConnection;\n  }\n  /** @UserName Input validation *********************************/\n  checkRequiredUsername(){\n    if(this.authForm.touched && this.authForm.dirty &&\n      this.authForm.controls['username'].errors! &&\n      this.authForm.controls['username'].touched){\n       if(this.authForm.controls['username'].errors!['required']){return true;}\n       else {return false};\n    }else{\n      return false;\n    }\n  }\n  checkMinLength(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n       if(this.authForm.controls['username'].errors!['minlength']){return true;}\n       else {return false;};\n    }else{\n      return false;\n    }\n  }\n\n  checkPattern(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n      if(this.authForm.controls['username'].errors!['pattern']){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkTakenUsername(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n\n      if(this.authForm.controls['username'].errors!['nonUniqueUsername']){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n    /** @Password Input validation *********************************/\n  \n  checkRequiredPassword(){\n    if(this.authForm.controls['password'].touched && this.authForm.dirty && \n    this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['required']){\n        return true;\n      }else {\n        return false};\n    }\n    else{\n      return false\n    }\n  }\n  checkMinLengthPassword(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['minlength']){\n        return true;\n      }else {\n        return false;\n      };\n    }else{\n      return false\n    }\n  }\n\n  /** @PassworConfirmation Input validation *********************************/\n  checkRequiredPasswordConfirmation(){\n    if (this.authForm.controls['passwordConfirmation'].touched &&\n      this.authForm.dirty &&\n      this.authForm.controls['passwordConfirmation'].errors!) {\n       if (this.authForm.controls['passwordConfirmation'].errors!['required']) {return true;} \n       else {return false};\n    }\n    else {\n      return false\n    }\n  }\n  checkMinLengthPasswordConfirmation(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['passwordConfirmation'].errors!){\n      if(this.authForm.controls['passwordConfirmation'].errors!['minlength']){\n        return true;\n      }else {\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkMaxLengthPasswordConfirmation(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['passwordConfirmation'].errors!){\n      if(this.authForm.controls['passwordConfirmation'].errors!['maxlength']){\n        return true;\n      }else {\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkPasswordDontMatch(){\n    if(\n    this.authForm.controls['password'].touched &&\n    this.authForm.controls['password'].dirty &&\n    this.authForm.controls['passwordConfirmation'].touched &&\n    this.authForm.controls['passwordConfirmation'].dirty\n    ){\n      return this.authForm.controls['passwordConfirmation'].errors ? true : false;  \n    }else {\n      return false; \n    }\n  }\n}\n\n\n\n    \n\n    \n        create account\n\n    \n        Username\n        \n        {{ authForm.get('username')?.errors | json }} \n            value is required\n            characters must be at least\n                {{authForm.controls['username'].errors!['minlength'].requiredLength}}\n                characters\n            This symbol is not allowed\n            This username is taken\n    \n    \n    \n        Password\n        \n        password is required\n        characters must be at least\n            {{authForm.controls['password'].errors!['minlength'].requiredLength}}\n            characters\n        {{ authForm.get('password')?.errors | json }} \n    \n\n    \n        confirm-password\n        \n        {{ authForm.get('passwordConfirmation')?.errors | json }}\n        password confirmation is required\n        \n        characters must be at least\n            {{authForm.controls['passwordConfirmation'].errors!['minlength'].requiredLength}}\n            characters\n        \n        characters must be max\n            {{authForm.controls['passwordConfirmation'].errors!['maxlength'].requiredLength}}\n            characters\n        \n        \n            Passwords does not match\n        \n    \n     \n        \n            Submit\n        \n        \n            No internet connection detected,failed to sign up\n        \n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                :host {\n    display: block;\n    margin-bottom: 100em;\n}\n\n.basic.label{\n    margin-bottom: 0.5em;\n}\n\n.submit {\n    display: flex;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'create account            Username                {{ authForm.get(\\'username\\')?.errors | json }}             value is required            characters must be at least                {{authForm.controls[\\'username\\'].errors![\\'minlength\\'].requiredLength}}                characters            This symbol is not allowed            This username is taken                    Password                password is required        characters must be at least            {{authForm.controls[\\'password\\'].errors![\\'minlength\\'].requiredLength}}            characters        {{ authForm.get(\\'password\\')?.errors | json }}                 confirm-password                {{ authForm.get(\\'passwordConfirmation\\')?.errors | json }}        password confirmation is required                characters must be at least            {{authForm.controls[\\'passwordConfirmation\\'].errors![\\'minlength\\'].requiredLength}}            characters                characters must be max            {{authForm.controls[\\'passwordConfirmation\\'].errors![\\'maxlength\\'].requiredLength}}            characters                            Passwords does not match                                     Submit                            No internet connection detected,failed to sign up        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupCredentials.html":{"url":"interfaces/SignupCredentials.html","title":"interface - SignupCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            passwordConfirmation\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordConfirmation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupResponse.html":{"url":"interfaces/SignupResponse.html","title":"interface - SignupResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniqueUsername.html":{"url":"injectables/UniqueUsername.html","title":"injectable - UniqueUsername","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UniqueUsername\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/validators/unique-username.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/validators/unique-username.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/validators/unique-username.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidator, ValidationErrors } from '@angular/forms';\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { AuthService } from '../auth.service'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UniqueUsername implements AsyncValidator {\n    constructor(private authService: AuthService) { }\n    validate = (control2: AbstractControl): Promise | Observable  => {\n        const { value } = control2;\n        return this.authService.usernameAvailable(value)\n            .pipe(\n                map(v => {\n                    if (v.available) {\n                        console.log(v)\n                        return null\n                    } else {\n                        return value\n                    }\n                }),\n                catchError((e) => {\n                    if (e.error.username) {\n                        return of({ nonUniqueUsername: true })\n                    }\n                    else {\n                        return of({ somethigWeirdIsGoingOn: true })\n                    }\n                })\n            )\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserNameAvailableResponse.html":{"url":"interfaces/UserNameAvailableResponse.html","title":"interface - UserNameAvailableResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserNameAvailableResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            available\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/auth-http-interceptor.ts\n            \n            interceptor\n            AuthHttpInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SigninCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SigninResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignupCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignupResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            UserNameAvailableResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/signin/signin.component.ts\n            \n            component\n            SigninComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/auth/signout/signout.component.ts\n            \n            component\n            SignoutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/auth/validators/match-password.ts\n            \n            injectable\n            MatchPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/validators/unique-username.ts\n            \n            injectable\n            UniqueUsername\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/email-create/email-create.component.ts\n            \n            component\n            EmailCreateComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/inbox/email-form/email-form.component.ts\n            \n            component\n            EmailFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/inbox/email-index/email-index.component.ts\n            \n            component\n            EmailIndexComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inbox/email-reply/email-reply.component.ts\n            \n            component\n            EmailReplyComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/inbox/email-resolver.service.ts\n            \n            guard\n            EmailResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/email-show/email-show.component.ts\n            \n            component\n            EmailShowComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inbox/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/inbox/email.service.ts\n            \n            interface\n            ResponseGetEmails\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inbox/email.service.ts\n            \n            interface\n            sendEmailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/inbox/email.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/inbox/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/placeholder/placeholder.component.ts\n            \n            component\n            PlaceholderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            semantic-ui-css : ^2.4.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEmailclient\nThis project was generated with Angular CLI version 13.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InboxRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_InboxModule\n\n\n\ncluster_InboxModule_declarations\n\n\n\ncluster_InboxModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthHttpInterceptor\n\nAuthHttpInterceptor\n\nAppModule -->\n\nAuthHttpInterceptor->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthModule -->\n\nSigninComponent->AuthModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthModule -->\n\nSignoutComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nInboxModule\n\nInboxModule\n\nInboxModule -->\n\nSharedModule->InboxModule\n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nSharedModule->ModalComponent \n\n\n\n\n\nEmailCreateComponent\n\nEmailCreateComponent\n\nInboxModule -->\n\nEmailCreateComponent->InboxModule\n\n\n\n\n\nEmailFormComponent\n\nEmailFormComponent\n\nInboxModule -->\n\nEmailFormComponent->InboxModule\n\n\n\n\n\nEmailIndexComponent\n\nEmailIndexComponent\n\nInboxModule -->\n\nEmailIndexComponent->InboxModule\n\n\n\n\n\nEmailReplyComponent\n\nEmailReplyComponent\n\nInboxModule -->\n\nEmailReplyComponent->InboxModule\n\n\n\n\n\nEmailShowComponent\n\nEmailShowComponent\n\nInboxModule -->\n\nEmailShowComponent->InboxModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nInboxModule -->\n\nHomeComponent->InboxModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nInboxModule -->\n\nNotFoundComponent->InboxModule\n\n\n\n\n\nPlaceholderComponent\n\nPlaceholderComponent\n\nInboxModule -->\n\nPlaceholderComponent->InboxModule\n\n\n\n\n\nInboxRoutingModule\n\nInboxRoutingModule\n\nInboxModule -->\n\nInboxRoutingModule->InboxModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nSharedModule -->\n\nModalComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sendEmailResponse.html":{"url":"interfaces/sendEmailResponse.html","title":"interface - sendEmailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  sendEmailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email} from './email';\n\nexport interface ResponseGetEmails{\n  id: string;\n  subject: string;\n  from: string;\n}\n\nexport interface sendEmailResponse {\n  status: string;\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  rootUrl = 'https://api.angular-email.com'\n\n  constructor(private http: HttpClient) { }\n\n  getEmails(){\n    return this.http.get(`${this.rootUrl}/emails`);\n  }\n  getEmail(id: string){\n    return this.http.get(`${this.rootUrl}/emails/${id}`);\t\n  }\n  sendEmail(email: Email){\n    return this.http.post(`${this.rootUrl}/emails`,email)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
