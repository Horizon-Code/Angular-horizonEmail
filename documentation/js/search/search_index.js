var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.331,1,0.905]],["body/components/AppComponent.html",[0,0.446,1,1.345,2,1.229,3,0.164,4,0.142,5,0.885,6,0.885,7,0.885,8,0.885,9,0.142,10,2.258,11,0.885,12,2.238,13,2.106,14,1.229,15,1.306,16,4.661,17,1.306,18,3.921,19,0.279,20,0.852,21,2.455,22,0.852,23,5.146,24,5.146,25,1.613,26,5.489,27,0.614,28,1.642,29,1.828,30,3.672,31,1.171,32,3.921,33,0.738,34,0.024,35,0.95,36,0.527,37,0.738,38,2.657,39,1.118,40,1.477,41,2.657,42,2.657,43,0.833,44,2.657,45,2.455,46,0.359,47,0.164,48,1.066,49,0.941,50,2.657,51,0.164,52,0.185,53,0.833,54,1.995,55,2.657,56,2.657,57,2.657,58,1.19,59,2.657,60,1.229,61,2.651,62,2.657,63,2.657,64,2.657,65,4.313,66,2.657,67,2.657,68,2.657,69,2.657,70,2.657,71,2.657,72,3.333,73,2.657,74,2.657,75,2.258,76,2.657,77,2.657,78,2.657,79,1.995,80,1.4,81,2.657,82,3.333,83,2.657,84,1.137,85,2.657,86,2.657,87,2.657,88,1.4,89,3.333,90,1.135,91,4.881,92,2.066,93,3.333,94,0.885,95,1.229,96,1.306,97,0.885,98,1.714,99,0.885,100,0.885,101,0.694,102,0.885,103,0.694,104,0.885,105,0.694,106,0.885,107,0.694,108,0.885,109,0.653,110,0.885,111,0.653,112,0.885,113,0.694,114,0.885,115,0.694,116,0.885,117,0.653,118,0.885,119,0.653,120,0.885,121,0.653,122,0.885,123,0.653,124,0.885,125,0.653,126,0.833,127,0.885,128,0.885,129,0.013,130,0.013]],["title/modules/AppModule.html",[131,1.824,132,2.344]],["body/modules/AppModule.html",[1,1.799,3,0.225,4,0.196,9,0.196,13,1.145,34,0.024,46,0.461,47,0.225,51,0.225,52,0.255,60,1.145,92,1.925,129,0.016,130,0.016,132,4.735,133,1.563,134,2.587,135,3.105,136,3.105,137,3.105,138,3.105,139,3.105,140,3.937,141,3.937,142,3.624,143,3.937,144,3.034,145,2.258,146,3.654,147,3.324,148,4.91,149,2.587,150,4.91,151,2.587,152,4.91,153,3.105,154,2.744,155,4.91,156,4.91,157,1.376,158,3.654,159,3.687,160,4.91,161,3.654,162,1.925,163,2.744,164,3.654,165,3.654,166,3.654]],["title/modules/AppRoutingModule.html",[131,1.824,140,2.14]],["body/modules/AppRoutingModule.html",[3,0.291,4,0.253,9,0.253,34,0.024,46,0.437,47,0.291,48,1.894,51,0.291,52,0.329,65,3.545,84,2.02,129,0.019,130,0.019,133,2.02,140,3.578,149,2.487,151,3.05,167,4.721,168,3.545,169,3.562,170,4.347,171,3.919,172,4.721,173,3.545,174,4.012,175,4.721,176,4.721,177,4.012,178,3.196]],["title/guards/AuthGuard.html",[171,2.344,179,2.6]],["body/guards/AuthGuard.html",[3,0.205,4,0.179,9,0.179,14,1.044,19,0.349,22,1.001,27,1.066,28,2.059,29,2.063,30,3.925,31,1.077,33,1.468,34,0.024,35,1.077,36,0.71,37,1.468,39,1.001,40,2.149,46,0.398,47,0.205,48,1.336,49,1.179,51,0.205,52,0.232,58,1.066,60,1.044,129,0.015,130,0.015,171,3.121,174,5.09,180,2.501,181,2.831,182,5.99,183,3.331,184,3.331,185,4.848,186,5.286,187,5.705,188,3.331,189,4.383,190,4.055,191,4.848,192,5.99,193,3.331,194,5.286,195,5.705,196,3.331,197,1.133,198,3.331,199,2.831,200,1.632,201,2.059,202,1.254,203,0.819,204,2.622,205,3.331,206,3.331,207,0.983,208,2.501,209,3.331,210,3.331,211,3.331,212,3.331,213,3.331,214,3.331,215,2.831]],["title/interceptors/AuthHttpInterceptor.html",[143,2.14,163,2.6]],["body/interceptors/AuthHttpInterceptor.html",[3,0.235,4,0.204,9,0.204,14,1.195,19,0.4,22,1.097,27,1.31,31,1.03,33,1.059,34,0.024,35,0.777,36,0.512,37,1.059,39,0.828,46,0.395,47,0.235,49,1.35,51,0.235,52,0.266,58,0.882,60,1.195,84,1.632,129,0.017,130,0.017,143,3.123,157,1.437,162,2.985,190,3.836,197,0.938,200,1.869,203,0.938,216,3.815,217,4.255,218,3.242,219,5.053,220,3.815,221,5.053,222,5.667,223,4.255,224,5.667,225,3.815,226,3.815,227,3.815,228,3.815,229,3.242,230,3.815,231,3.815,232,3.815,233,2.01,234,3.815,235,1.869,236,3.815,237,3.815,238,5.053,239,4.294,240,5.053,241,3.815,242,3.815,243,3.815,244,3.815]],["title/modules/AuthModule.html",[131,1.824,141,2.14]],["body/modules/AuthModule.html",[3,0.24,4,0.209,9,0.209,34,0.024,46,0.468,47,0.24,51,0.24,52,0.272,92,2.058,121,1.596,123,1.596,125,1.596,129,0.017,130,0.017,133,1.671,134,2.704,141,4.34,142,3.693,144,3.172,145,2.414,147,3.475,149,2.704,151,2.704,159,2.933,245,3.319,246,3.319,247,3.319,248,3.693,249,3.906,250,3.854,251,2.644,252,3.906,253,3.319,254,3.319,255,3.854,256,1.671,257,3.319,258,3.319]],["title/modules/AuthRoutingModule.html",[131,1.824,142,1.97]],["body/modules/AuthRoutingModule.html",[0,0.595,3,0.286,4,0.249,9,0.249,34,0.024,46,0.465,47,0.286,48,1.864,51,0.286,52,0.324,84,1.988,121,1.41,123,1.41,125,1.41,129,0.019,130,0.019,133,1.988,142,3.261,149,2.448,151,3.02,168,3.489,169,3.537,170,4.305,173,3.489,177,3.949,178,3.146,217,3.489,253,3.949,254,3.949,258,3.949,259,4.647,260,4.647]],["title/injectables/AuthService.html",[29,1.153,197,0.851]],["body/injectables/AuthService.html",[3,0.179,4,0.156,9,0.156,14,0.913,19,0.306,20,0.911,21,2.589,22,0.911,27,0.674,29,1.397,31,1.275,33,1.493,34,0.024,35,1.096,36,0.765,37,1.493,39,1.237,40,1.58,45,1.536,46,0.343,47,0.179,49,1.032,51,0.179,52,0.203,53,0.913,58,1.317,60,0.913,80,2.21,88,1.536,126,1.315,129,0.014,130,0.014,157,1.098,162,1.536,197,1.032,200,1.428,202,1.098,207,1.45,233,1.536,235,2.635,261,1.801,262,1.536,263,2.248,264,3.059,265,3.15,266,2.832,267,4.196,268,2.477,269,2.103,270,4.196,271,2.915,272,2.387,273,2.635,274,2.915,275,2.796,276,2.915,277,2.387,278,2.635,279,2.915,280,2.915,281,2.436,282,2.915,283,2.713,284,1.683,285,1.919,286,1.795,287,2.915,288,1.485,289,2.387,290,1.401,291,1.428,292,1.536,293,2.056,294,1.428,295,1.428,296,1.428,297,1.658,298,1.658,299,1.658,300,2.387,301,1.658,302,1.658,303,1.658,304,1.658,305,1.658,306,1.658,307,1.658,308,2.796,309,2.056,310,1.658,311,1.658,312,1.658,313,1.658,314,1.658,315,1.658,316,1.658,317,1.658,318,1.658]],["title/interfaces/Email.html",[90,0.661,290,0.851]],["body/interfaces/Email.html",[3,0.282,4,0.245,9,0.245,19,0.48,20,1.233,34,0.023,36,0.909,51,0.282,90,1.084,95,2.023,129,0.019,130,0.019,281,2.722,290,1.125,319,2.092,320,3.887,321,3.401,322,3.673,323,3.673]],["title/components/EmailCreateComponent.html",[0,0.331,101,0.905]],["body/components/EmailCreateComponent.html",[0,0.443,1,0.687,2,1.219,3,0.162,4,0.141,5,0.875,6,0.875,7,0.875,8,0.875,9,0.141,11,0.875,12,2.234,13,2.102,15,1.295,17,1.295,19,0.276,20,0.845,22,0.845,25,1.604,27,0.899,31,1.166,33,1.286,34,0.024,35,1.114,36,0.687,37,1.286,39,1.006,43,1.604,46,0.357,47,0.162,51,0.162,52,0.183,61,2.635,90,1.314,94,0.875,95,1.451,96,1.295,97,0.875,98,1.705,99,0.875,100,0.875,101,1.338,102,0.875,103,0.687,104,0.875,105,0.687,106,0.875,107,0.687,108,0.875,109,0.646,110,0.875,111,0.646,112,0.875,113,0.687,114,0.875,115,0.687,116,0.875,117,0.646,118,0.875,119,0.646,120,0.875,121,0.646,122,0.875,123,0.646,124,0.875,125,0.646,126,0.824,127,0.875,128,0.875,129,0.013,130,0.013,203,0.957,204,1.495,207,0.775,223,1.974,239,2.234,284,1.054,286,1.125,288,0.93,309,1.288,321,1.385,322,1.495,323,1.495,324,3.119,325,4.446,326,2.234,327,1.639,328,3.306,329,4.632,330,3.89,331,3.936,332,3.89,333,2.634,334,1.779,335,2.448,336,3.89,337,2.628,338,2.44,339,2.628,340,1.779,341,2.628,342,2.628,343,2.628,344,2.628,345,2.628,346,2.404,347,1.779,348,2.628,349,2.628,350,2.628,351,1.974,352,2.628,353,2.234,354,2.628,355,2.628,356,1.974,357,2.234,358,2.628,359,2.628,360,2.234,361,5.119,362,2.628,363,1.624,364,1.974,365,2.628]],["title/components/EmailFormComponent.html",[0,0.331,103,0.905]],["body/components/EmailFormComponent.html",[0,0.445,1,0.691,2,1.224,3,0.163,4,0.142,5,0.88,6,0.88,7,0.88,8,0.88,9,0.142,11,0.88,12,2.236,13,2.104,15,1.301,17,1.301,19,0.277,20,0.848,22,0.848,25,1.608,27,1.074,31,1.209,33,0.734,34,0.023,35,0.947,36,0.689,37,0.734,39,1.009,43,1.224,46,0.324,47,0.163,51,0.163,52,0.184,58,1.074,84,1.131,90,1.304,94,0.88,95,1.224,96,1.301,97,0.88,98,1.709,99,0.88,100,0.88,101,0.691,102,0.88,103,1.341,104,0.88,105,0.691,106,0.88,107,0.691,108,0.88,109,0.65,110,0.88,111,0.65,112,0.88,113,0.691,114,0.88,115,0.691,116,0.88,117,0.65,118,0.88,119,0.65,120,0.88,121,0.65,122,0.88,123,0.65,124,0.88,125,0.65,126,0.828,127,0.88,128,0.88,129,0.013,130,0.013,203,0.96,256,1.131,281,1.471,288,2.029,322,2.222,323,2.222,324,3.208,327,1.645,333,3.475,347,1.789,357,3.319,366,4.572,367,2.246,368,5.133,369,4.646,370,3.906,371,4.646,372,3.906,373,2.933,374,3.319,375,4.646,376,3.906,377,2.643,378,4.362,379,2.643,380,2.643,381,2.643,382,2.871,383,2.643,384,2.643,385,3.475,386,2.643,387,2.414,388,3.319,389,1.984,390,1.984,391,2.643,392,2.643,393,2.643,394,2.643,395,2.643,396,2.933,397,2.643,398,2.643,399,2.643,400,2.643,401,2.643,402,2.643,403,2.643,404,3.906]],["title/components/EmailIndexComponent.html",[0,0.331,105,0.905]],["body/components/EmailIndexComponent.html",[0,0.457,1,0.724,2,1.268,3,0.171,4,0.149,5,0.923,6,0.923,7,0.923,8,0.923,9,0.149,11,0.923,12,2.252,13,2.12,15,1.347,17,1.347,19,0.501,20,0.879,22,0.879,25,1.646,27,0.641,31,0.974,33,0.77,34,0.024,35,0.974,36,0.543,37,0.77,39,0.602,43,1.268,46,0.366,47,0.171,48,1.112,51,0.171,52,0.193,53,0.869,72,2.356,90,1.252,94,0.923,95,1.268,96,1.347,97,0.923,98,1.749,99,0.923,100,0.923,101,0.724,102,0.923,103,0.724,104,0.923,105,1.373,106,0.923,107,0.724,108,0.923,109,0.682,110,0.923,111,0.682,112,0.923,113,0.724,114,0.923,115,0.724,116,0.923,117,0.682,118,0.923,119,0.682,120,0.923,121,0.682,122,0.923,123,0.682,124,0.923,125,0.682,126,0.869,127,0.923,128,0.923,129,0.013,130,0.013,189,3.234,203,0.995,207,0.818,284,1.112,323,1.577,324,2.767,327,1.691,334,1.877,335,2.247,340,1.877,346,2.5,363,1.713,405,3.943,406,2.356,407,4.777,408,4.046,409,4.046,410,4.463,411,4.046,412,2.772,413,2.301,414,2.772,415,2.772,416,2.772,417,2.772,418,2.772,419,2.772,420,3.438,421,3.438,422,2.772,423,2.772,424,2.772,425,2.772,426,2.772,427,4.06,428,2.356,429,2.772,430,2.356,431,2.772,432,2.356,433,2.772,434,2.772,435,2.772,436,2.772,437,2.772,438,2.356,439,3.438,440,2.772,441,2.772,442,4.046,443,2.772,444,2.772,445,2.772,446,2.772,447,2.772,448,2.772]],["title/components/EmailReplyComponent.html",[0,0.331,107,0.905]],["body/components/EmailReplyComponent.html",[0,0.46,1,0.731,2,1.277,3,0.172,4,0.15,5,0.932,6,0.932,7,0.932,8,0.932,9,0.15,11,0.932,12,2.256,13,2.123,15,1.356,17,1.356,19,0.293,20,0.885,22,0.885,25,1.653,27,0.942,31,1.142,33,1.131,34,0.023,35,1.075,36,0.708,37,1.131,39,0.885,40,1.534,43,1.505,46,0.335,47,0.172,51,0.172,52,0.195,61,2.732,90,1.332,94,0.932,95,1.277,96,1.356,97,0.932,98,1.757,99,0.932,100,0.932,101,0.731,102,0.932,103,0.731,104,0.932,105,0.731,106,0.932,107,1.379,108,0.932,109,0.688,110,0.932,111,0.688,112,0.932,113,0.731,114,0.932,115,0.731,116,0.932,117,0.688,118,0.932,119,0.688,120,0.932,121,0.688,122,0.932,123,0.688,124,0.932,125,0.688,126,0.877,127,0.932,128,0.932,129,0.013,130,0.013,203,1.002,204,1.592,207,0.826,284,1.123,323,1.592,324,3.082,327,1.7,331,4.082,333,2.758,334,1.895,335,2.503,338,1.474,346,1.729,347,2.758,360,2.378,373,3.059,387,2.517,449,4.393,450,2.378,451,5.851,452,4.803,453,4.074,454,4.074,455,2.799,456,4.074,457,2.799,458,2.799,459,2.799,460,4.074,461,2.799,462,2.799,463,2.799,464,2.799,465,2.799,466,2.799]],["title/guards/EmailResolverService.html",[179,2.6,467,2.344]],["body/guards/EmailResolverService.html",[3,0.245,4,0.213,9,0.213,14,1.247,19,0.417,22,1.128,27,1.201,30,4.108,31,1.059,33,1.443,34,0.024,35,1.059,36,0.698,37,1.443,39,0.864,46,0.444,47,0.245,48,1.597,49,1.409,51,0.245,52,0.277,58,1.201,84,1.703,90,0.993,129,0.017,130,0.017,180,2.989,185,5.212,189,2.694,197,1.278,202,1.499,203,0.979,204,2.956,321,2.097,324,3.048,334,2.694,335,2.792,346,2.46,467,3.518,468,3.382,469,5.212,470,3.98,471,5.196,472,3.98,473,4.416,474,5.196,475,3.98,476,3.98,477,3.98,478,2.694]],["title/injectables/EmailService.html",[197,0.851,335,1.482]],["body/injectables/EmailService.html",[3,0.229,4,0.199,9,0.199,14,1.165,19,0.39,20,1.079,22,1.079,27,0.86,31,1.268,33,1.554,34,0.024,35,1.14,36,0.802,37,1.554,39,1.215,46,0.39,47,0.229,51,0.344,52,0.259,53,1.165,58,1.293,90,1.223,129,0.016,130,0.016,157,1.4,162,2.617,197,1.221,202,1.4,207,1.097,261,2.298,263,2.558,268,3.16,269,2.555,281,2.502,284,1.492,285,2.272,286,2.126,290,1.221,321,2.617,322,2.115,335,2.126,338,1.959,413,2.115,479,2.517,480,4.968,481,4.484,482,4.968,483,4.968,484,3.73,485,3.718,486,3.718,487,3.73,488,3.718,489,2.792,490,2.792,491,2.792,492,2.792]],["title/components/EmailShowComponent.html",[0,0.331,109,0.851]],["body/components/EmailShowComponent.html",[0,0.466,1,0.748,2,1.298,3,0.176,4,0.154,5,0.954,6,0.954,7,0.954,8,0.954,9,0.154,11,0.954,12,2.263,13,2.13,15,1.379,17,1.379,19,0.3,20,0.9,22,0.9,25,1.671,27,0.958,31,0.992,33,0.795,34,0.024,35,0.992,36,0.556,37,0.795,39,0.622,43,1.298,46,0.394,47,0.176,48,1.149,49,1.014,51,0.176,52,0.2,58,0.662,90,1.323,94,0.954,95,1.298,96,1.379,97,0.954,98,1.776,99,0.954,100,0.954,101,0.748,102,0.954,103,0.748,104,0.954,105,0.748,106,0.954,107,0.748,108,0.954,109,1.311,110,0.954,111,0.704,112,0.954,113,0.748,114,0.954,115,0.748,116,0.954,117,0.704,118,0.954,119,0.704,120,0.954,121,0.704,122,0.954,123,0.704,124,0.954,125,0.704,126,0.897,127,0.954,128,0.954,129,0.014,130,0.014,189,2.804,190,1.939,203,1.018,204,2.357,324,2.809,327,1.723,335,2.602,340,1.939,346,1.77,347,2.804,410,4.532,420,3.52,421,3.52,493,3.61,494,2.434,495,4.142,496,4.867,497,4.142,498,2.864,499,4.142,500,2.864,501,2.864,502,2.864,503,2.864,504,2.864,505,2.864,506,2.864,507,2.864,508,2.864,509,2.864,510,2.864,511,2.864,512,4.142]],["title/components/HomeComponent.html",[0,0.331,111,0.851]],["body/components/HomeComponent.html",[0,0.518,1,0.912,2,1.491,3,0.215,4,0.187,5,1.162,6,1.162,7,1.162,8,1.162,9,0.187,11,1.162,12,2.325,13,2.188,15,1.585,17,1.585,19,0.366,22,1.033,25,1.823,27,1.252,31,0.97,34,0.024,35,0.97,39,0.758,43,1.491,46,0.243,47,0.215,51,0.215,52,0.243,90,1.163,94,1.162,95,1.491,96,1.585,97,1.162,98,1.937,99,1.162,100,1.162,101,0.912,102,1.162,103,0.912,104,1.162,105,0.912,106,1.162,107,0.912,108,1.162,109,0.858,110,1.162,111,1.43,112,1.162,113,0.912,114,1.162,115,0.912,116,1.162,117,0.858,118,1.162,119,0.858,120,1.162,121,0.858,122,1.162,123,0.858,124,1.162,125,0.858,126,1.093,127,1.162,128,1.162,129,0.016,130,0.016,203,1.17,327,1.917,513,2.965,514,4.759,515,5.416,516,4.759,517,3.489,518,3.489,519,3.489,520,3.489,521,3.489]],["title/modules/InboxModule.html",[131,1.824,522,2.344]],["body/modules/InboxModule.html",[3,0.196,4,0.171,9,0.171,22,0.692,25,1.618,31,0.649,34,0.024,39,0.692,43,0.999,46,0.473,47,0.196,51,0.196,52,0.222,65,2.393,90,1.126,92,1.679,101,1.597,103,1.597,105,1.597,107,1.597,109,1.502,111,1.502,117,1.502,119,1.502,129,0.015,130,0.015,133,1.363,134,2.355,144,2.762,145,1.969,147,3.026,149,2.355,151,2.355,159,2.393,248,3.476,250,3.356,251,2.157,255,3.356,256,1.363,257,2.708,325,2.393,366,2.393,405,2.393,449,2.393,493,2.157,522,4.796,523,2.708,524,2.708,525,2.708,526,3.776,527,3.187,528,3.187,529,2.708,530,3.187,531,2.708,532,3.187,533,3.187,534,2.708,535,2.157,536,2.708,537,3.187]],["title/modules/InboxRoutingModule.html",[131,1.824,526,2.14]],["body/modules/InboxRoutingModule.html",[0,0.594,3,0.252,4,0.22,9,0.22,34,0.024,46,0.467,47,0.252,48,1.645,51,0.252,52,0.286,84,1.755,90,1.121,109,1.303,111,1.303,117,1.303,119,1.303,129,0.017,130,0.017,133,1.755,149,2.161,151,2.792,168,3.08,169,3.339,170,3.979,173,4.659,178,2.777,321,2.161,467,3.588,469,3.486,478,2.777,493,2.777,526,3.275,529,3.486,531,3.486,534,3.486,535,2.777,536,3.486,538,4.102,539,4.102,540,4.102,541,4.102]],["title/components/InputComponent.html",[0,0.331,113,0.905]],["body/components/InputComponent.html",[0,0.477,1,0.652,2,1.173,3,0.154,4,0.134,5,0.831,6,0.831,7,0.831,8,0.831,9,0.134,11,0.831,12,2.215,13,2.084,15,1.246,17,1.246,19,0.262,22,0.813,25,1.563,27,1.038,31,1.186,34,0.024,35,0.763,36,0.67,39,0.813,43,1.173,46,0.313,47,0.154,51,0.154,52,0.174,58,0.577,75,2.12,84,1.067,90,1.112,94,0.831,95,1.173,96,1.246,97,0.831,98,1.661,99,0.831,100,0.831,101,0.652,102,0.831,103,0.652,104,0.831,105,0.652,106,0.831,107,0.652,108,0.831,109,0.613,110,0.831,111,0.613,112,0.831,113,1.304,114,0.831,115,0.652,116,0.831,117,0.613,118,0.831,119,0.613,120,0.831,121,0.613,122,0.831,123,0.613,124,0.831,125,0.613,126,0.782,127,0.831,128,0.831,129,0.012,130,0.012,203,0.92,207,1.717,256,1.067,281,2.013,283,2.281,284,1.001,327,1.589,363,1.542,364,1.873,373,2.81,382,2.775,387,3.784,542,2.12,543,4.49,544,3.742,545,4.989,546,4.49,547,4.49,548,4.49,549,5.345,550,3.742,551,2.495,552,2.495,553,2.495,554,2.495,555,2.495,556,2.495,557,2.12,558,2.495,559,3.742,560,3.742,561,3.742,562,2.495,563,2.81,564,3.742,565,3.742,566,4.989,567,2.495,568,4.495,569,4.989,570,3.742,571,2.495,572,2.495,573,3.742,574,2.495,575,3.742,576,3.742,577,4.24,578,2.495,579,3.742,580,3.18,581,2.12,582,2.495,583,2.495,584,2.495,585,2.495,586,2.495,587,2.495,588,2.495,589,2.495]],["title/injectables/MatchPassword.html",[197,0.851,590,2.344]],["body/injectables/MatchPassword.html",[3,0.278,4,0.242,9,0.242,14,1.416,19,0.474,22,1.224,31,0.921,33,1.255,34,0.024,35,0.921,36,0.607,37,1.255,39,0.981,40,1.702,46,0.393,47,0.278,51,0.278,52,0.315,58,1.302,60,1.416,84,1.933,129,0.019,130,0.019,197,1.111,203,1.111,208,3.393,229,3.839,256,1.933,261,2.792,294,2.214,385,3.059,389,4.827,590,3.814,591,4.788,592,3.839,593,4.788,594,5.634,595,4.518,596,5.634,597,5.634,598,4.518,599,4.518]],["title/components/ModalComponent.html",[0,0.331,115,0.905]],["body/components/ModalComponent.html",[0,0.484,1,0.802,2,1.363,3,0.189,4,0.164,5,1.021,6,1.021,7,1.021,8,1.021,9,0.164,11,1.021,12,2.286,13,2.151,15,1.449,17,1.449,19,0.322,22,0.945,25,1.724,27,0.709,31,1.184,33,0.852,34,0.023,35,1.03,36,0.584,37,0.852,39,1.098,43,1.724,46,0.214,47,0.189,51,0.189,52,0.214,53,0.961,90,1.11,94,1.021,95,1.363,96,1.449,97,1.021,98,1.832,99,1.021,100,1.021,101,0.802,102,1.021,103,0.802,104,1.021,105,0.802,106,1.021,107,0.802,108,1.021,109,0.754,110,1.021,111,0.754,112,1.021,113,0.802,114,1.021,115,1.438,116,1.021,117,0.754,118,1.021,119,0.754,120,1.021,121,0.754,122,1.021,123,0.754,124,1.021,125,0.754,126,0.961,127,1.021,128,1.021,129,0.014,130,0.014,203,1.07,284,1.745,288,1.086,327,1.79,374,3.697,378,4.297,388,3.697,581,2.606,600,2.606,601,4.351,602,5.056,603,4.351,604,5.056,605,5.502,606,5.056,607,3.067,608,4.676,609,4.351,610,4.351,611,3.067,612,3.067,613,3.067,614,3.067,615,3.067,616,3.067,617,3.067,618,4.351,619,4.351,620,2.303,621,3.067,622,4.351,623,3.067]],["title/components/NotFoundComponent.html",[0,0.331,117,0.851]],["body/components/NotFoundComponent.html",[0,0.518,1,0.91,2,1.489,3,0.214,4,0.187,5,1.159,6,1.159,7,1.159,8,1.159,9,0.187,11,1.159,12,2.325,13,2.188,15,1.582,17,1.582,19,0.365,22,1.032,25,1.821,27,1.25,31,0.968,34,0.023,35,0.968,39,0.756,43,1.489,46,0.243,47,0.214,51,0.214,52,0.243,90,1.228,94,1.159,95,1.489,96,1.582,97,1.159,98,1.935,99,1.159,100,1.159,101,0.91,102,1.159,103,0.91,104,1.159,105,0.91,106,1.159,107,0.91,108,1.159,109,0.856,110,1.159,111,0.856,112,1.159,113,0.91,114,1.159,115,0.91,116,1.159,117,1.429,118,1.159,119,0.856,120,1.159,121,0.856,122,1.159,123,0.856,124,1.159,125,0.856,126,1.091,127,1.159,128,1.159,129,0.016,130,0.016,203,1.168,327,1.915,478,3.935,535,3.662,624,4.597,625,2.958,626,5.41,627,4.751,628,3.481,629,3.481]],["title/components/PlaceholderComponent.html",[0,0.331,119,0.851]],["body/components/PlaceholderComponent.html",[0,0.519,1,0.914,2,1.494,3,0.215,4,0.187,5,1.165,6,1.165,7,1.165,8,1.165,9,0.187,11,1.165,12,2.326,13,2.189,15,1.587,17,1.587,19,0.367,22,1.035,25,1.825,27,1.254,31,0.971,34,0.023,35,0.971,39,0.759,43,1.494,46,0.244,47,0.215,51,0.215,52,0.244,90,1.229,94,1.165,95,1.494,96,1.587,97,1.165,98,1.939,99,1.165,100,1.165,101,0.914,102,1.165,103,0.914,104,1.165,105,0.914,106,1.165,107,0.914,108,1.165,109,0.86,110,1.165,111,0.86,112,1.165,113,0.914,114,1.165,115,0.914,116,1.165,117,0.86,118,1.165,119,1.432,120,1.165,121,0.86,122,1.165,123,0.86,124,1.165,125,0.86,126,1.096,127,1.165,128,1.165,129,0.016,130,0.016,203,1.172,327,1.92,630,2.972,631,4.767,632,5.423,633,4.767,634,3.497,635,3.497,636,4.767,637,4.767,638,4.767]],["title/interfaces/ResponseGetEmails.html",[290,0.851,413,1.97]],["body/interfaces/ResponseGetEmails.html",[3,0.258,4,0.225,9,0.225,14,1.315,19,0.44,20,1.168,34,0.024,36,0.797,46,0.414,47,0.258,51,0.365,52,0.293,53,1.315,58,1.372,90,1.133,129,0.018,130,0.018,157,1.58,162,2.21,197,1.322,202,1.58,263,1.919,269,2.301,281,2.631,285,1.919,286,1.795,290,1.322,319,1.919,321,3.296,322,3.56,335,1.795,338,2.21,413,3.059,479,2.841,481,3.151,484,3.151,487,3.151,489,3.151,490,3.151,491,3.151,492,3.151]],["title/modules/SharedModule.html",[131,1.824,248,1.97]],["body/modules/SharedModule.html",[3,0.255,4,0.222,9,0.222,34,0.024,46,0.449,47,0.255,51,0.255,52,0.288,92,2.179,113,1.832,115,1.832,129,0.018,130,0.018,133,1.77,134,2.807,144,3.293,145,2.557,147,3.607,149,2.179,151,2.807,178,3.607,248,3.938,250,4.001,251,2.801,255,4.001,256,1.77,639,3.515,640,3.515,641,3.515,642,4.137,643,4.137,644,4.137]],["title/components/SigninComponent.html",[0,0.331,121,0.851]],["body/components/SigninComponent.html",[0,0.366,1,0.505,2,0.962,3,0.119,4,0.104,5,0.643,6,0.643,7,0.643,8,0.643,9,0.104,11,0.643,12,2.112,13,1.988,15,1.022,17,1.022,19,0.203,20,0.667,22,0.667,25,1.364,27,0.446,28,1.193,29,1.582,30,3.402,31,1.184,33,0.536,34,0.024,35,0.779,36,0.259,37,0.536,39,1.195,40,1.905,43,1.197,46,0.331,47,0.119,48,1.231,51,0.119,52,0.135,53,0.605,54,1.45,58,1.492,60,1.585,61,3.434,90,0.908,94,0.643,95,0.962,96,1.022,97,0.643,98,1.45,99,0.643,100,0.643,101,0.505,102,0.643,103,0.505,104,0.643,105,0.505,106,0.643,107,0.505,108,0.643,109,0.475,110,0.643,111,0.475,112,0.643,113,0.505,114,0.643,115,0.505,116,0.643,117,0.475,118,0.643,119,0.475,120,0.643,121,1.07,122,0.643,123,0.475,124,0.643,125,0.475,126,0.605,127,0.643,128,0.643,129,0.01,130,0.01,201,1.193,203,0.755,207,1.127,223,1.45,256,0.826,265,2.305,283,2.173,284,0.775,288,1.791,293,2.133,323,1.099,327,1.353,340,2.078,351,1.45,353,2.609,356,1.45,363,1.897,382,2.936,385,2.587,387,1.193,390,1.45,396,3.269,427,1.641,430,2.609,432,2.609,438,1.641,439,1.641,478,2.078,563,3.269,568,4.533,620,1.45,645,1.641,646,3.821,647,3.07,648,3.247,649,3.7,650,3.7,651,3.7,652,3.7,653,3.7,654,3.7,655,4.354,656,1.931,657,1.931,658,1.931,659,1.931,660,1.931,661,1.931,662,1.931,663,1.931,664,1.931,665,2.609,666,3.7,667,2.609,668,2.609,669,2.609,670,2.609,671,1.931,672,1.931,673,1.931,674,1.931,675,1.931,676,1.931,677,1.931,678,1.931,679,1.931,680,1.931,681,1.641,682,1.931,683,4.299,684,3.247,685,1.641,686,1.931,687,3.7,688,1.641,689,1.641,690,1.641,691,3.247,692,1.641,693,1.641,694,1.931,695,3.07,696,1.641,697,2.609,698,2.609,699,1.641,700,2.609,701,1.931,702,1.931,703,2.609,704,1.931,705,3.07,706,1.931,707,1.931,708,1.931,709,1.931,710,1.641,711,1.931,712,3.07,713,1.931,714,1.931,715,1.641,716,1.641,717,1.931,718,1.931]],["title/interfaces/SigninCredentials.html",[273,1.697,290,0.851]],["body/interfaces/SigninCredentials.html",[3,0.213,4,0.186,9,0.186,14,1.086,19,0.363,20,1.028,21,1.825,29,1.154,34,0.024,36,0.636,40,1.784,45,1.825,46,0.376,47,0.213,49,1.226,51,0.213,52,0.242,53,1.086,58,1.404,60,1.086,80,2.495,88,1.825,129,0.016,130,0.016,157,1.305,197,1.164,200,1.698,202,1.305,207,1.022,233,1.825,235,2.842,262,1.825,263,1.584,264,1.971,266,1.825,269,1.482,272,1.971,273,2.644,275,1.971,277,1.971,278,2.321,281,2.549,283,2.989,285,1.584,286,1.482,288,1.226,289,1.971,290,1.493,291,1.698,292,1.825,293,2.976,294,1.698,295,1.698,296,1.698,297,1.971,298,1.971,299,1.971,300,2.694,301,1.971,302,1.971,303,1.971,304,1.971,305,1.971,306,1.971,307,1.971,308,3.07,309,2.321,310,1.971,311,1.971,312,1.971,313,1.971,314,1.971,315,1.971,316,1.971,317,1.971,318,1.971,319,1.584]],["title/interfaces/SigninResponse.html",[290,0.851,296,1.697]],["body/interfaces/SigninResponse.html",[3,0.213,4,0.186,9,0.186,14,1.086,19,0.363,20,1.028,21,1.825,29,1.154,34,0.024,36,0.636,40,2.185,45,1.825,46,0.376,47,0.213,49,1.226,51,0.213,52,0.242,53,1.086,58,1.404,60,1.086,80,2.495,88,1.825,129,0.016,130,0.016,157,1.305,197,1.164,200,1.698,202,1.305,207,1.022,233,1.825,235,2.842,262,1.825,263,1.584,264,1.971,266,1.825,269,1.482,272,1.971,273,2.321,275,1.971,277,1.971,278,2.321,281,2.496,283,2.989,285,1.584,286,1.482,288,1.226,289,1.971,290,1.493,291,1.698,292,1.825,293,2.321,294,1.698,295,1.698,296,2.321,297,3.3,298,1.971,299,1.971,300,2.694,301,1.971,302,1.971,303,1.971,304,1.971,305,1.971,306,1.971,307,1.971,308,3.07,309,2.321,310,1.971,311,1.971,312,1.971,313,1.971,314,1.971,315,1.971,316,1.971,317,1.971,318,1.971,319,1.584]],["title/components/SignoutComponent.html",[0,0.331,123,0.851]],["body/components/SignoutComponent.html",[0,0.502,1,0.859,2,1.431,3,0.202,4,0.176,5,1.094,6,1.094,7,1.094,8,1.094,9,0.176,11,1.094,12,2.307,13,2.172,15,1.521,17,1.521,19,0.345,22,0.992,25,1.777,27,0.76,28,2.031,29,1.985,30,3.684,31,0.931,33,0.913,34,0.023,35,1.07,36,0.441,37,0.913,39,0.714,43,1.431,46,0.366,47,0.202,48,1.318,51,0.202,52,0.229,53,1.03,54,2.468,82,2.793,90,1.139,94,1.094,95,1.431,96,1.521,97,1.094,98,1.889,99,1.094,100,1.094,101,0.859,102,1.094,103,0.859,104,1.094,105,0.859,106,1.094,107,0.859,108,1.094,109,0.808,110,1.094,111,0.808,112,1.094,113,0.859,114,1.094,115,0.859,116,1.094,117,0.808,118,1.094,119,0.808,120,1.094,121,0.808,122,1.094,123,1.395,124,1.094,125,0.808,126,1.03,127,1.094,128,1.094,129,0.015,130,0.015,199,2.793,201,2.031,203,1.123,215,2.793,265,2.468,266,2.988,327,1.858,719,2.793,720,5.249,721,4.567,722,3.286,723,3.286,724,3.286,725,3.286,726,3.286,727,2.793,728,4.567]],["title/components/SignupComponent.html",[0,0.331,125,0.851]],["body/components/SignupComponent.html",[0,0.306,1,0.389,2,0.778,3,0.092,4,0.08,5,0.496,6,0.496,7,0.496,8,0.496,9,0.08,11,0.496,12,1.991,13,1.874,15,0.827,17,0.827,19,0.156,20,0.539,22,0.539,25,1.169,27,0.574,29,1.582,31,1.218,33,0.414,34,0.024,35,0.651,36,0.334,37,0.414,39,1.241,40,2.063,43,1.001,46,0.289,47,0.092,51,0.092,52,0.104,58,1.512,60,1.717,61,3.623,79,1.118,90,0.792,91,2.111,93,2.111,94,0.496,95,0.778,96,0.827,97,0.496,98,1.242,99,0.496,100,0.496,101,0.389,102,0.496,103,0.389,104,0.496,105,0.389,106,0.496,107,0.389,108,0.496,109,0.366,110,0.496,111,0.366,112,0.496,113,0.389,114,0.496,115,0.389,116,0.496,117,0.366,118,0.496,119,0.366,120,0.496,121,0.366,122,0.496,123,0.366,124,0.496,125,0.917,126,1.001,127,0.496,128,0.496,129,0.008,130,0.008,201,0.92,203,0.611,204,1.818,207,1.1,256,0.637,283,2.277,284,0.996,288,1.762,293,2.746,294,1.217,309,0.73,327,1.131,328,2.111,333,2.525,351,1.118,356,1.118,363,1.535,364,1.865,382,2.936,385,2.163,387,1.975,390,2.4,396,3.363,428,1.266,563,3.363,568,4.489,577,2.111,580,1.266,590,3.216,608,1.266,620,1.865,648,2.716,649,3.17,650,3.17,651,3.17,652,3.17,653,3.17,654,3.17,665,2.111,666,3.806,667,2.111,668,2.111,669,2.111,670,3.17,681,2.716,683,4.394,684,3.17,685,1.266,687,4.038,688,1.266,689,1.266,690,1.266,691,2.111,692,1.266,693,1.266,696,1.266,697,2.111,698,2.111,699,1.266,700,2.111,703,2.716,710,1.266,715,1.266,716,1.266,729,1.266,730,3.196,731,2.484,732,4.479,733,3.73,734,3.73,735,3.73,736,3.73,737,3.73,738,1.489,739,3.032,740,1.489,741,1.489,742,1.489,743,1.489,744,1.489,745,1.489,746,1.489,747,1.489,748,1.489,749,1.489,750,1.489,751,1.489,752,1.489,753,1.489,754,2.484,755,2.484,756,1.489,757,1.266,758,1.489,759,1.489,760,1.489,761,1.489,762,1.489,763,1.489,764,1.489,765,1.489,766,1.489,767,1.489,768,1.489,769,1.489,770,2.484,771,1.489,772,1.489,773,1.489,774,1.489,775,2.484,776,3.73,777,1.489,778,1.489,779,1.489,780,1.489,781,1.489,782,1.489,783,2.484,784,1.489,785,4.479,786,1.489,787,2.484,788,1.489,789,2.484,790,1.489,791,1.489,792,2.484,793,2.484,794,2.484,795,2.484,796,2.484,797,1.489,798,1.489,799,1.489,800,1.489,801,1.489,802,1.489,803,1.489,804,1.489]],["title/interfaces/SignupCredentials.html",[278,1.697,290,0.851]],["body/interfaces/SignupCredentials.html",[3,0.21,4,0.183,9,0.183,14,1.068,19,0.357,20,1.017,21,1.795,29,1.135,34,0.024,36,0.719,40,1.764,45,1.795,46,0.373,47,0.21,49,1.206,51,0.21,52,0.238,53,1.068,58,1.396,60,1.068,80,2.467,88,1.795,129,0.015,130,0.015,157,1.284,197,1.151,200,1.67,202,1.284,207,1.005,233,1.795,235,2.823,262,1.795,263,1.559,264,1.939,266,1.795,269,1.458,272,1.939,273,2.295,275,1.939,277,1.939,278,2.622,281,2.581,283,2.977,285,1.559,286,1.458,288,1.206,289,1.939,290,1.485,291,1.67,292,1.795,293,2.959,294,2.823,295,1.67,296,1.67,297,1.939,298,1.939,299,1.939,300,2.664,301,1.939,302,1.939,303,1.939,304,1.939,305,1.939,306,1.939,307,1.939,308,3.044,309,2.295,310,1.939,311,1.939,312,1.939,313,1.939,314,1.939,315,1.939,316,1.939,317,1.939,318,1.939,319,1.559]],["title/interfaces/SignupResponse.html",[290,0.851,295,1.697]],["body/interfaces/SignupResponse.html",[3,0.217,4,0.189,9,0.189,14,1.104,19,0.369,20,1.04,21,1.856,29,1.173,34,0.024,36,0.473,40,1.804,45,1.856,46,0.379,47,0.217,49,1.247,51,0.217,52,0.246,53,1.104,58,1.412,60,1.104,80,2.523,88,1.856,129,0.016,130,0.016,157,1.327,197,1.178,200,1.726,202,1.327,207,1.039,233,1.856,235,2.862,262,1.856,263,1.611,264,2.004,266,1.856,269,1.507,272,2.004,273,2.347,275,2.004,277,2.004,278,2.347,281,2.505,283,3,285,1.611,286,1.507,288,1.247,289,2.004,290,1.502,291,1.726,292,1.856,293,2.347,294,1.726,295,2.347,296,1.726,297,2.004,298,2.004,299,2.004,300,2.725,301,2.004,302,2.004,303,2.004,304,2.004,305,2.004,306,2.004,307,2.004,308,3.096,309,2.347,310,2.004,311,2.004,312,2.004,313,2.004,314,2.004,315,2.004,316,2.004,317,2.004,318,2.004,319,1.611]],["title/injectables/UniqueUsername.html",[197,0.851,739,2.344]],["body/injectables/UniqueUsername.html",[3,0.231,4,0.201,9,0.201,14,1.174,19,0.393,20,1.084,27,0.866,28,2.316,29,2.136,31,1.018,33,1.04,34,0.024,35,0.764,36,0.503,37,1.04,46,0.435,47,0.231,49,1.326,51,0.231,52,0.261,53,1.174,58,1.442,60,1.565,84,1.603,129,0.016,130,0.016,157,1.411,190,3.38,191,3.184,197,1.228,201,2.316,202,1.411,203,0.921,207,1.657,208,2.813,235,1.836,256,1.603,261,2.316,269,1.603,284,1.503,382,2.316,389,3.749,473,3.184,593,4.773,739,3.38,805,4.773,806,3.184,807,3.747,808,3.747,809,4.993,810,3.747,811,3.747,812,3.747,813,4.993,814,3.747,815,3.747,816,3.747,817,3.747,818,3.747,819,3.747,820,3.747]],["title/interfaces/UserNameAvailableResponse.html",[290,0.851,291,1.697]],["body/interfaces/UserNameAvailableResponse.html",[3,0.217,4,0.189,9,0.189,14,1.104,19,0.369,20,1.04,21,1.856,29,1.173,34,0.024,36,0.473,40,2.2,45,1.856,46,0.379,47,0.217,49,1.247,51,0.217,52,0.246,53,1.104,58,1.412,60,1.104,80,2.523,88,1.856,129,0.016,130,0.016,157,1.327,197,1.178,200,1.726,202,1.327,207,1.039,233,1.856,235,2.862,262,1.856,263,1.611,264,2.004,266,1.856,269,1.507,272,2.004,273,2.347,275,2.004,277,2.004,278,2.347,281,2.428,283,2.794,285,1.611,286,1.507,288,1.247,289,2.004,290,1.502,291,2.347,292,3.077,293,2.347,294,1.726,295,1.726,296,1.726,297,2.004,298,2.004,299,2.004,300,2.725,301,2.004,302,2.004,303,2.004,304,2.004,305,2.004,306,2.004,307,2.004,308,3.096,309,2.347,310,2.004,311,2.004,312,2.004,313,2.004,314,2.004,315,2.004,316,2.004,317,2.004,318,2.004,319,1.611]],["title/coverage.html",[821,4.023]],["body/coverage.html",[0,0.648,1,0.792,9,0.162,10,2.574,29,1.009,34,0.024,36,0.407,79,5.379,90,0.579,101,0.792,103,0.792,105,0.792,107,0.792,109,0.745,111,0.745,113,0.792,115,0.792,117,0.745,119,0.745,121,0.745,123,0.745,125,0.745,129,0.014,130,0.014,143,1.872,162,1.596,163,2.275,171,2.051,179,3.238,181,2.574,197,1.345,217,2.275,218,2.574,262,3.166,273,1.484,278,1.484,288,1.072,290,1.554,291,1.484,295,1.484,296,1.484,320,2.574,324,3.166,325,2.275,326,2.574,335,1.296,338,1.596,366,2.275,367,2.574,405,2.275,406,2.574,413,1.723,449,2.275,450,2.574,467,2.051,468,2.574,479,3.4,493,2.051,494,2.574,513,2.574,535,2.051,542,2.574,590,2.051,591,2.574,592,2.574,600,2.574,624,2.574,625,2.574,630,2.574,645,2.574,719,2.574,729,2.574,739,2.051,805,2.574,806,2.574,821,2.574,822,3.029,823,3.029,824,3.029,825,5.022,826,6.432,827,5.782,828,3.029,829,5.472,830,3.029,831,3.029,832,4.312,833,5.022,834,2.574,835,5.472,836,3.665,837,5.472,838,2.574,839,3.665,840,2.574,841,2.574,842,3.029,843,3.029]],["title/dependencies.html",[134,2.195,844,2.168]],["body/dependencies.html",[34,0.024,47,0.295,48,1.925,49,1.698,129,0.019,130,0.019,134,2.528,153,4.969,154,4.39,251,3.248,256,2.053,557,4.078,845,4.798,846,6.994,847,4.798,848,4.798,849,4.798,850,4.798,851,4.798,852,4.798,853,4.798,854,4.798,855,4.798,856,4.798,857,4.798,858,4.798]],["title/index.html",[19,0.303,859,2.888,860,2.888]],["body/index.html",[0,0.558,4,0.217,34,0.017,35,0.825,89,4.956,92,2.131,129,0.017,130,0.017,203,0.995,288,1.432,727,3.438,844,3.038,861,4.046,862,5.252,863,4.046,864,5.831,865,3.438,866,4.046,867,4.046,868,5.252,869,6.396,870,6.673,871,4.046,872,4.046,873,4.046,874,4.046,875,4.046,876,4.046,877,4.046,878,4.046,879,4.046,880,4.046,881,4.046,882,5.831,883,5.831,884,4.046,885,6.172,886,4.046,887,4.046,888,4.046,889,4.046,890,5.252,891,5.252,892,6.172,893,4.046,894,5.252,895,5.252,896,4.046,897,6.555,898,4.046,899,4.046,900,4.046,901,5.252,902,4.046,903,4.046,904,4.046,905,4.046,906,4.046,907,4.046,908,5.831,909,4.046,910,4.046,911,4.046,912,3.038,913,4.046]],["title/modules.html",[133,2.026]],["body/modules.html",[34,0.02,129,0.02,130,0.02,132,3.381,133,2.137,140,3.086,141,3.086,142,2.841,154,4.996,248,2.841,292,3.38,522,3.381,526,3.086,914,6.654,915,6.654,916,6.985,917,6.417]],["title/overview.html",[912,3.555]],["body/overview.html",[1,1.657,2,1.037,34,0.023,92,1.743,101,1.377,103,1.377,105,1.377,107,1.377,109,1.295,111,1.295,113,1.657,115,1.657,117,1.295,119,1.295,121,1.295,123,1.295,125,1.295,129,0.015,130,0.015,132,4.618,133,1.416,134,2.417,135,2.812,136,2.812,137,2.812,138,2.812,139,2.812,140,3.255,141,4.215,142,3.236,143,3.255,144,2.836,145,2.045,169,1.882,180,2.484,245,2.812,246,2.812,247,2.812,248,3.78,261,2.045,319,1.513,522,4.791,523,2.812,524,2.812,525,2.812,526,3.255,639,2.812,640,2.812,641,2.812,912,2.484,918,3.309,919,3.309,920,3.309,921,3.309,922,3.309,923,3.309]],["title/properties.html",[20,0.905,844,2.168]],["body/properties.html",[20,1.203,34,0.022,129,0.021,130,0.021,865,4.707,924,5.539]],["title/routes.html",[169,2.693]],["body/routes.html",[34,0.021,129,0.021,130,0.021,169,3.187]],["title/interfaces/sendEmailResponse.html",[290,0.851,338,1.824]],["body/interfaces/sendEmailResponse.html",[3,0.267,4,0.232,9,0.232,14,1.357,19,0.454,20,1.192,34,0.024,36,0.582,46,0.42,47,0.267,51,0.371,52,0.302,53,1.357,58,1.392,90,1.15,129,0.018,130,0.018,157,1.631,162,2.282,197,1.349,202,1.631,263,1.981,269,2.348,281,2.553,285,1.981,286,1.853,290,1.349,319,1.981,321,2.282,322,2.464,335,1.853,338,2.891,413,2.464,479,2.933,481,3.253,484,3.253,487,3.253,489,4.754,490,3.253,491,3.253,492,3.253]],["title/miscellaneous/variables.html",[925,2.454,926,3.541]],["body/miscellaneous/variables.html",[19,0.498,34,0.023,36,0.879,60,1.821,61,2.703,129,0.019,130,0.019,207,1.852,284,2.519,757,4.939,834,4.038,836,5.56,838,4.038,839,4.038,840,4.939,841,4.939,925,4.038,926,4.038,927,5.812,928,4.752,929,4.752,930,4.752,931,4.752,932,4.752,933,5.812]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":924,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["0.5em",{"_index":799,"title":{},"body":{"components/SignupComponent.html":{}}}],["0/1",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["1.1.19",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":448,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["100em",{"_index":797,"title":{},"body":{"components/SignupComponent.html":{}}}],["10px",{"_index":438,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["12",{"_index":923,"title":{},"body":{"overview.html":{}}}],["13.3.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["13.3.5",{"_index":866,"title":{},"body":{"index.html":{}}}],["14",{"_index":919,"title":{},"body":{"overview.html":{}}}],["1em",{"_index":582,"title":{},"body":{"components/InputComponent.html":{}}}],["1px",{"_index":706,"title":{},"body":{"components/SigninComponent.html":{}}}],["1rem",{"_index":365,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["2",{"_index":921,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":712,"title":{},"body":{"components/SigninComponent.html":{}}}],["20px",{"_index":436,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["4",{"_index":920,"title":{},"body":{"overview.html":{}}}],["50",{"_index":714,"title":{},"body":{"components/SigninComponent.html":{}}}],["5000",{"_index":771,"title":{},"body":{"components/SignupComponent.html":{}}}],["54c8ff",{"_index":708,"title":{},"body":{"components/SigninComponent.html":{}}}],["7",{"_index":918,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":922,"title":{},"body":{"overview.html":{}}}],["9",{"_index":669,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["90",{"_index":440,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["a.active",{"_index":424,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["a.active:before",{"_index":433,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["abstractcontrol",{"_index":389,"title":{},"body":{"components/EmailFormComponent.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["account",{"_index":783,"title":{},"body":{"components/SignupComponent.html":{}}}],["actions",{"_index":622,"title":{},"body":{"components/ModalComponent.html":{}}}],["actions:empty",{"_index":619,"title":{},"body":{"components/ModalComponent.html":{}}}],["activatedroute",{"_index":410,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{}}}],["activatedroutesnapshot",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{}}}],["actual_component",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["add",{"_index":904,"title":{},"body":{"index.html":{}}}],["aleast",{"_index":570,"title":{},"body":{"components/InputComponent.html":{}}}],["align",{"_index":430,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["allowed",{"_index":698,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["angular",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["angular/compiler",{"_index":557,"title":{},"body":{"components/InputComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"dependencies.html":{},"interfaces/sendEmailResponse.html":{}}}],["angular/forms",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"components/EmailFormComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/EmailIndexComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"modules/InboxRoutingModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["app.component",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":875,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":132,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":140,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":886,"title":{},"body":{"index.html":{}}}],["asyncvalidator",{"_index":809,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["asyncvalidatorfn",{"_index":810,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["auth",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["auth/auth",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.guard",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["authenticated,this.authservice.signedin",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentifications",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authform",{"_index":648,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls['password'].errors!['maxlength'].requiredlength",{"_index":701,"title":{},"body":{"components/SigninComponent.html":{}}}],["authform.controls['password'].errors!['minlength'].requiredlength",{"_index":699,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls['passwordconfirmation'].errors!['maxlength'].requiredlength",{"_index":791,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls['passwordconfirmation'].errors!['minlength'].requiredlength",{"_index":790,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls['username'].errors!['minlength'].requiredlength",{"_index":696,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls[\\'password\\'].errors![\\'maxlength\\'].requiredlength",{"_index":717,"title":{},"body":{"components/SigninComponent.html":{}}}],["authform.controls[\\'password\\'].errors![\\'minlength\\'].requiredlength",{"_index":716,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.controls[\\'passwordconfirmation\\'].errors![\\'maxlength\\'].requiredlength",{"_index":804,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls[\\'passwordconfirmation\\'].errors![\\'minlength\\'].requiredlength",{"_index":803,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.controls[\\'username\\'].errors![\\'minlength\\'].requiredlength",{"_index":715,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["authform.get('password')?.errors",{"_index":786,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get('passwordconfirmation')?.errors",{"_index":788,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get('username')?.errors",{"_index":784,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get(\\'password\\')?.errors",{"_index":801,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get(\\'passwordconfirmation\\')?.errors",{"_index":802,"title":{},"body":{"components/SignupComponent.html":{}}}],["authform.get(\\'username\\')?.errors",{"_index":800,"title":{},"body":{"components/SignupComponent.html":{}}}],["authguard",{"_index":171,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authhttpinterceptor",{"_index":143,"title":{"interceptors/AuthHttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":141,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":142,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":29,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["authservice,private",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["automatically",{"_index":876,"title":{},"body":{"index.html":{}}}],["available",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"modules.html":{}}}],["back",{"_index":726,"title":{},"body":{"components/SignoutComponent.html":{}}}],["background",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/InputComponent.html":{}}}],["basic.label",{"_index":798,"title":{},"body":{"components/SignupComponent.html":{}}}],["behaviorsubject",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["behaviorsubject(false",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["black",{"_index":423,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["block",{"_index":710,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EmailReplyComponent.html":{},"injectables/MatchPassword.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["bootstrap",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":705,"title":{},"body":{"components/SigninComponent.html":{}}}],["bottom",{"_index":364,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/InputComponent.html":{},"components/SignupComponent.html":{}}}],["browse",{"_index":916,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":885,"title":{},"body":{"index.html":{}}}],["can't",{"_index":578,"title":{},"body":{"components/InputComponent.html":{}}}],["can\\'t",{"_index":589,"title":{},"body":{"components/InputComponent.html":{}}}],["canactivate",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canload",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":906,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":473,"title":{},"body":{"guards/EmailResolverService.html":{},"injectables/UniqueUsername.html":{}}}],["catcherror((e",{"_index":817,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["ccc",{"_index":584,"title":{},"body":{"components/InputComponent.html":{}}}],["center",{"_index":432,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["change",{"_index":878,"title":{},"body":{"index.html":{}}}],["characters",{"_index":568,"title":{},"body":{"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":911,"title":{},"body":{"index.html":{}}}],["checkauth",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["checkconnection",{"_index":733,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkmaxlengthpasswordconfirmation",{"_index":649,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkminlength",{"_index":650,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkminlengthpassword",{"_index":651,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkminlengthpasswordconfirmation",{"_index":734,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkpassworddontmatch",{"_index":735,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkpattern",{"_index":652,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkrequiredpassword",{"_index":653,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checkrequiredpasswordconfirmation",{"_index":736,"title":{},"body":{"components/SignupComponent.html":{}}}],["checkrequiredusername",{"_index":654,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["checktakenusername",{"_index":737,"title":{},"body":{"components/SignupComponent.html":{}}}],["children",{"_index":540,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["choice",{"_index":900,"title":{},"body":{"index.html":{}}}],["choose",{"_index":636,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["cli",{"_index":864,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_inboxmodule",{"_index":523,"title":{},"body":{"modules/InboxModule.html":{},"overview.html":{}}}],["cluster_inboxmodule_declarations",{"_index":524,"title":{},"body":{"modules/InboxModule.html":{},"overview.html":{}}}],["cluster_inboxmodule_imports",{"_index":525,"title":{},"body":{"modules/InboxModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":639,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":641,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":640,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":880,"title":{},"body":{"index.html":{}}}],["color",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/EmailIndexComponent.html":{}}}],["command",{"_index":901,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{}}}],["complete",{"_index":356,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["completed",{"_index":680,"title":{},"body":{"components/SigninComponent.html":{}}}],["compodoc/compodoc",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["component',this.email",{"_index":507,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["component_template",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["compose",{"_index":361,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["confirm",{"_index":787,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmation",{"_index":789,"title":{},"body":{"components/SignupComponent.html":{}}}],["connection",{"_index":795,"title":{},"body":{"components/SignupComponent.html":{}}}],["console.log(\"%c",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('email",{"_index":357,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{}}}],["console.log('input",{"_index":558,"title":{},"body":{"components/InputComponent.html":{}}}],["console.log('request",{"_index":238,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["console.log('response",{"_index":243,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["console.log('sending",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('show",{"_index":506,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["console.log('signedin",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log('signin",{"_index":679,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log('signing",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log('your",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(authenticated",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log(error.error",{"_index":677,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log(localstorage",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log(response",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["console.log(this.authform",{"_index":678,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log(this.authform,response",{"_index":675,"title":{},"body":{"components/SigninComponent.html":{}}}],["console.log(this.emails",{"_index":419,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["console.log(this.route",{"_index":416,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["console.log(url",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(v",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthRoutingModule.html":{},"components/EmailFormComponent.html":{},"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["constructor(authservice",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"injectables/UniqueUsername.html":{}}}],["constructor(el",{"_index":607,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(emailservice",{"_index":334,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{}}}],["constructor(http",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["constructor(private",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EmailIndexComponent.html":{},"injectables/EmailService.html":{},"components/ModalComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["constructor(route",{"_index":498,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["constructor(uniqueusername",{"_index":738,"title":{},"body":{"components/SignupComponent.html":{}}}],["content",{"_index":427,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["context",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":546,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['maxlength'].actuallength",{"_index":572,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['maxlength'].requiredlength",{"_index":574,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['minlength'].actuallength",{"_index":567,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors!['minlength'].requiredlength",{"_index":571,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'maxlength\\'].actuallength",{"_index":587,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'maxlength\\'].requiredlength",{"_index":588,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'minlength\\'].actuallength",{"_index":585,"title":{},"body":{"components/InputComponent.html":{}}}],["control.errors![\\'minlength\\'].requiredlength",{"_index":586,"title":{},"body":{"components/InputComponent.html":{}}}],["control2",{"_index":813,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["controltype",{"_index":547,"title":{},"body":{"components/InputComponent.html":{}}}],["coverage",{"_index":821,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":328,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SignupComponent.html":{}}}],["create'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["create.component",{"_index":530,"title":{},"body":{"modules/InboxModule.html":{}}}],["create.component.css",{"_index":329,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.html",{"_index":330,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts",{"_index":326,"title":{},"body":{"components/EmailCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:14",{"_index":345,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:15",{"_index":336,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:29",{"_index":341,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:31",{"_index":343,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create.component.ts:39",{"_index":339,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["create/email",{"_index":325,"title":{},"body":{"components/EmailCreateComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["credentials",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["css",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{}}}],["default",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detected,failed",{"_index":796,"title":{},"body":{"components/SignupComponent.html":{}}}],["dev",{"_index":872,"title":{},"body":{"index.html":{}}}],["development",{"_index":867,"title":{},"body":{"index.html":{}}}],["directive",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["directives",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":884,"title":{},"body":{"index.html":{}}}],["directory",{"_index":889,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":559,"title":{},"body":{"components/InputComponent.html":{}}}],["dismiss",{"_index":606,"title":{},"body":{"components/ModalComponent.html":{}}}],["display",{"_index":620,"title":{},"body":{"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["display:block",{"_index":581,"title":{},"body":{"components/InputComponent.html":{},"components/ModalComponent.html":{}}}],["display:flex",{"_index":425,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["display:none",{"_index":623,"title":{},"body":{"components/ModalComponent.html":{}}}],["dist",{"_index":888,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(this.el.nativeelement",{"_index":614,"title":{},"body":{"components/ModalComponent.html":{}}}],["documentation",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["dynamic",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["e.error.username",{"_index":818,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["e2e",{"_index":898,"title":{},"body":{"index.html":{}}}],["el",{"_index":610,"title":{},"body":{"components/ModalComponent.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["elementref",{"_index":608,"title":{},"body":{"components/ModalComponent.html":{},"components/SignupComponent.html":{}}}],["ellipsis",{"_index":447,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["email",{"_index":90,"title":{"interfaces/Email.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["email.com",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["email.from",{"_index":421,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{}}}],["email.service",{"_index":346,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{}}}],["email.subject",{"_index":420,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{}}}],["email.to",{"_index":512,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["emailclient",{"_index":861,"title":{},"body":{"index.html":{}}}],["emailcreatecomponent",{"_index":101,"title":{"components/EmailCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailform",{"_index":371,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["emailformcomponent",{"_index":103,"title":{"components/EmailFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailindexcomponent",{"_index":105,"title":{"components/EmailIndexComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailreplycomponent",{"_index":107,"title":{"components/EmailReplyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailresolverservice",{"_index":467,"title":{"guards/EmailResolverService.html":{}},"body":{"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{},"coverage.html":{}}}],["emails",{"_index":409,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["emails:responsegetemails",{"_index":414,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["emailservice",{"_index":335,"title":{"injectables/EmailService.html":{}},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["emailservice:emailservice,private",{"_index":415,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["emailshowcomponent",{"_index":109,"title":{"components/EmailShowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emailsubmit",{"_index":375,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["empty",{"_index":474,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["end",{"_index":897,"title":{},"body":{"index.html":{}}}],["enter",{"_index":564,"title":{},"body":{"components/InputComponent.html":{}}}],["entered",{"_index":566,"title":{},"body":{"components/InputComponent.html":{}}}],["environment",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":353,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{}}}],["error(error.message",{"_index":355,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["error)=>{throw",{"_index":354,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["error:(error",{"_index":766,"title":{},"body":{"components/SignupComponent.html":{}}}],["errors",{"_index":561,"title":{},"body":{"components/InputComponent.html":{}}}],["event",{"_index":344,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["eventemitter",{"_index":378,"title":{},"body":{"components/EmailFormComponent.html":{},"components/ModalComponent.html":{}}}],["execute",{"_index":894,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["exports",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}}}],["false",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["files",{"_index":879,"title":{},"body":{"index.html":{}}}],["filter",{"_index":228,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["filter(v=>v.type===httpeventtype.sent",{"_index":236,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["first",{"_index":903,"title":{},"body":{"index.html":{}}}],["flex",{"_index":428,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SignupComponent.html":{}}}],["font",{"_index":434,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["form",{"_index":368,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["form.component",{"_index":537,"title":{},"body":{"modules/InboxModule.html":{}}}],["form.component.css",{"_index":369,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.html",{"_index":370,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts",{"_index":367,"title":{},"body":{"components/EmailFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:11",{"_index":386,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:13",{"_index":377,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:15",{"_index":376,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:19",{"_index":383,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:29",{"_index":380,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form.component.ts:33",{"_index":384,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["form/email",{"_index":366,"title":{},"body":{"components/EmailFormComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["format",{"_index":576,"title":{},"body":{"components/InputComponent.html":{}}}],["formcontrol",{"_index":382,"title":{},"body":{"components/EmailFormComponent.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["formcontrol(subject",{"_index":395,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formcontrol(text",{"_index":397,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formcontrol(to,[validators.required",{"_index":392,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formcontrol({value:from,disabled:true",{"_index":394,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formgroup",{"_index":385,"title":{},"body":{"components/EmailFormComponent.html":{},"injectables/MatchPassword.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["formgroupdirective",{"_index":759,"title":{},"body":{"components/SignupComponent.html":{}}}],["formpropertygetters",{"_index":372,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formpropertygetters(prop",{"_index":379,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["formpropertygetters(prop:string",{"_index":398,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["found",{"_index":478,"title":{},"body":{"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{},"components/NotFoundComponent.html":{},"components/SigninComponent.html":{}}}],["found'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["found.component",{"_index":536,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["found.component.css",{"_index":626,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":627,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":625,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":629,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":628,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":535,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["function'+prop,this.emailform.get(prop",{"_index":400,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["further",{"_index":907,"title":{},"body":{"index.html":{}}}],["generate",{"_index":882,"title":{},"body":{"index.html":{}}}],["generated",{"_index":863,"title":{},"body":{"index.html":{}}}],["getemail",{"_index":480,"title":{},"body":{"injectables/EmailService.html":{}}}],["getemail(id",{"_index":484,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["getemails",{"_index":481,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["getters",{"_index":399,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["getting",{"_index":859,"title":{"index.html":{}},"body":{}}],["go",{"_index":910,"title":{},"body":{"index.html":{}}}],["graph",{"_index":917,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":179,"title":{"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{},"overview.html":{}}}],["handlersuccessemailsent",{"_index":332,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["handlersuccessemailsent(response",{"_index":337,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["handlersuccessemailsent(response:sendemailresponse",{"_index":359,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["help",{"_index":908,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":443,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["home",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["home.component.css",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":529,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["homecomponent",{"_index":111,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":580,"title":{},"body":{"components/InputComponent.html":{},"components/SignupComponent.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["http",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["http://localhost:4200",{"_index":874,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["http_interceptors",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["httpclientmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent,httpinterceptor,httphandler,httprequest,httpeventtype",{"_index":227,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httpeventtype.response",{"_index":242,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httpeventtype.sent",{"_index":241,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httphandler",{"_index":224,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":230,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["httprequest",{"_index":222,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["https://api.angular",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["id",{"_index":321,"title":{},"body":{"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"modules/InboxRoutingModule.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["identifier",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["if(!authenticated",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(error.status",{"_index":767,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(localstorage.length",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["if(password",{"_index":599,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["if(this.authform.controls['password'].errors!['maxlength",{"_index":694,"title":{},"body":{"components/SigninComponent.html":{}}}],["if(this.authform.controls['password'].errors!['minlength",{"_index":693,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['password'].errors!['required",{"_index":692,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['password'].touched",{"_index":690,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['passwordconfirmation'].errors!['maxlength",{"_index":779,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.controls['passwordconfirmation'].errors!['minlength",{"_index":778,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['minlength']){return",{"_index":688,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['nonuniqueusername",{"_index":773,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['pattern",{"_index":689,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.authform.controls['username'].errors!['required']){return",{"_index":772,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.invalid",{"_index":672,"title":{},"body":{"components/SigninComponent.html":{}}}],["if(this.authform.invalid){return",{"_index":763,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.authform.touched",{"_index":687,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["if(this.emailform.invalid",{"_index":402,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["implements",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"index.html":{}}}],["import",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["import('./inbox/inbox.module').then(mod=>mod.inboxmodule",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}}}],["inbox",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/InboxModule.html":{}}}],["inboxmodule",{"_index":522,"title":{"modules/InboxModule.html":{}},"body":{"modules/InboxModule.html":{},"modules.html":{},"overview.html":{}}}],["inboxroutingmodule",{"_index":526,"title":{"modules/InboxRoutingModule.html":{}},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["index.component",{"_index":533,"title":{},"body":{"modules/InboxModule.html":{}}}],["index.component.css",{"_index":407,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index.component.html",{"_index":408,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index.component.ts",{"_index":406,"title":{},"body":{"components/EmailIndexComponent.html":{},"coverage.html":{}}}],["index.component.ts:12",{"_index":411,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index.component.ts:16",{"_index":412,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["index/email",{"_index":405,"title":{},"body":{"components/EmailIndexComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["injectable",{"_index":197,"title":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["injectable({providedin",{"_index":229,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"injectables/MatchPassword.html":{}}}],["injectables",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{},"overview.html":{}}}],["input",{"_index":387,"title":{},"body":{"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["input'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["input.component.css",{"_index":543,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.html",{"_index":544,"title":{},"body":{"components/InputComponent.html":{}}}],["input/input.component",{"_index":644,"title":{},"body":{"modules/SharedModule.html":{}}}],["input:disabled",{"_index":583,"title":{},"body":{"components/InputComponent.html":{}}}],["inputcomponent",{"_index":113,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":373,"title":{},"body":{"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/InputComponent.html":{}}}],["inputtype",{"_index":548,"title":{},"body":{"components/InputComponent.html":{}}}],["intercept",{"_index":219,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["intercept(req",{"_index":221,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interceptor",{"_index":163,"title":{"interceptors/AuthHttpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":218,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:6",{"_index":220,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interceptor.ts:8",{"_index":225,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interceptors",{"_index":216,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["interface",{"_index":290,"title":{"interfaces/Email.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Email.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["interfaces",{"_index":319,"title":{},"body":{"interfaces/Email.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"overview.html":{},"interfaces/sendEmailResponse.html":{}}}],["internet",{"_index":794,"title":{},"body":{"components/SignupComponent.html":{}}}],["invalid",{"_index":575,"title":{},"body":{"components/InputComponent.html":{}}}],["isnotsignedin",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["issignedin",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":422,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["items",{"_index":431,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["json",{"_index":785,"title":{},"body":{"components/SignupComponent.html":{}}}],["justify",{"_index":426,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["karma",{"_index":896,"title":{},"body":{"index.html":{}}}],["label",{"_index":549,"title":{},"body":{"components/InputComponent.html":{}}}],["left",{"_index":713,"title":{},"body":{"components/SigninComponent.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["length",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.clear",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["localstorage.key(0",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.key(0)}@angular",{"_index":348,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["localstorage.setitem(credentials.username,string(this.signedin$.value",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["location.href",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["log",{"_index":695,"title":{},"body":{"components/SigninComponent.html":{}}}],["long",{"_index":569,"title":{},"body":{"components/InputComponent.html":{}}}],["longer",{"_index":573,"title":{},"body":{"components/InputComponent.html":{}}}],["map",{"_index":812,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["map(v",{"_index":815,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["margin",{"_index":363,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["match",{"_index":793,"title":{},"body":{"components/SignupComponent.html":{}}}],["matching",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":590,"title":{"injectables/MatchPassword.html":{}},"body":{"injectables/MatchPassword.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["max",{"_index":700,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":925,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":601,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["modal.component.css",{"_index":602,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.html",{"_index":603,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":643,"title":{},"body":{"modules/SharedModule.html":{}}}],["modalcomponent",{"_index":115,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modifyreq",{"_index":231,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["module",{"_index":131,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":133,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":909,"title":{},"body":{"index.html":{}}}],["multi",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["n",{"_index":463,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"index.html":{}}}],["navigate",{"_index":873,"title":{},"body":{"index.html":{}}}],["need",{"_index":902,"title":{},"body":{"index.html":{}}}],["new",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":223,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{}}}],["next.handle(modifyreq",{"_index":234,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["next:(response",{"_index":765,"title":{},"body":{"components/SignupComponent.html":{}}}],["ng",{"_index":870,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":760,"title":{},"body":{"components/SignupComponent.html":{}}}],["ngmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":604,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngondestroy():void",{"_index":615,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["noconnection",{"_index":732,"title":{},"body":{"components/SignupComponent.html":{}}}],["none",{"_index":621,"title":{},"body":{"components/ModalComponent.html":{}}}],["nonuniqueusername",{"_index":819,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["notfoundcomponent",{"_index":117,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nowrap",{"_index":446,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["null",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["object",{"_index":757,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"components/EmailShowComponent.html":{},"injectables/UniqueUsername.html":{}}}],["observableinput",{"_index":502,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["ok",{"_index":618,"title":{},"body":{"components/ModalComponent.html":{}}}],["ondismissclick",{"_index":605,"title":{},"body":{"components/ModalComponent.html":{}}}],["oninit",{"_index":327,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["onsubmit",{"_index":333,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/SignupComponent.html":{}}}],["onsubmit(email",{"_index":456,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["onsubmit(event",{"_index":342,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["onsubmit(event:email",{"_index":349,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["onsubmitsignin",{"_index":655,"title":{},"body":{"components/SigninComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["out",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["out',response",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["output",{"_index":388,"title":{},"body":{"components/EmailFormComponent.html":{},"components/ModalComponent.html":{}}}],["outputs",{"_index":374,"title":{},"body":{"components/EmailFormComponent.html":{},"components/ModalComponent.html":{}}}],["overflow",{"_index":442,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["overview",{"_index":912,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":844,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":727,"title":{},"body":{"components/SignoutComponent.html":{},"index.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{}}}],["params",{"_index":501,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["passworconfirmation",{"_index":774,"title":{},"body":{"components/SignupComponent.html":{}}}],["password",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["password,passwordconfirmation}=formgroup.value",{"_index":598,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["password.ts",{"_index":592,"title":{},"body":{"injectables/MatchPassword.html":{},"coverage.html":{}}}],["password.ts:6",{"_index":595,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["passwordconfirmation",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["passworddontmatch",{"_index":596,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["passwords",{"_index":792,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{}}}],["path:'signout",{"_index":259,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["path:'signup",{"_index":260,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["pipe",{"_index":235,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["placeholder",{"_index":631,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["placeholder'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["placeholder.component.css",{"_index":632,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["placeholder.component.html",{"_index":633,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["placeholder/placeholder.component",{"_index":534,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["placeholdercomponent",{"_index":119,"title":{"components/PlaceholderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platform",{"_index":899,"title":{},"body":{"index.html":{}}}],["powderblue;font",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"components/SignupComponent.html":{}}}],["production",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":862,"title":{},"body":{"index.html":{}}}],["promise",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UniqueUsername.html":{}}}],["prop",{"_index":381,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"properties.html":{},"interfaces/sendEmailResponse.html":{}}}],["provide",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["providers",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":709,"title":{},"body":{"components/SigninComponent.html":{}}}],["reactiveformsmodule",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":638,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["received",{"_index":244,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["reference",{"_index":913,"title":{},"body":{"index.html":{}}}],["reload",{"_index":877,"title":{},"body":{"index.html":{}}}],["reply",{"_index":451,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["reply.component",{"_index":532,"title":{},"body":{"modules/InboxModule.html":{}}}],["reply.component.css",{"_index":452,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.html",{"_index":453,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts",{"_index":450,"title":{},"body":{"components/EmailReplyComponent.html":{},"coverage.html":{}}}],["reply.component.ts:12",{"_index":458,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts:14",{"_index":454,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts:19",{"_index":455,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply.component.ts:28",{"_index":457,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["reply/email",{"_index":449,"title":{},"body":{"components/EmailReplyComponent.html":{},"modules/InboxModule.html":{},"coverage.html":{}}}],["reply:\\n\\n\\n\\n",{"_index":461,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["req",{"_index":226,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["req.clone",{"_index":232,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["require",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":563,"title":{},"body":{"components/InputComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["reset",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":469,"title":{},"body":{"guards/EmailResolverService.html":{},"modules/InboxRoutingModule.html":{}}}],["resolve(route",{"_index":471,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["resolver.service",{"_index":539,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["resolver.service.ts",{"_index":468,"title":{},"body":{"guards/EmailResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":470,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["resolver.service.ts:15",{"_index":472,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["response",{"_index":340,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailShowComponent.html":{},"components/SigninComponent.html":{}}}],["response)=>{this.handlersuccessemailsent(response",{"_index":352,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["responsegetemails",{"_index":413,"title":{"interfaces/ResponseGetEmails.html":{}},"body":{"components/EmailIndexComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["results",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailFormComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["right",{"_index":437,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"injectables/MatchPassword.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["root'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["rooturl",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["route",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/EmailIndexComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{}}}],["route.params",{"_index":475,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["router",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/EmailResolverService.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["router:router",{"_index":724,"title":{},"body":{"components/SignoutComponent.html":{}}}],["routermodule",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":541,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":169,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{}}}],["routing.module.ts",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/InboxRoutingModule.html":{}}}],["royalblue",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":869,"title":{},"body":{"index.html":{}}}],["running",{"_index":890,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":881,"title":{},"body":{"index.html":{}}}],["segments",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["semantic",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":404,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["sendemail",{"_index":482,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemail(email",{"_index":487,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["sendemailresponse",{"_index":338,"title":{"interfaces/sendEmailResponse.html":{}},"body":{"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["sent",{"_index":239,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"components/EmailCreateComponent.html":{}}}],["serve",{"_index":871,"title":{},"body":{"index.html":{}}}],["server",{"_index":868,"title":{},"body":{"index.html":{}}}],["session",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["sessionstorage.length",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout",{"_index":769,"title":{},"body":{"components/SignupComponent.html":{}}}],["shared/shared.module",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{}}}],["sharedmodule",{"_index":248,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":495,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["show.component",{"_index":531,"title":{},"body":{"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{}}}],["show.component.css",{"_index":496,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show.component.html",{"_index":497,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show.component.ts",{"_index":494,"title":{},"body":{"components/EmailShowComponent.html":{},"coverage.html":{}}}],["show.component.ts:13",{"_index":499,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show.component.ts:26",{"_index":500,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["show/email",{"_index":493,"title":{},"body":{"components/EmailShowComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"coverage.html":{}}}],["showerrors",{"_index":545,"title":{},"body":{"components/InputComponent.html":{}}}],["showmodal",{"_index":331,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{}}}],["sign",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{}}}],["signedin",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signin",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["signin'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["signin(credentials",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signin.component.css",{"_index":646,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.component.html",{"_index":647,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.component",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signincomponent",{"_index":121,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signincredentials",{"_index":273,"title":{"interfaces/SigninCredentials.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["signinresponse",{"_index":296,"title":{"interfaces/SigninResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["signout",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signout'},{'name",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["signout.component.css",{"_index":720,"title":{},"body":{"components/SignoutComponent.html":{}}}],["signout.component.html",{"_index":721,"title":{},"body":{"components/SignoutComponent.html":{}}}],["signout/signout.component",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signoutcomponent",{"_index":123,"title":{"components/SignoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["signup(credentials",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["signup.component.css",{"_index":730,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":731,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":125,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupcredentials",{"_index":278,"title":{"interfaces/SignupCredentials.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["signupresponse",{"_index":295,"title":{"interfaces/SignupResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["size",{"_index":435,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["skipwhile",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["skipwhile(value",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{}}}],["solid",{"_index":707,"title":{},"body":{"components/SigninComponent.html":{}}}],["somethigweirdisgoingon",{"_index":820,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"modules/InboxRoutingModule.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"interfaces/ResponseGetEmails.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"index.html":{},"interfaces/sendEmailResponse.html":{}}}],["space",{"_index":445,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["spec\\.ts",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":217,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"modules/AuthRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:14",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:9",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.ts",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:30",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:31",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:44",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:67",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:78",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/signin/signin.component.ts",{"_index":645,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["src/app/auth/signin/signin.component.ts:104",{"_index":657,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:13",{"_index":671,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:25",{"_index":656,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:28",{"_index":663,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:30",{"_index":664,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:49",{"_index":662,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:59",{"_index":658,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:68",{"_index":660,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:80",{"_index":661,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signin/signin.component.ts:92",{"_index":659,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/auth/signout/signout.component.ts",{"_index":719,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["src/app/auth/signout/signout.component.ts:10",{"_index":722,"title":{},"body":{"components/SignoutComponent.html":{}}}],["src/app/auth/signout/signout.component.ts:14",{"_index":723,"title":{},"body":{"components/SignoutComponent.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":729,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:100",{"_index":751,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:115",{"_index":748,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:127",{"_index":744,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:141",{"_index":749,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":758,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:152",{"_index":745,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":756,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:164",{"_index":742,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:176",{"_index":746,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:34",{"_index":740,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:42",{"_index":752,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:43",{"_index":753,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:64",{"_index":741,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:68",{"_index":750,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:78",{"_index":743,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:88",{"_index":747,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/validators/match",{"_index":591,"title":{},"body":{"injectables/MatchPassword.html":{},"coverage.html":{}}}],["src/app/auth/validators/unique",{"_index":805,"title":{},"body":{"injectables/UniqueUsername.html":{},"coverage.html":{}}}],["src/app/inbox/email",{"_index":324,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"components/EmailShowComponent.html":{},"coverage.html":{}}}],["src/app/inbox/email.service.ts",{"_index":479,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{}}}],["src/app/inbox/email.service.ts:21",{"_index":483,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.service.ts:25",{"_index":486,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.service.ts:28",{"_index":485,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.service.ts:31",{"_index":488,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/inbox/email.ts",{"_index":320,"title":{},"body":{"interfaces/Email.html":{},"coverage.html":{}}}],["src/app/inbox/home/home.component.ts",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/inbox/home/home.component.ts:10",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/inbox/home/home.component.ts:14",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/inbox/inbox",{"_index":538,"title":{},"body":{"modules/InboxRoutingModule.html":{}}}],["src/app/inbox/inbox.module.ts",{"_index":527,"title":{},"body":{"modules/InboxModule.html":{}}}],["src/app/inbox/inbox.module.ts:36",{"_index":528,"title":{},"body":{"modules/InboxModule.html":{}}}],["src/app/inbox/not",{"_index":624,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/inbox/placeholder/placeholder.component.ts",{"_index":630,"title":{},"body":{"components/PlaceholderComponent.html":{},"coverage.html":{}}}],["src/app/inbox/placeholder/placeholder.component.ts:12",{"_index":635,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["src/app/inbox/placeholder/placeholder.component.ts:8",{"_index":634,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["src/app/shared/input/input.component.ts",{"_index":542,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/shared/input/input.component.ts:13",{"_index":553,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:15",{"_index":551,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:17",{"_index":552,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:19",{"_index":550,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:24",{"_index":554,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/input/input.component.ts:27",{"_index":555,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/shared/modal/modal.component.ts",{"_index":600,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/modal/modal.component.ts:10",{"_index":609,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/modal/modal.component.ts:14",{"_index":612,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/modal/modal.component.ts:17",{"_index":611,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/modal/modal.component.ts:20",{"_index":613,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":642,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacked.segment",{"_index":704,"title":{},"body":{"components/SigninComponent.html":{}}}],["start",{"_index":429,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["started",{"_index":860,"title":{"index.html":{}},"body":{}}],["state",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":489,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["storage",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":887,"title":{},"body":{"index.html":{}}}],["string",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailFormComponent.html":{},"injectables/EmailService.html":{},"components/InputComponent.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"interfaces/sendEmailResponse.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["subject",{"_index":322,"title":{},"body":{"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["submit",{"_index":703,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe",{"_index":351,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(response",{"_index":511,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["subscribe(response=>console.log(response",{"_index":466,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["subscribe(v",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["successfully",{"_index":358,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["support",{"_index":914,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":915,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":503,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["switchmap(({id",{"_index":509,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["symbol",{"_index":697,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["table",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignoutComponent.html":{}}}],["take(1",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["taken",{"_index":577,"title":{},"body":{"components/InputComponent.html":{},"components/SignupComponent.html":{}}}],["tap",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["tap((response",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["tap(({authenticated",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["tap(authenticated",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap(v",{"_index":237,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["tell",{"_index":579,"title":{},"body":{"components/InputComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":893,"title":{},"body":{"index.html":{}}}],["testing",{"_index":905,"title":{},"body":{"index.html":{}}}],["tests",{"_index":892,"title":{},"body":{"index.html":{}}}],["text",{"_index":323,"title":{},"body":{"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/SigninComponent.html":{}}}],["this.authform.controls['password'].dirty",{"_index":781,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['password'].errors",{"_index":691,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.controls['password'].touched",{"_index":780,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].dirty",{"_index":782,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].errors",{"_index":776,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].errors!['required",{"_index":777,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['passwordconfirmation'].touched",{"_index":775,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.controls['username'].errors",{"_index":684,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.controls['username'].errors!['required",{"_index":686,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.controls['username'].touched",{"_index":685,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.dirty",{"_index":683,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.authform.errors!['password",{"_index":702,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.errors![\\'password",{"_index":718,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.seterrors(error.error",{"_index":676,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authform.seterrors(this.noconnection",{"_index":768,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authform.touched",{"_index":682,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authservice.checkauth",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice.signedin",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.signedin$.pipe",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.signin(this.authform.value",{"_index":673,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.authservice.signout().subscribe",{"_index":725,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this.authservice.signup(this.authform.value",{"_index":764,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.usernameavailable(value",{"_index":814,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["this.control",{"_index":562,"title":{},"body":{"components/InputComponent.html":{}}}],["this.dismiss.emit",{"_index":617,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.el.nativeelement.remove",{"_index":616,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.email",{"_index":347,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{}}}],["this.email.from",{"_index":460,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.email.text",{"_index":464,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.email.to",{"_index":459,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.email=this.route.snapshot.data['email",{"_index":504,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.emailform",{"_index":391,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["this.emailform.get(prop",{"_index":401,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["this.emails",{"_index":418,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["this.emailservice.getemail(id",{"_index":510,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.emailservice.getemail(id).pipe",{"_index":476,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["this.emailservice.getemails().subscribe((response",{"_index":417,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["this.emailservice.sendemail(email",{"_index":465,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["this.emailservice.sendemail(event",{"_index":350,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["this.emailsubmit.emit(this.emailform.value",{"_index":403,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["this.http.get(`${this.rooturl}/auth/signedin",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.get(`${this.rooturl}/emails",{"_index":490,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["this.http.get(`${this.rooturl}/emails/${id",{"_index":491,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["this.http.post",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.post(`${this.rooturl}/auth/signin`,credentials",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.post(`${this.rooturl}/auth/signout",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.http.post(`${this.rooturl}/emails`,email",{"_index":492,"title":{},"body":{"injectables/EmailService.html":{},"interfaces/ResponseGetEmails.html":{},"interfaces/sendEmailResponse.html":{}}}],["this.matchpassword.validate",{"_index":755,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.noconnection.noconnection",{"_index":770,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.rooturl}/auth/signup",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.rooturl}/auth/username",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.route.data.subscribe(({email",{"_index":505,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.route.params.pipe",{"_index":508,"title":{},"body":{"components/EmailShowComponent.html":{}}}],["this.router.navigate(['/inbox",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigatebyurl",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignoutComponent.html":{}}}],["this.router.navigatebyurl('/inbox",{"_index":674,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.router.navigatebyurl('/inbox/not",{"_index":477,"title":{},"body":{"guards/EmailResolverService.html":{}}}],["this.showmodal",{"_index":360,"title":{},"body":{"components/EmailCreateComponent.html":{},"components/EmailReplyComponent.html":{}}}],["this.signedin",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.signedin$.next(authenticated",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.next(false",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.next(true",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.value",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["this.signedin$.value===false",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.signedin$.value===true",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["this.uniqueusername.validate",{"_index":754,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.usersessioncontroller",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["thisreceiver",{"_index":556,"title":{},"body":{"components/InputComponent.html":{}}}],["top",{"_index":711,"title":{},"body":{"components/SigninComponent.html":{}}}],["touched",{"_index":560,"title":{},"body":{"components/InputComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["trim",{"_index":441,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["true",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"injectables/MatchPassword.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/Email.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"guards/EmailResolverService.html":{},"injectables/EmailService.html":{},"components/EmailShowComponent.html":{},"components/InputComponent.html":{},"injectables/MatchPassword.html":{},"components/ModalComponent.html":{},"interfaces/ResponseGetEmails.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{},"interfaces/sendEmailResponse.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["ui.button.primary",{"_index":362,"title":{},"body":{"components/EmailCreateComponent.html":{}}}],["uniqueusername",{"_index":739,"title":{"injectables/UniqueUsername.html":{}},"body":{"components/SignupComponent.html":{},"injectables/UniqueUsername.html":{},"coverage.html":{}}}],["unit",{"_index":891,"title":{},"body":{"index.html":{}}}],["up",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{}}}],["url",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["url.split('/')[3",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["urlsegment",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["urltree",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":883,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/SignoutComponent.html":{}}}],["userkey:string|null",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["username",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["username.ts",{"_index":806,"title":{},"body":{"injectables/UniqueUsername.html":{},"coverage.html":{}}}],["username.ts:10",{"_index":807,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["username.ts:12",{"_index":808,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["usernameavailable",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernameavailable(username",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernameavailable(username:string",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["usernameavailableresponse",{"_index":291,"title":{"interfaces/UserNameAvailableResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{},"coverage.html":{}}}],["usersessioncontroller",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["v.available",{"_index":816,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["v.type",{"_index":240,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{}}}],["valid",{"_index":565,"title":{},"body":{"components/InputComponent.html":{}}}],["validate",{"_index":593,"title":{},"body":{"injectables/MatchPassword.html":{},"injectables/UniqueUsername.html":{}}}],["validate(formgroup",{"_index":594,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validation",{"_index":681,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validationerrors",{"_index":811,"title":{},"body":{"injectables/UniqueUsername.html":{}}}],["validator",{"_index":597,"title":{},"body":{"injectables/MatchPassword.html":{}}}],["validators",{"_index":390,"title":{},"body":{"components/EmailFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":393,"title":{},"body":{"components/EmailFormComponent.html":{}}}],["validators.maxlength(20",{"_index":666,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":665,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(4",{"_index":670,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.pattern(/^[a",{"_index":667,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":396,"title":{},"body":{"components/EmailFormComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["validators/match",{"_index":761,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators/unique",{"_index":762,"title":{},"body":{"components/SignupComponent.html":{}}}],["value",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EmailCreateComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"injectables/EmailService.html":{},"components/InputComponent.html":{},"components/SigninComponent.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"components/SignupComponent.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"injectables/UniqueUsername.html":{},"interfaces/UserNameAvailableResponse.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["variable",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":926,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":865,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":895,"title":{},"body":{"index.html":{}}}],["void",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/EmailCreateComponent.html":{},"components/EmailFormComponent.html":{},"components/EmailIndexComponent.html":{},"components/EmailReplyComponent.html":{},"components/EmailShowComponent.html":{},"components/HomeComponent.html":{},"modules/InboxModule.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlaceholderComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["want",{"_index":637,"title":{},"body":{"components/PlaceholderComponent.html":{}}}],["weight:bold",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":444,"title":{},"body":{"components/EmailIndexComponent.html":{}}}],["width",{"_index":439,"title":{},"body":{"components/EmailIndexComponent.html":{},"components/SigninComponent.html":{}}}],["withcredentials",{"_index":233,"title":{},"body":{"interceptors/AuthHttpInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["withcredentials:true",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SigninCredentials.html":{},"interfaces/SigninResponse.html":{},"interfaces/SignupCredentials.html":{},"interfaces/SignupResponse.html":{},"interfaces/UserNameAvailableResponse.html":{}}}],["works",{"_index":728,"title":{},"body":{"components/SignoutComponent.html":{}}}],["wrote",{"_index":462,"title":{},"body":{"components/EmailReplyComponent.html":{}}}],["z0",{"_index":668,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["zone.js",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InboxModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                signedin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNotSignedIn\n                            \n                            \n                                isSignedIn\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                userSessionController\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isNotSignedIn\n                        \n                    \n                \n            \n            \n                \nisNotSignedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSignedIn\n                        \n                    \n                \n            \n            \n                \nisSignedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSessionController\n                        \n                    \n                \n            \n            \n                \nuserSessionController()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        signedin$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  signedin$!: BehaviorSubject;\n\n  constructor(private authService: AuthService,private router: Router){\n    this.signedin$ = this.authService.signedin$;\n  }\n  ngOnInit() {\n     this.userSessionController();    \n  }\n   isSignedIn(){\n    return this.signedin$.value===true ? true : false;\n   }\n   isNotSignedIn(){\n    return this.signedin$.value===false ? true : false;\t\n   }\n   userSessionController(){\n    let url = location.href;\n    let inbox =url.split('/')[3];\n    console.log(\"%c\" + 'SESSION STORAGE LENGTH: '+ sessionStorage.length, \"color: PowderBlue;font-weight:bold; background-color: RoyalBlue;\")\n    console.log(url);\n    if(localStorage.length > 0){\n      this.signedin$.next(true);\n      if (inbox !== 'inbox') {\n        console.log('Sending user to inbox from userSessionController');\n        this.router.navigate(['/inbox']);\n      }\n      const userKey:string|null = localStorage.key(0) || 'No user in localStorage';\n      return console.log(localStorage);\n    }else{\n      return false;\n    }\n   }\n}\n\n    \n\n    \n        \n    \n        Angular Email\n        \n            \n                Inbox\n                Sign Out\n            \n            \n                 Sign In\n                Sign Up\n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Angular Email                                    Inbox                Sign Out                                         Sign In                Sign Up                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\n\n\nAuthHttpInterceptor\n\nAuthHttpInterceptor\n\nAppModule -->\n\nAuthHttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthHttpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module'; \nimport { AuthRoutingModule } from './auth/auth-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthHttpInterceptor } from './auth/auth-http-interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    AuthRoutingModule,\n    HttpClientModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthHttpInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'inbox',\n    canLoad: [AuthGuard],\n    loadChildren: () => \n    \"import('./inbox/inbox.module').then(mod=>mod.InboxModule)\"\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                            UrlSegment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanLoad, Route, Router, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable, skipWhile, take, tap } from 'rxjs';\nimport { AuthService } from './auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanLoad {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable | Promise | boolean | UrlTree {\n    return this.authService.signedin$.pipe(\n      skipWhile(value => value === null),\n      take(1),\n      tap(authenticated => {\n        console.log('Your authentifications is: ',authenticated,this.authService.signedin$)\n        if(!authenticated) {\n          this.router.navigateByUrl('/');\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthHttpInterceptor.html":{"url":"interceptors/AuthHttpInterceptor.html","title":"interceptor - AuthHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-http-interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-http-interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth-http-interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpEvent,HttpInterceptor,HttpHandler,HttpRequest,HttpEventType } from '@angular/common/http';\nimport { filter, Observable, tap } from 'rxjs'\n\n@Injectable({providedIn: 'root'})\nexport class AuthHttpInterceptor implements HttpInterceptor {\n    constructor() { };\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        const modifyReq = req.clone({\n            withCredentials: true,\n        });\n        return next.handle(modifyReq)\n            // .pipe(\n            //     filter(v=>v.type===HttpEventType.Sent),\n            //     tap(v => {\n            //         console.log('Request was sent it');\n            //         // if (v.type === HttpEventType.Sent) {\n            //         //     console.log('Request was sent it');\n            //         // }\n            //         // if (v.type === HttpEventType.Response) {\n            //         //     console.log('Response received it');\n            //         // }\n            //     }),\n            // )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nSigninComponent\n\nSigninComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSigninComponent->AuthModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthModule -->\n\nSignoutComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SigninComponent\n                        \n                        \n                            SignoutComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { SignoutComponent } from './signout/signout.component';\n\n\n@NgModule({\n  declarations: [\n    SigninComponent,\n    SignupComponent,\n    SignoutComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {SignupComponent} from './signup/signup.component';\nimport {SigninComponent} from './signin/signin.component';\nimport { SignoutComponent } from './signout/signout.component';\n\nconst routes: Routes = [\n  {path:'signout', component: SignoutComponent},\n  {path:'signup', component: SignupComponent},\n  {path:'', component: SigninComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                            \n                                signedin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuth\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                            \n                                usernameAvailable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuth\n                        \n                    \n                \n            \n            \n                \ncheckAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signin\n                        \n                    \n                \n            \n            \n                \nsignin(credentials: SigninCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                SigninCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signout\n                        \n                    \n                \n            \n            \n                \nsignout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(credentials: SignupCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                SignupCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameAvailable\n                        \n                    \n                \n            \n            \n                \nusernameAvailable(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.angular-email.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signedin$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Email.html":{"url":"interfaces/Email.html","title":"interface - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            html\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Email {\n        id: string;\n        subject: string;\n        text: string;\n        to: string;\n        from: string;\n        html: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailCreateComponent.html":{"url":"components/EmailCreateComponent.html","title":"component - EmailCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-create/email-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-create\n            \n\n            \n                styleUrls\n                ./email-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handlerSuccessEmailSent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-create/email-create.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handlerSuccessEmailSent\n                        \n                    \n                \n            \n            \n                \nhandlerSuccessEmailSent(response: sendEmailResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-create/email-create.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                sendEmailResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-create/email-create.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-create/email-create.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Email\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-create/email-create.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-create/email-create.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Email } from '../email';\nimport { EmailService } from '../email.service';\nimport { sendEmailResponse } from '../email.service';\n\n\n\n@Component({\n  selector: 'app-email-create',\n  templateUrl: './email-create.component.html',\n  styleUrls: ['./email-create.component.css']\n})\nexport class EmailCreateComponent implements OnInit {\n  showModal = false;\n  email: Email;\n  constructor(\n    private emailService: EmailService\n  ) {\n    this.email= {\n      id: '',\n      to: '',\n      subject: '',\n      html: '',\n      text: '',\n      from: `${localStorage.key(0)}@angular-email.com`\n    }\n   }\n\n  ngOnInit(): void {\n  }\n  onSubmit(event:Email){\n    this.emailService.sendEmail(event)\n    .subscribe({\n      next: (response)=>{this.handlerSuccessEmailSent(response)},\n      error: (error)=>{throw new Error(error.message)},\n      complete: ()=>{console.log('Email sent successfully')}\n    })\n  }\n  handlerSuccessEmailSent(response:sendEmailResponse){\n      console.log(response);\n      this.showModal = false;\n  }\n\n}\n\n    \n\n    \n        \n    Compose\n\n\n    Compose\n    \n\n    \n\n    \n                \n                    ./email-create.component.css\n                \n                .ui.button.primary {\n    margin-bottom: 1rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Compose    Compose    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailFormComponent.html":{"url":"components/EmailFormComponent.html","title":"component - EmailFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-form/email-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-form\n            \n\n            \n                styleUrls\n                ./email-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formPropertyGetters\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailSubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-form/email-form.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :         Email\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inbox/email-form/email-form.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emailSubmit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inbox/email-form/email-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formPropertyGetters\n                        \n                    \n                \n            \n            \n                \nformPropertyGetters(prop: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-form/email-form.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-form/email-form.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-form/email-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-form/email-form.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Email } from '../email';\n\n@Component({\n  selector: 'app-email-form',\n  templateUrl: './email-form.component.html',\n  styleUrls: ['./email-form.component.css']\n})\nexport class EmailFormComponent implements OnInit {\n  emailForm!: FormGroup;\n  @Input()\n  email!: Email;\n  @Output()\n  emailSubmit: EventEmitter = new EventEmitter;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    //console.log('EMAIL FORM');\n    const { subject, from, to, text } = this.email;\n    this.emailForm = new FormGroup({\n      to: new FormControl(to,[Validators.required, Validators.email]),\n      from: new FormControl({value:from,disabled:true}),\n      subject: new FormControl(subject, [Validators.required]),\n      text: new FormControl(text, [Validators.required])\n    })\n  }\n  formPropertyGetters(prop:string){\n    //console.log('EMAIL FORM GETTERS FUNCTION'+prop,this.emailForm.get(prop));\n    return this.emailForm.get(prop) as FormControl;\n  }\n  onSubmit(){\n    if(this.emailForm.invalid){\n      return;\n    }else{\n      return this.emailSubmit.emit(this.emailForm.value)\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n    \n    \n    \n   \n    \n    \n    \n    \n    \n    \n    \n    \n    Send\n\n\n\n    \n\n    \n                \n                    ./email-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Send'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailIndexComponent.html":{"url":"components/EmailIndexComponent.html","title":"component - EmailIndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailIndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-index/email-index.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-index\n            \n\n            \n                styleUrls\n                ./email-index.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-index.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-index/email-index.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-index/email-index.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResponseGetEmails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-index/email-index.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmailService } from '../email.service';\nimport { ResponseGetEmails } from '../email.service';\n\n@Component({\n  selector: 'app-email-index',\n  templateUrl: './email-index.component.html',\n  styleUrls: ['./email-index.component.css']\n})\nexport class EmailIndexComponent implements OnInit {\n   emails:ResponseGetEmails[] = [];\n\n  constructor(private emailService:EmailService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.route)\n    this.emailService.getEmails().subscribe((response) => {\n      this.emails = response;\n      console.log(this.emails);\n  })\n\n }\n}\n\n    \n\n    \n        \n    \n      \n        \n            \n                {{email.subject}}\n            \n            \n                {{email.from}}\n            \n        \n      \n    \n\n\n    \n\n    \n                \n                    ./email-index.component.css\n                \n                .item a{\n    color: black;\n}\n\na.active {\n    display:flex;\n    justify-content: flex-start;\n    align-items: center;\n}\n\na.active:before {\n    content: '>';\n    font-size: 20px;\n    margin-right: 10px; \n}\n\n.content {\n    width: 90%;\n}\n\n.trim {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{email.subject}}                                        {{email.from}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailIndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailReplyComponent.html":{"url":"components/EmailReplyComponent.html","title":"component - EmailReplyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailReplyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-reply/email-reply.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-reply\n            \n\n            \n                styleUrls\n                ./email-reply.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-reply.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-reply/email-reply.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :         Email\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/inbox/email-reply/email-reply.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-reply/email-reply.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(email: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-reply/email-reply.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-reply/email-reply.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Email } from '../email';\nimport { EmailService, sendEmailResponse } from '../email.service';\n\n@Component({\n  selector: 'app-email-reply',\n  templateUrl: './email-reply.component.html',\n  styleUrls: ['./email-reply.component.css']\n})\nexport class EmailReplyComponent implements OnInit {\n\n  showModal: boolean = false;\n  @Input()\n  email!: Email;\n  constructor(\n    private emailService: EmailService\n  ) { }\n\n  ngOnInit(): void {\n    this.email = {\n      ...this.email,\n      from: this.email.to,\n      to: this.email.from,\n      text: `Reply:\\n\\n\\n\\n----------------\n      ${this.email.from} wrote: \\n> ${this.email.text}`\n     }\n  }\n  onSubmit(email: Email){\n    this.emailService.sendEmail(email)\n    .subscribe(response=>console.log(response));\n    this.showModal = false;\n  }\n\n}\n\n\n\n\n    \n\n    \n        \n    Reply\n    \n\n\n    Reply\n    \n\n    \n\n    \n                \n                    ./email-reply.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Reply        Reply    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailReplyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EmailResolverService.html":{"url":"guards/EmailResolverService.html","title":"guard - EmailResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EmailResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/inbox/email-resolver.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { catchError, EMPTY } from 'rxjs';\nimport { Email } from './email';\nimport { EmailService } from './email.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailResolverService implements Resolve{\n  constructor(\n    private emailService: EmailService,\n    private router: Router\n    ) { }\n  resolve(route: ActivatedRouteSnapshot) {\n    const {id} = route.params;\n    return this.emailService.getEmail(id).pipe(\n      catchError(()=>{\n        this.router.navigateByUrl('/inbox/not-found');\n        return EMPTY;\n      })\n    )\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmail\n                            \n                            \n                                getEmails\n                            \n                            \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmail\n                        \n                    \n                \n            \n            \n                \ngetEmail(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmails\n                        \n                    \n                \n            \n            \n                \ngetEmails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmail\n                        \n                    \n                \n            \n            \n                \nsendEmail(email: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.angular-email.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email} from './email';\n\nexport interface ResponseGetEmails{\n  id: string;\n  subject: string;\n  from: string;\n}\n\nexport interface sendEmailResponse {\n  status: string;\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  rootUrl = 'https://api.angular-email.com'\n\n  constructor(private http: HttpClient) { }\n\n  getEmails(){\n    return this.http.get(`${this.rootUrl}/emails`);\n  }\n  getEmail(id: string){\n    return this.http.get(`${this.rootUrl}/emails/${id}`);\t\n  }\n  sendEmail(email: Email){\n    return this.http.post(`${this.rootUrl}/emails`,email)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailShowComponent.html":{"url":"components/EmailShowComponent.html","title":"component - EmailShowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailShowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/email-show/email-show.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-show\n            \n\n            \n                styleUrls\n                ./email-show.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-show.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/email-show/email-show.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/email-show/email-show.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Email\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inbox/email-show/email-show.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { EmailService } from '../email.service';\nimport { Email} from '../email';\nimport { Observable, ObservableInput, switchMap } from 'rxjs';\n\n@Component({\n  selector: 'app-email-show',\n  templateUrl: './email-show.component.html',\n  styleUrls: ['./email-show.component.css']\n})\nexport class EmailShowComponent implements OnInit {\n  email!: Email;\n\n  constructor(\n    private route: ActivatedRoute,\n    private emailService: EmailService,\n    ) { \n        this.email=this.route.snapshot.data['email']\n        this.route.data.subscribe(({email}) =>{\n          this.email = email;\n          console.log('show component',this.email);\n        })\n      }\n\n  ngOnInit(): void {\n    // this.route.params.pipe(\n    //   switchMap(({id}) => { \n    //     return this.emailService.getEmail(id)\n    //   })\n    //   ).subscribe(response=>{\n    //     this.email = response;\n    //   })\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        {{email.subject}}\n        \n            From: {{email.from}}\n        \n        \n            To: {{email.to}}\n        \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./email-show.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{email.subject}}                    From: {{email.from}}                            To: {{email.to}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailShowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/home/home.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/home/home.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {}\n  //   this.authService.checkAuth()\n  //   .subscribe(v=>{\n  //     console.log(v);\n  //   })\n  // }\n\n\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InboxModule.html":{"url":"modules/InboxModule.html","title":"module - InboxModule","body":"\n                   \n\n\n\n\n    Modules\n    InboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InboxModule\n\n\n\ncluster_InboxModule_declarations\n\n\n\ncluster_InboxModule_imports\n\n\n\n\nEmailCreateComponent\n\nEmailCreateComponent\n\n\n\nInboxModule\n\nInboxModule\n\nInboxModule -->\n\nEmailCreateComponent->InboxModule\n\n\n\n\n\nEmailFormComponent\n\nEmailFormComponent\n\nInboxModule -->\n\nEmailFormComponent->InboxModule\n\n\n\n\n\nEmailIndexComponent\n\nEmailIndexComponent\n\nInboxModule -->\n\nEmailIndexComponent->InboxModule\n\n\n\n\n\nEmailReplyComponent\n\nEmailReplyComponent\n\nInboxModule -->\n\nEmailReplyComponent->InboxModule\n\n\n\n\n\nEmailShowComponent\n\nEmailShowComponent\n\nInboxModule -->\n\nEmailShowComponent->InboxModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nInboxModule -->\n\nHomeComponent->InboxModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nInboxModule -->\n\nNotFoundComponent->InboxModule\n\n\n\n\n\nPlaceholderComponent\n\nPlaceholderComponent\n\nInboxModule -->\n\nPlaceholderComponent->InboxModule\n\n\n\n\n\nInboxRoutingModule\n\nInboxRoutingModule\n\nInboxModule -->\n\nInboxRoutingModule->InboxModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInboxModule -->\n\nSharedModule->InboxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inbox/inbox.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EmailCreateComponent\n                        \n                        \n                            EmailFormComponent\n                        \n                        \n                            EmailIndexComponent\n                        \n                        \n                            EmailReplyComponent\n                        \n                        \n                            EmailShowComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PlaceholderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InboxRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/inbox.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InboxRoutingModule } from './inbox-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { EmailCreateComponent } from './email-create/email-create.component';\nimport { EmailShowComponent } from './email-show/email-show.component';\nimport { EmailReplyComponent } from './email-reply/email-reply.component';\nimport { EmailIndexComponent } from './email-index/email-index.component';\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { EmailFormComponent } from './email-form/email-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    EmailCreateComponent,\n    EmailShowComponent,\n    EmailReplyComponent,\n    EmailIndexComponent,\n    PlaceholderComponent,\n    NotFoundComponent,\n    EmailFormComponent\n  ],\n  imports: [\n    CommonModule,\n    InboxRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class InboxModule {\n  ngOnInit(){}\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InboxRoutingModule.html":{"url":"modules/InboxRoutingModule.html","title":"module - InboxRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InboxRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/inbox/inbox-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmailShowComponent } from './email-show/email-show.component';\nimport { HomeComponent } from './home/home.component';\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\nimport { EmailResolverService } from './email-resolver.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }, \n      {\n        path: ':id', \n        component: EmailShowComponent,\n        resolve: {\n          email : EmailResolverService\n        }\n      },\n      {\n        path: '',\n        component: PlaceholderComponent     \n      },\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InboxRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                controlType\n                            \n                            \n                                inputType\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/input/input.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        controlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'input'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/input/input.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/input/input.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n            \n                \nshowErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/input/input.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ThisReceiver } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n  @Input()\n  label!: string;\n  @Input()\n  control!: FormControl;\n  @Input()\n  inputType!: string;\n  @Input()\n  controlType = 'input';\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n     //console.log('INPUT COMPONENT');\n  }\n  showErrors() {\n    const { dirty, touched, errors } = this.control;\n    return dirty && touched && errors;\n  }\n\n}\n\n    \n\n    \n        \n    {{ label }}\n\n    \n    \n     \n    \n      \n        Value is required\n      \n      \n          Enter a valid email\n      \n      \n        Value you entered is\n        {{ control.errors!['minlength'].actualLength }}\n        characters long, but it must be at aleast\n        {{ control.errors!['minlength'].requiredLength }}\n        characters\n      \n      \n        Value you entered is\n        {{ control.errors!['maxlength'].actualLength }}\n        characters long, but it cannot be longer than\n        {{ control.errors!['maxlength'].requiredLength }}\n        characters\n      \n      \n        Invalid format\n      \n      \n        Username is taken\n      \n      \n        Can't tell if username is taken\n      \n    \n  \n\n    \n\n    \n                \n                    ./input.component.css\n                \n                :host {\n    display:block;\n    margin-bottom: 1em;\n}\n:host input:disabled {\n    background: #ccc;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}                               Value is required                      Enter a valid email                    Value you entered is        {{ control.errors![\\'minlength\\'].actualLength }}        characters long, but it must be at aleast        {{ control.errors![\\'minlength\\'].requiredLength }}        characters                    Value you entered is        {{ control.errors![\\'maxlength\\'].actualLength }}        characters long, but it cannot be longer than        {{ control.errors![\\'maxlength\\'].requiredLength }}        characters                    Invalid format                    Username is taken                    Can\\'t tell if username is taken            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPassword.html":{"url":"injectables/MatchPassword.html","title":"injectable - MatchPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MatchPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/validators/match-password.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(formGroup: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/validators/match-password.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { passwordDontMatch: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Validator, AbstractControl } from '@angular/forms';\nimport { Injectable } from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class MatchPassword implements Validator {\n    validate(formGroup: AbstractControl){\n        const {password,passwordConfirmation}=formGroup.value;\n        if(password=== passwordConfirmation){\n            return null;\n        }\n        else{\n            return {passwordDontMatch: true};\n        }  \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDismissClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/modal/modal.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dismiss\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modal/modal.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/modal/modal.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/modal/modal.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDismissClick\n                        \n                    \n                \n            \n            \n                \nonDismissClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/modal/modal.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  @Output() dismiss = new EventEmitter();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit(): void {\n    document.body.appendChild(this.el.nativeElement);\n  }\n  ngOnDestroy():void{\n    this.el.nativeElement.remove();\n  }\n onDismissClick(){\n   this.dismiss.emit();\n }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n            \n        \n        \n            \n                Ok\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./modal.component.css\n                \n                .actions:empty{\n    display: none;\n}\n\n.actions-default {\n    display:none;\n}\n\n.actions:empty + .actions-default{\n    display:block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Ok                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Email not found!\n    \n\n    \n\n    \n                \n                    ./not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Email not found!    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaceholderComponent.html":{"url":"components/PlaceholderComponent.html","title":"component - PlaceholderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaceholderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inbox/placeholder/placeholder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-placeholder\n            \n\n            \n                styleUrls\n                ./placeholder.component.css\n            \n\n\n\n            \n                templateUrl\n                ./placeholder.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/inbox/placeholder/placeholder.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/inbox/placeholder/placeholder.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-placeholder',\n  templateUrl: './placeholder.component.html',\n  styleUrls: ['./placeholder.component.css']\n})\nexport class PlaceholderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Choose the email you want to read\n    \n\n    \n\n    \n                \n                    ./placeholder.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Choose the email you want to read    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaceholderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseGetEmails.html":{"url":"interfaces/ResponseGetEmails.html","title":"interface - ResponseGetEmails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseGetEmails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email} from './email';\n\nexport interface ResponseGetEmails{\n  id: string;\n  subject: string;\n  from: string;\n}\n\nexport interface sendEmailResponse {\n  status: string;\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  rootUrl = 'https://api.angular-email.com'\n\n  constructor(private http: HttpClient) { }\n\n  getEmails(){\n    return this.http.get(`${this.rootUrl}/emails`);\n  }\n  getEmail(id: string){\n    return this.http.get(`${this.rootUrl}/emails/${id}`);\t\n  }\n  sendEmail(email: Email){\n    return this.http.post(`${this.rootUrl}/emails`,email)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nInputComponent\n\nInputComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nSharedModule -->\n\nModalComponent->SharedModule\n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nSharedModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InputComponent\n                        \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InputComponent\n                        \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ModalComponent } from './modal/modal.component';\nimport { InputComponent } from './input/input.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    ModalComponent,\n    InputComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    ModalComponent,\n    InputComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signin/signin.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signin\n            \n\n            \n                styleUrls\n                ./signin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkMaxLengthPasswordConfirmation\n                            \n                            \n                                checkMinLength\n                            \n                            \n                                checkMinLengthPassword\n                            \n                            \n                                checkPattern\n                            \n                            \n                                checkRequiredPassword\n                            \n                            \n                                checkRequiredUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitSignin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signin/signin.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkMaxLengthPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckMaxLengthPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLength\n                        \n                    \n                \n            \n            \n                \ncheckMinLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLengthPassword\n                        \n                    \n                \n            \n            \n                \ncheckMinLengthPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPattern\n                        \n                    \n                \n            \n            \n                \ncheckPattern()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredPassword\n                        \n                    \n                \n            \n            \n                \ncheckRequiredPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredUsername\n                        \n                    \n                \n            \n            \n                \ncheckRequiredUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitSignin\n                        \n                    \n                \n            \n            \n                \nonSubmitSignin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signin/signin.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n})\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signin/signin.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n//import { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  authForm = new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n});\n  constructor(private authService: AuthService,private router: Router) { }\n//\n  ngOnInit(): void {\n  }\n  onSubmitSignin(){\n    if(this.authForm.invalid) return;\n    this.authService.signin(this.authForm.value)\n    .subscribe({\n      next: (response)=>{\n       this.router.navigateByUrl('/inbox');\n       console.log(this.authForm,response)\n      },\n      error: (error)=>{\n         this.authForm.setErrors(error.error)\n         console.log(error.error);\n         console.log(this.authForm);\n      },\n      complete: ()=>{\n        console.log('Signin Response Completed')\n      }\n    });\n  }\n  /** @UserName Input validation *********************************/\n  checkRequiredUsername() {\n    if (this.authForm.touched && this.authForm.dirty &&\n      this.authForm.controls['username'].errors! &&\n      this.authForm.controls['username'].touched) {\n      if (this.authForm.controls['username'].errors!['required']) { return true; }\n      else { return false };\n    } else {\n      return false;\n    }\n  }\n  checkMinLength(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n       if(this.authForm.controls['username'].errors!['minlength']){return true;}\n       else {return false;};\n    }else{\n      return false;\n    }\n  }\n  checkPattern(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n      if(this.authForm.controls['username'].errors!['pattern']){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkRequiredPassword(){\n    if(this.authForm.controls['password'].touched && this.authForm.dirty && \n    this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['required']){\n        return true;\n      }else {\n        return false};\n    }\n    else{\n      return false\n    }\n  }\n  checkMinLengthPassword(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['minlength']){\n        return true;\n      }else {\n        return false;\n      };\n    }else{\n      return false\n    }\n  }\n  checkMaxLengthPasswordConfirmation(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['maxlength']){\n        return true;\n      }else {\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n\n    Log in\n    \n        \n        value is required\n        characters must be at least\n            {{authForm.controls['username'].errors!['minlength'].requiredLength}}\n            characters\n        This symbol is not allowed\n        \n            {{'Username not found!'}}\n        \n    \n    \n        \n        password is required\n        characters must be at least\n            {{authForm.controls['password'].errors!['minlength'].requiredLength}}\n            characters\n        \n        characters must be max\n            {{authForm.controls['password'].errors!['maxlength'].requiredLength}}\n            characters\n        \n        \n            {{this.authForm.errors!['password']}}\n        \n    \n    Submit\n\n\n\n    \n\n    \n                \n                    ./signin.component.css\n                \n                .stacked.segment {      \n border: 1px solid #54C8FF;\n border-radius: 10px ;\n display: block;\n margin-top: 200px;\n margin-left: 200px;\n align-content: center;\n text-align: center;\n width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Log in                    value is required        characters must be at least            {{authForm.controls[\\'username\\'].errors![\\'minlength\\'].requiredLength}}            characters        This symbol is not allowed                    {{\\'Username not found!\\'}}                                password is required        characters must be at least            {{authForm.controls[\\'password\\'].errors![\\'minlength\\'].requiredLength}}            characters                characters must be max            {{authForm.controls[\\'password\\'].errors![\\'maxlength\\'].requiredLength}}            characters                            {{this.authForm.errors![\\'password\\']}}                Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SigninCredentials.html":{"url":"interfaces/SigninCredentials.html","title":"interface - SigninCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SigninCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SigninResponse.html":{"url":"interfaces/SigninResponse.html","title":"interface - SigninResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SigninResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authenticated\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authenticated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signout/signout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signout\n            \n\n            \n                styleUrls\n                ./signout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signout/signout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signout/signout.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signout',\n  templateUrl: './signout.component.html',\n  styleUrls: ['./signout.component.css']\n})\nexport class SignoutComponent implements OnInit {\n\n  constructor(private authService: AuthService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.authService.signout().subscribe(()=>{\n      //take the user back to signin page\n      this.router.navigateByUrl('/')\n    })\n  }\n\n}\n\n    \n\n    \n        signout works!\n\n    \n\n    \n                \n                    ./signout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'signout works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                noConnection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkConnection\n                            \n                            \n                                checkMaxLengthPasswordConfirmation\n                            \n                            \n                                checkMinLength\n                            \n                            \n                                checkMinLengthPassword\n                            \n                            \n                                checkMinLengthPasswordConfirmation\n                            \n                            \n                                checkPasswordDontMatch\n                            \n                            \n                                checkPattern\n                            \n                            \n                                checkRequiredPassword\n                            \n                            \n                                checkRequiredPasswordConfirmation\n                            \n                            \n                                checkRequiredUsername\n                            \n                            \n                                checkTakenUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uniqueUserName: UniqueUsername, matchPassword: MatchPassword, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uniqueUserName\n                                                  \n                                                        \n                                                                        UniqueUsername\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPassword\n                                                  \n                                                        \n                                                                        MatchPassword\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkConnection\n                        \n                    \n                \n            \n            \n                \ncheckConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMaxLengthPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckMaxLengthPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLength\n                        \n                    \n                \n            \n            \n                \ncheckMinLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLengthPassword\n                        \n                    \n                \n            \n            \n                \ncheckMinLengthPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkMinLengthPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckMinLengthPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordDontMatch\n                        \n                    \n                \n            \n            \n                \ncheckPasswordDontMatch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPattern\n                        \n                    \n                \n            \n            \n                \ncheckPattern()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredPassword\n                        \n                    \n                \n            \n            \n                \ncheckRequiredPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckRequiredPasswordConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRequiredUsername\n                        \n                    \n                \n            \n            \n                \ncheckRequiredUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkTakenUsername\n                        \n                    \n                \n            \n            \n                \ncheckTakenUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[this.uniqueUserName.validate]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n    passwordConfirmation: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ])\n  },{ validators: [this.matchPassword.validate,] }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { noConnection: false}\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/signup/signup.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { MatchPassword} from '../validators/match-password';\nimport { UniqueUsername } from '../validators/unique-username';\nimport { AuthService } from '../auth.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n  noConnection = { noConnection: false};\n  authForm = new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-z0-9]+$/)\n    ],[this.uniqueUserName.validate]),\n    password: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ]),\n    passwordConfirmation: new FormControl('',[\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20),\n    ])\n  },{ validators: [this.matchPassword.validate,] }\n  );\n\n  constructor(\n    private uniqueUserName: UniqueUsername,\n    private matchPassword: MatchPassword,\n    private authService: AuthService\n    ) {}\n\n  ngOnInit(): void {}\n  onSubmit() {\n    if(this.authForm.invalid){return}\n    else{\n     this.authService.signup(this.authForm.value)\n     .subscribe({\n       next:(response)=>{\n         console.log(response);\n       },\n       error:(error)=>{\n         if(error.status === 0){\n           this.authForm.setErrors(this.noConnection = { noConnection: true});\n           setTimeout(()=>{\n             this.noConnection.noConnection = false;\n            },5000)\n         }\n           \n        },\n       complete:()=>{},\n     })\n    }\n  }\n  checkConnection(){\n    return this.noConnection.noConnection;\n  }\n  /** @UserName Input validation *********************************/\n  checkRequiredUsername(){\n    if(this.authForm.touched && this.authForm.dirty &&\n      this.authForm.controls['username'].errors! &&\n      this.authForm.controls['username'].touched){\n       if(this.authForm.controls['username'].errors!['required']){return true;}\n       else {return false};\n    }else{\n      return false;\n    }\n  }\n  checkMinLength(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n       if(this.authForm.controls['username'].errors!['minlength']){return true;}\n       else {return false;};\n    }else{\n      return false;\n    }\n  }\n\n  checkPattern(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n      if(this.authForm.controls['username'].errors!['pattern']){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkTakenUsername(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['username'].errors!){\n\n      if(this.authForm.controls['username'].errors!['nonUniqueUsername']){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n    /** @Password Input validation *********************************/\n  \n  checkRequiredPassword(){\n    if(this.authForm.controls['password'].touched && this.authForm.dirty && \n    this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['required']){\n        return true;\n      }else {\n        return false};\n    }\n    else{\n      return false\n    }\n  }\n  checkMinLengthPassword(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['password'].errors!){\n      if(this.authForm.controls['password'].errors!['minlength']){\n        return true;\n      }else {\n        return false;\n      };\n    }else{\n      return false\n    }\n  }\n\n  /** @PassworConfirmation Input validation *********************************/\n  checkRequiredPasswordConfirmation(){\n    if (this.authForm.controls['passwordConfirmation'].touched &&\n      this.authForm.dirty &&\n      this.authForm.controls['passwordConfirmation'].errors!) {\n       if (this.authForm.controls['passwordConfirmation'].errors!['required']) {return true;} \n       else {return false};\n    }\n    else {\n      return false\n    }\n  }\n  checkMinLengthPasswordConfirmation(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['passwordConfirmation'].errors!){\n      if(this.authForm.controls['passwordConfirmation'].errors!['minlength']){\n        return true;\n      }else {\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkMaxLengthPasswordConfirmation(){\n    if(this.authForm.touched && this.authForm.dirty && \n      this.authForm.controls['passwordConfirmation'].errors!){\n      if(this.authForm.controls['passwordConfirmation'].errors!['maxlength']){\n        return true;\n      }else {\n        return false;\n      }\n    }else{\n      return false\n    }\n  }\n  checkPasswordDontMatch(){\n    if(\n    this.authForm.controls['password'].touched &&\n    this.authForm.controls['password'].dirty &&\n    this.authForm.controls['passwordConfirmation'].touched &&\n    this.authForm.controls['passwordConfirmation'].dirty\n    ){\n      return this.authForm.controls['passwordConfirmation'].errors ? true : false;  \n    }else {\n      return false; \n    }\n  }\n}\n\n\n\n    \n\n    \n        create account\n\n    \n        Username\n        \n        {{ authForm.get('username')?.errors | json }} \n            value is required\n            characters must be at least\n                {{authForm.controls['username'].errors!['minlength'].requiredLength}}\n                characters\n            This symbol is not allowed\n            This username is taken\n    \n    \n    \n        Password\n        \n        password is required\n        characters must be at least\n            {{authForm.controls['password'].errors!['minlength'].requiredLength}}\n            characters\n        {{ authForm.get('password')?.errors | json }} \n    \n\n    \n        confirm-password\n        \n        {{ authForm.get('passwordConfirmation')?.errors | json }}\n        password confirmation is required\n        \n        characters must be at least\n            {{authForm.controls['passwordConfirmation'].errors!['minlength'].requiredLength}}\n            characters\n        \n        characters must be max\n            {{authForm.controls['passwordConfirmation'].errors!['maxlength'].requiredLength}}\n            characters\n        \n        \n            Passwords does not match\n        \n    \n     \n        \n            Submit\n        \n        \n            No internet connection detected,failed to sign up\n        \n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                :host {\n    display: block;\n    margin-bottom: 100em;\n}\n\n.basic.label{\n    margin-bottom: 0.5em;\n}\n\n.submit {\n    display: flex;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'create account            Username                {{ authForm.get(\\'username\\')?.errors | json }}             value is required            characters must be at least                {{authForm.controls[\\'username\\'].errors![\\'minlength\\'].requiredLength}}                characters            This symbol is not allowed            This username is taken                    Password                password is required        characters must be at least            {{authForm.controls[\\'password\\'].errors![\\'minlength\\'].requiredLength}}            characters        {{ authForm.get(\\'password\\')?.errors | json }}                 confirm-password                {{ authForm.get(\\'passwordConfirmation\\')?.errors | json }}        password confirmation is required                characters must be at least            {{authForm.controls[\\'passwordConfirmation\\'].errors![\\'minlength\\'].requiredLength}}            characters                characters must be max            {{authForm.controls[\\'passwordConfirmation\\'].errors![\\'maxlength\\'].requiredLength}}            characters                            Passwords does not match                                     Submit                            No internet connection detected,failed to sign up        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EmailCreateComponent', 'selector': 'app-email-create'},{'name': 'EmailFormComponent', 'selector': 'app-email-form'},{'name': 'EmailIndexComponent', 'selector': 'app-email-index'},{'name': 'EmailReplyComponent', 'selector': 'app-email-reply'},{'name': 'EmailShowComponent', 'selector': 'app-email-show'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlaceholderComponent', 'selector': 'app-placeholder'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignoutComponent', 'selector': 'app-signout'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupCredentials.html":{"url":"interfaces/SignupCredentials.html","title":"interface - SignupCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            passwordConfirmation\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passwordConfirmation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignupResponse.html":{"url":"interfaces/SignupResponse.html","title":"interface - SignupResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignupResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniqueUsername.html":{"url":"injectables/UniqueUsername.html","title":"injectable - UniqueUsername","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UniqueUsername\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/validators/unique-username.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/validators/unique-username.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/validators/unique-username.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AbstractControl, AsyncValidator, AsyncValidatorFn, FormControl, ValidationErrors } from '@angular/forms';\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { AuthService } from '../auth.service'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UniqueUsername implements AsyncValidator {\n    constructor(private authService: AuthService) { }\n    validate = (control2: AbstractControl): Promise | Observable  => {\n        const { value } = control2;\n        return this.authService.usernameAvailable(value)\n            .pipe(\n                map(v => {\n                    if (v.available) {\n                        return null\n                    } else {\n                        return value\n                    }\n                }),\n                catchError((e) => {\n                    if (e.error.username) {\n                        return of({ nonUniqueUsername: true })\n                    }\n                    else {\n                        return of({ somethigWeirdIsGoingOn: true })\n                    }\n                })\n            )\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserNameAvailableResponse.html":{"url":"interfaces/UserNameAvailableResponse.html","title":"interface - UserNameAvailableResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserNameAvailableResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            available\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        available\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        available:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\n\ninterface UserNameAvailableResponse {\n  available: boolean;\n}\n\ninterface SignupCredentials {\n  username: string;\n  password: string;\n  passwordConfirmation: string;\n}\ninterface SigninCredentials {\n  username: string;\n  password: string;\n}\ninterface SignupResponse {\n  username: string;\n}\ninterface SigninResponse {\n  authenticated: boolean;\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  rootUrl = 'https://api.angular-email.com';\n  signedin$ = new BehaviorSubject(false);\n\n  constructor(private http:HttpClient) {\n  }\n  usernameAvailable(username:string) {\n    return this.http.post(\n      `${this.rootUrl}/auth/username`,\n      {\n        username\n      }\n      );\n    }\n\n    checkAuth(){\n      return this.http.get(`${this.rootUrl}/auth/signedin`,{\n        withCredentials:true\n      })\n      .pipe(\n        tap(({authenticated})=>{\n          console.log(authenticated);\n          this.signedin$.next(authenticated);\n        })\n      )\n    }\n    signup(credentials: SignupCredentials){\n      return this.http.post(\n        `${this.rootUrl}/auth/signup`,\n        credentials,{\n        withCredentials: true\n        }).pipe(\n        tap((response)=>{\n          console.log(response)\n          this.signedin$.next(true);\n        })\n      )\n    }\n    signin(credentials: SigninCredentials){\n      return this.http.post(`${this.rootUrl}/auth/signin`,credentials)\n      .pipe(\n        tap((response)=>{\n          console.log(response);\n          this.signedin$.next(true);\n          localStorage.setItem(credentials.username,String(this.signedin$.value));\n        })\n      )\n    }\n\n    signout(){\n      return this.http.post(`${this.rootUrl}/auth/signout`,{})\n      .pipe(\n        tap((response)=>{\n          console.log('Signing out',response);\n          this.signedin$.next(false);\n          localStorage.clear();\n          console.log('Signedin$ Value is: ',this.signedin$.value);\n          console.log(localStorage);\n        })\n      )\n    }\n\n \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/auth-http-interceptor.ts\n            \n            interceptor\n            AuthHttpInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SigninCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SigninResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignupCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            SignupResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            interface\n            UserNameAvailableResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/signin/signin.component.ts\n            \n            component\n            SigninComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/auth/signout/signout.component.ts\n            \n            component\n            SignoutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/auth/validators/match-password.ts\n            \n            injectable\n            MatchPassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/validators/unique-username.ts\n            \n            injectable\n            UniqueUsername\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/email-create/email-create.component.ts\n            \n            component\n            EmailCreateComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/inbox/email-form/email-form.component.ts\n            \n            component\n            EmailFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/inbox/email-index/email-index.component.ts\n            \n            component\n            EmailIndexComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inbox/email-reply/email-reply.component.ts\n            \n            component\n            EmailReplyComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/inbox/email-resolver.service.ts\n            \n            guard\n            EmailResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/email-show/email-show.component.ts\n            \n            component\n            EmailShowComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inbox/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/inbox/email.service.ts\n            \n            interface\n            ResponseGetEmails\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/inbox/email.service.ts\n            \n            interface\n            sendEmailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/inbox/email.ts\n            \n            interface\n            Email\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/inbox/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/inbox/placeholder/placeholder.component.ts\n            \n            component\n            PlaceholderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            semantic-ui-css : ^2.4.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEmailclient\nThis project was generated with Angular CLI version 13.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InboxRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_InboxModule\n\n\n\ncluster_InboxModule_declarations\n\n\n\ncluster_InboxModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAppModule -->\n\nAuthRoutingModule->AppModule\n\n\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthHttpInterceptor\n\nAuthHttpInterceptor\n\nAppModule -->\n\nAuthHttpInterceptor->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthModule -->\n\nSigninComponent->AuthModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthModule -->\n\nSignoutComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nInboxModule\n\nInboxModule\n\nInboxModule -->\n\nSharedModule->InboxModule\n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nSharedModule->InputComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nSharedModule->ModalComponent \n\n\n\n\n\nEmailCreateComponent\n\nEmailCreateComponent\n\nInboxModule -->\n\nEmailCreateComponent->InboxModule\n\n\n\n\n\nEmailFormComponent\n\nEmailFormComponent\n\nInboxModule -->\n\nEmailFormComponent->InboxModule\n\n\n\n\n\nEmailIndexComponent\n\nEmailIndexComponent\n\nInboxModule -->\n\nEmailIndexComponent->InboxModule\n\n\n\n\n\nEmailReplyComponent\n\nEmailReplyComponent\n\nInboxModule -->\n\nEmailReplyComponent->InboxModule\n\n\n\n\n\nEmailShowComponent\n\nEmailShowComponent\n\nInboxModule -->\n\nEmailShowComponent->InboxModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nInboxModule -->\n\nHomeComponent->InboxModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nInboxModule -->\n\nNotFoundComponent->InboxModule\n\n\n\n\n\nPlaceholderComponent\n\nPlaceholderComponent\n\nInboxModule -->\n\nPlaceholderComponent->InboxModule\n\n\n\n\n\nInboxRoutingModule\n\nInboxRoutingModule\n\nInboxModule -->\n\nInboxRoutingModule->InboxModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nSharedModule -->\n\nInputComponent->SharedModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nSharedModule -->\n\nModalComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sendEmailResponse.html":{"url":"interfaces/sendEmailResponse.html","title":"interface - sendEmailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  sendEmailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/inbox/email.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Email} from './email';\n\nexport interface ResponseGetEmails{\n  id: string;\n  subject: string;\n  from: string;\n}\n\nexport interface sendEmailResponse {\n  status: string;\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  rootUrl = 'https://api.angular-email.com'\n\n  constructor(private http: HttpClient) { }\n\n  getEmails(){\n    return this.http.get(`${this.rootUrl}/emails`);\n  }\n  getEmail(id: string){\n    return this.http.get(`${this.rootUrl}/emails/${id}`);\t\n  }\n  sendEmail(email: Email){\n    return this.http.post(`${this.rootUrl}/emails`,email)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
